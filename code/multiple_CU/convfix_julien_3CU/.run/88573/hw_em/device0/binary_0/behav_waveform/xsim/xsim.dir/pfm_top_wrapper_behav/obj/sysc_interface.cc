#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/pfm_top_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_7(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<7, sc_dt::sc_bv<7> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_10(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<10, sc_dt::sc_bv<10> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_11(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<11, sc_dt::sc_bv<11> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_12(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<12, sc_dt::sc_bv<12> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_14(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<14, sc_dt::sc_bv<14> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_15(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<15, sc_dt::sc_bv<15> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_16(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<16, sc_dt::sc_bv<16> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_17(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<17, sc_dt::sc_bv<17> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_18(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<18, sc_dt::sc_bv<18> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_20(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<20, sc_dt::sc_bv<20> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_22(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<22, sc_dt::sc_bv<22> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_31(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<31, sc_dt::sc_bv<31> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_33(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<33, sc_dt::sc_bv<33> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_37(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<37, sc_dt::sc_bv<37> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_38(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<38, sc_dt::sc_bv<38> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_44(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<44, sc_dt::sc_bv<44> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_62(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<62, sc_dt::sc_bv<62> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_72(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<72, sc_dt::sc_bv<72> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_114(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<114, sc_dt::sc_bv<114> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_128(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<128, sc_dt::sc_bv<128> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_160(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<160, sc_dt::sc_bv<160> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_256(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<256, sc_dt::sc_bv<256> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_320(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<320, sc_dt::sc_bv<320> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_352(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<352, sc_dt::sc_bv<352> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_704(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<704, sc_dt::sc_bv<704> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_auto_cc_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.auto_cc");
        sc_inst_1->xsim_set_dbg_index(2709);
        xsim_sc_channel<0, bool > *p_1_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aclk.bind(*p_1_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_aresetn.bind(*p_1_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_awprot.bind(*p_1_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(7950280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(7950504);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(7950560);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(7950616);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_axi_arprot.bind(*p_1_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(7950896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(7950952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(7951008);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(7951064);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<0, bool > *p_1_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aclk.bind(*p_1_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_1_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_aresetn.bind(*p_1_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_awaddr.bind(*p_1_m_axi_awaddr);
        p_1_m_axi_awaddr->set_sv_netview_offsetfromdp(7951288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_awprot.bind(*p_1_m_axi_awprot);
        p_1_m_axi_awprot->set_sv_netview_offsetfromdp(7951344);
        xsim_sc_channel<0, bool > *p_1_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awvalid.bind(*p_1_m_axi_awvalid);
        p_1_m_axi_awvalid->set_sv_netview_offsetfromdp(7951400);
        xsim_sc_channel<0, bool > *p_1_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_awready.bind(*p_1_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_wdata.bind(*p_1_m_axi_wdata);
        p_1_m_axi_wdata->set_sv_netview_offsetfromdp(7951512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->m_axi_wstrb.bind(*p_1_m_axi_wstrb);
        p_1_m_axi_wstrb->set_sv_netview_offsetfromdp(7951568);
        xsim_sc_channel<0, bool > *p_1_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wvalid.bind(*p_1_m_axi_wvalid);
        p_1_m_axi_wvalid->set_sv_netview_offsetfromdp(7951624);
        xsim_sc_channel<0, bool > *p_1_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_wready.bind(*p_1_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_bresp.bind(*p_1_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bvalid.bind(*p_1_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_bready.bind(*p_1_m_axi_bready);
        p_1_m_axi_bready->set_sv_netview_offsetfromdp(7951848);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->m_axi_araddr.bind(*p_1_m_axi_araddr);
        p_1_m_axi_araddr->set_sv_netview_offsetfromdp(7951904);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->m_axi_arprot.bind(*p_1_m_axi_arprot);
        p_1_m_axi_arprot->set_sv_netview_offsetfromdp(7951960);
        xsim_sc_channel<0, bool > *p_1_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arvalid.bind(*p_1_m_axi_arvalid);
        p_1_m_axi_arvalid->set_sv_netview_offsetfromdp(7952016);
        xsim_sc_channel<0, bool > *p_1_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_arready.bind(*p_1_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->m_axi_rdata.bind(*p_1_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->m_axi_rresp.bind(*p_1_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_1_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rvalid.bind(*p_1_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_1_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->m_axi_rready.bind(*p_1_m_axi_rready);
        p_1_m_axi_rready->set_sv_netview_offsetfromdp(7952296);
        sc_inst_2 = new pfm_dynamic_m00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m00_couplers.m00_regslice");
        sc_inst_2->xsim_set_dbg_index(2710);
        xsim_sc_channel<0, bool > *p_2_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_2->aclk.bind(*p_2_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aclk);
        xsim_sc_channel<0, bool > *p_2_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->aresetn.bind(*p_2_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(7952680);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(7952904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(7952960);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(7953016);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(7953296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(7953352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(7953408);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(7953464);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_awaddr.bind(*p_2_m_axi_awaddr);
        p_2_m_axi_awaddr->set_sv_netview_offsetfromdp(7953576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_awprot.bind(*p_2_m_axi_awprot);
        p_2_m_axi_awprot->set_sv_netview_offsetfromdp(7953632);
        xsim_sc_channel<0, bool > *p_2_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awvalid.bind(*p_2_m_axi_awvalid);
        p_2_m_axi_awvalid->set_sv_netview_offsetfromdp(7953688);
        xsim_sc_channel<0, bool > *p_2_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_awready.bind(*p_2_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_wdata.bind(*p_2_m_axi_wdata);
        p_2_m_axi_wdata->set_sv_netview_offsetfromdp(7953800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->m_axi_wstrb.bind(*p_2_m_axi_wstrb);
        p_2_m_axi_wstrb->set_sv_netview_offsetfromdp(7953856);
        xsim_sc_channel<0, bool > *p_2_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wvalid.bind(*p_2_m_axi_wvalid);
        p_2_m_axi_wvalid->set_sv_netview_offsetfromdp(7953912);
        xsim_sc_channel<0, bool > *p_2_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_wready.bind(*p_2_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_bresp.bind(*p_2_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bvalid.bind(*p_2_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_bready.bind(*p_2_m_axi_bready);
        p_2_m_axi_bready->set_sv_netview_offsetfromdp(7954136);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axi_araddr.bind(*p_2_m_axi_araddr);
        p_2_m_axi_araddr->set_sv_netview_offsetfromdp(7954192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->m_axi_arprot.bind(*p_2_m_axi_arprot);
        p_2_m_axi_arprot->set_sv_netview_offsetfromdp(7954248);
        xsim_sc_channel<0, bool > *p_2_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arvalid.bind(*p_2_m_axi_arvalid);
        p_2_m_axi_arvalid->set_sv_netview_offsetfromdp(7954304);
        xsim_sc_channel<0, bool > *p_2_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_arready.bind(*p_2_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->m_axi_rdata.bind(*p_2_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->m_axi_rresp.bind(*p_2_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_2_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rvalid.bind(*p_2_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_2_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axi_rready.bind(*p_2_m_axi_rready);
        p_2_m_axi_rready->set_sv_netview_offsetfromdp(7954584);
        sc_inst_3 = new pfm_dynamic_auto_cc_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.auto_cc");
        sc_inst_3->xsim_set_dbg_index(2751);
        xsim_sc_channel<0, bool > *p_3_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aclk.bind(*p_3_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_aresetn.bind(*p_3_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot.bind(*p_3_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(7990456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(7990680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(7990736);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(7990792);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot.bind(*p_3_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(7991072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(7991128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(7991184);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(7991240);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aclk.bind(*p_3_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_3_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_aresetn.bind(*p_3_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_awaddr.bind(*p_3_m_axi_awaddr);
        p_3_m_axi_awaddr->set_sv_netview_offsetfromdp(7991464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_awprot.bind(*p_3_m_axi_awprot);
        p_3_m_axi_awprot->set_sv_netview_offsetfromdp(7991520);
        xsim_sc_channel<0, bool > *p_3_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awvalid.bind(*p_3_m_axi_awvalid);
        p_3_m_axi_awvalid->set_sv_netview_offsetfromdp(7991576);
        xsim_sc_channel<0, bool > *p_3_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_awready.bind(*p_3_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_wdata.bind(*p_3_m_axi_wdata);
        p_3_m_axi_wdata->set_sv_netview_offsetfromdp(7991688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->m_axi_wstrb.bind(*p_3_m_axi_wstrb);
        p_3_m_axi_wstrb->set_sv_netview_offsetfromdp(7991744);
        xsim_sc_channel<0, bool > *p_3_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wvalid.bind(*p_3_m_axi_wvalid);
        p_3_m_axi_wvalid->set_sv_netview_offsetfromdp(7991800);
        xsim_sc_channel<0, bool > *p_3_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_wready.bind(*p_3_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_bresp.bind(*p_3_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bvalid.bind(*p_3_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_bready.bind(*p_3_m_axi_bready);
        p_3_m_axi_bready->set_sv_netview_offsetfromdp(7992024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axi_araddr.bind(*p_3_m_axi_araddr);
        p_3_m_axi_araddr->set_sv_netview_offsetfromdp(7992080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->m_axi_arprot.bind(*p_3_m_axi_arprot);
        p_3_m_axi_arprot->set_sv_netview_offsetfromdp(7992136);
        xsim_sc_channel<0, bool > *p_3_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arvalid.bind(*p_3_m_axi_arvalid);
        p_3_m_axi_arvalid->set_sv_netview_offsetfromdp(7992192);
        xsim_sc_channel<0, bool > *p_3_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_arready.bind(*p_3_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->m_axi_rdata.bind(*p_3_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->m_axi_rresp.bind(*p_3_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_3_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rvalid.bind(*p_3_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_3_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axi_rready.bind(*p_3_m_axi_rready);
        p_3_m_axi_rready->set_sv_netview_offsetfromdp(7992472);
        sc_inst_4 = new pfm_dynamic_m01_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m01_couplers.m01_regslice");
        sc_inst_4->xsim_set_dbg_index(2752);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_awaddr.bind(*p_4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_awprot.bind(*p_4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awvalid.bind(*p_4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_awready.bind(*p_4_s_axi_awready);
        p_4_s_axi_awready->set_sv_netview_offsetfromdp(7992856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_wdata.bind(*p_4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->s_axi_wstrb.bind(*p_4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wvalid.bind(*p_4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_wready.bind(*p_4_s_axi_wready);
        p_4_s_axi_wready->set_sv_netview_offsetfromdp(7993080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_bresp.bind(*p_4_s_axi_bresp);
        p_4_s_axi_bresp->set_sv_netview_offsetfromdp(7993136);
        xsim_sc_channel<0, bool > *p_4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bvalid.bind(*p_4_s_axi_bvalid);
        p_4_s_axi_bvalid->set_sv_netview_offsetfromdp(7993192);
        xsim_sc_channel<0, bool > *p_4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_bready.bind(*p_4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->s_axi_araddr.bind(*p_4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->s_axi_arprot.bind(*p_4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arvalid.bind(*p_4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_arready.bind(*p_4_s_axi_arready);
        p_4_s_axi_arready->set_sv_netview_offsetfromdp(7993472);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->s_axi_rdata.bind(*p_4_s_axi_rdata);
        p_4_s_axi_rdata->set_sv_netview_offsetfromdp(7993528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->s_axi_rresp.bind(*p_4_s_axi_rresp);
        p_4_s_axi_rresp->set_sv_netview_offsetfromdp(7993584);
        xsim_sc_channel<0, bool > *p_4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rvalid.bind(*p_4_s_axi_rvalid);
        p_4_s_axi_rvalid->set_sv_netview_offsetfromdp(7993640);
        xsim_sc_channel<0, bool > *p_4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->s_axi_rready.bind(*p_4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_awaddr.bind(*p_4_m_axi_awaddr);
        p_4_m_axi_awaddr->set_sv_netview_offsetfromdp(7993752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_awprot.bind(*p_4_m_axi_awprot);
        p_4_m_axi_awprot->set_sv_netview_offsetfromdp(7993808);
        xsim_sc_channel<0, bool > *p_4_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awvalid.bind(*p_4_m_axi_awvalid);
        p_4_m_axi_awvalid->set_sv_netview_offsetfromdp(7993864);
        xsim_sc_channel<0, bool > *p_4_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_awready.bind(*p_4_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_wdata.bind(*p_4_m_axi_wdata);
        p_4_m_axi_wdata->set_sv_netview_offsetfromdp(7993976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->m_axi_wstrb.bind(*p_4_m_axi_wstrb);
        p_4_m_axi_wstrb->set_sv_netview_offsetfromdp(7994032);
        xsim_sc_channel<0, bool > *p_4_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wvalid.bind(*p_4_m_axi_wvalid);
        p_4_m_axi_wvalid->set_sv_netview_offsetfromdp(7994088);
        xsim_sc_channel<0, bool > *p_4_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_wready.bind(*p_4_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_bresp.bind(*p_4_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bvalid.bind(*p_4_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_bready.bind(*p_4_m_axi_bready);
        p_4_m_axi_bready->set_sv_netview_offsetfromdp(7994312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->m_axi_araddr.bind(*p_4_m_axi_araddr);
        p_4_m_axi_araddr->set_sv_netview_offsetfromdp(7994368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->m_axi_arprot.bind(*p_4_m_axi_arprot);
        p_4_m_axi_arprot->set_sv_netview_offsetfromdp(7994424);
        xsim_sc_channel<0, bool > *p_4_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arvalid.bind(*p_4_m_axi_arvalid);
        p_4_m_axi_arvalid->set_sv_netview_offsetfromdp(7994480);
        xsim_sc_channel<0, bool > *p_4_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_arready.bind(*p_4_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->m_axi_rdata.bind(*p_4_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->m_axi_rresp.bind(*p_4_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_4_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rvalid.bind(*p_4_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_4_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_4->m_axi_rready.bind(*p_4_m_axi_rready);
        p_4_m_axi_rready->set_sv_netview_offsetfromdp(7994760);
        sc_inst_5 = new pfm_dynamic_auto_cc_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.auto_cc");
        sc_inst_5->xsim_set_dbg_index(2793);
        xsim_sc_channel<0, bool > *p_5_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aclk.bind(*p_5_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_aresetn.bind(*p_5_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_awaddr.bind(*p_5_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_awprot.bind(*p_5_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awvalid.bind(*p_5_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_awready.bind(*p_5_s_axi_awready);
        p_5_s_axi_awready->set_sv_netview_offsetfromdp(8031784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_wdata.bind(*p_5_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->s_axi_wstrb.bind(*p_5_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_5_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wvalid.bind(*p_5_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_wready.bind(*p_5_s_axi_wready);
        p_5_s_axi_wready->set_sv_netview_offsetfromdp(8032008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_bresp.bind(*p_5_s_axi_bresp);
        p_5_s_axi_bresp->set_sv_netview_offsetfromdp(8032064);
        xsim_sc_channel<0, bool > *p_5_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bvalid.bind(*p_5_s_axi_bvalid);
        p_5_s_axi_bvalid->set_sv_netview_offsetfromdp(8032120);
        xsim_sc_channel<0, bool > *p_5_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_bready.bind(*p_5_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->s_axi_araddr.bind(*p_5_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->s_axi_arprot.bind(*p_5_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_5_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arvalid.bind(*p_5_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_5_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_arready.bind(*p_5_s_axi_arready);
        p_5_s_axi_arready->set_sv_netview_offsetfromdp(8032400);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->s_axi_rdata.bind(*p_5_s_axi_rdata);
        p_5_s_axi_rdata->set_sv_netview_offsetfromdp(8032456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->s_axi_rresp.bind(*p_5_s_axi_rresp);
        p_5_s_axi_rresp->set_sv_netview_offsetfromdp(8032512);
        xsim_sc_channel<0, bool > *p_5_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rvalid.bind(*p_5_s_axi_rvalid);
        p_5_s_axi_rvalid->set_sv_netview_offsetfromdp(8032568);
        xsim_sc_channel<0, bool > *p_5_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->s_axi_rready.bind(*p_5_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_s_axi_rready);
        xsim_sc_channel<0, bool > *p_5_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aclk.bind(*p_5_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_5_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_aresetn.bind(*p_5_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_awaddr.bind(*p_5_m_axi_awaddr);
        p_5_m_axi_awaddr->set_sv_netview_offsetfromdp(8032792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_awprot.bind(*p_5_m_axi_awprot);
        p_5_m_axi_awprot->set_sv_netview_offsetfromdp(8032848);
        xsim_sc_channel<0, bool > *p_5_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awvalid.bind(*p_5_m_axi_awvalid);
        p_5_m_axi_awvalid->set_sv_netview_offsetfromdp(8032904);
        xsim_sc_channel<0, bool > *p_5_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_awready.bind(*p_5_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_wdata.bind(*p_5_m_axi_wdata);
        p_5_m_axi_wdata->set_sv_netview_offsetfromdp(8033016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_5_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_5->m_axi_wstrb.bind(*p_5_m_axi_wstrb);
        p_5_m_axi_wstrb->set_sv_netview_offsetfromdp(8033072);
        xsim_sc_channel<0, bool > *p_5_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wvalid.bind(*p_5_m_axi_wvalid);
        p_5_m_axi_wvalid->set_sv_netview_offsetfromdp(8033128);
        xsim_sc_channel<0, bool > *p_5_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_wready.bind(*p_5_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_bresp.bind(*p_5_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bvalid.bind(*p_5_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_bready.bind(*p_5_m_axi_bready);
        p_5_m_axi_bready->set_sv_netview_offsetfromdp(8033352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_5_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_5->m_axi_araddr.bind(*p_5_m_axi_araddr);
        p_5_m_axi_araddr->set_sv_netview_offsetfromdp(8033408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_5_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_5->m_axi_arprot.bind(*p_5_m_axi_arprot);
        p_5_m_axi_arprot->set_sv_netview_offsetfromdp(8033464);
        xsim_sc_channel<0, bool > *p_5_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arvalid.bind(*p_5_m_axi_arvalid);
        p_5_m_axi_arvalid->set_sv_netview_offsetfromdp(8033520);
        xsim_sc_channel<0, bool > *p_5_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_arready.bind(*p_5_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_5_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_5->m_axi_rdata.bind(*p_5_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_5_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_5->m_axi_rresp.bind(*p_5_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_5_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rvalid.bind(*p_5_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_5_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_5_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_5->m_axi_rready.bind(*p_5_m_axi_rready);
        p_5_m_axi_rready->set_sv_netview_offsetfromdp(8033800);
        sc_inst_6 = new pfm_dynamic_m02_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m02_couplers.m02_regslice");
        sc_inst_6->xsim_set_dbg_index(2794);
        xsim_sc_channel<0, bool > *p_6_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->aclk.bind(*p_6_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aclk);
        xsim_sc_channel<0, bool > *p_6_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->aresetn.bind(*p_6_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_awaddr.bind(*p_6_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_awprot.bind(*p_6_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awvalid.bind(*p_6_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_awready.bind(*p_6_s_axi_awready);
        p_6_s_axi_awready->set_sv_netview_offsetfromdp(8034184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_wdata.bind(*p_6_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_axi_wstrb.bind(*p_6_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wvalid.bind(*p_6_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_wready.bind(*p_6_s_axi_wready);
        p_6_s_axi_wready->set_sv_netview_offsetfromdp(8034408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_bresp.bind(*p_6_s_axi_bresp);
        p_6_s_axi_bresp->set_sv_netview_offsetfromdp(8034464);
        xsim_sc_channel<0, bool > *p_6_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bvalid.bind(*p_6_s_axi_bvalid);
        p_6_s_axi_bvalid->set_sv_netview_offsetfromdp(8034520);
        xsim_sc_channel<0, bool > *p_6_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_bready.bind(*p_6_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_axi_araddr.bind(*p_6_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_axi_arprot.bind(*p_6_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_6_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arvalid.bind(*p_6_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_arready.bind(*p_6_s_axi_arready);
        p_6_s_axi_arready->set_sv_netview_offsetfromdp(8034800);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_axi_rdata.bind(*p_6_s_axi_rdata);
        p_6_s_axi_rdata->set_sv_netview_offsetfromdp(8034856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_axi_rresp.bind(*p_6_s_axi_rresp);
        p_6_s_axi_rresp->set_sv_netview_offsetfromdp(8034912);
        xsim_sc_channel<0, bool > *p_6_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rvalid.bind(*p_6_s_axi_rvalid);
        p_6_s_axi_rvalid->set_sv_netview_offsetfromdp(8034968);
        xsim_sc_channel<0, bool > *p_6_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_axi_rready.bind(*p_6_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_awaddr.bind(*p_6_m_axi_awaddr);
        p_6_m_axi_awaddr->set_sv_netview_offsetfromdp(8035080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_awprot.bind(*p_6_m_axi_awprot);
        p_6_m_axi_awprot->set_sv_netview_offsetfromdp(8035136);
        xsim_sc_channel<0, bool > *p_6_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awvalid.bind(*p_6_m_axi_awvalid);
        p_6_m_axi_awvalid->set_sv_netview_offsetfromdp(8035192);
        xsim_sc_channel<0, bool > *p_6_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_awready.bind(*p_6_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_wdata.bind(*p_6_m_axi_wdata);
        p_6_m_axi_wdata->set_sv_netview_offsetfromdp(8035304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->m_axi_wstrb.bind(*p_6_m_axi_wstrb);
        p_6_m_axi_wstrb->set_sv_netview_offsetfromdp(8035360);
        xsim_sc_channel<0, bool > *p_6_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wvalid.bind(*p_6_m_axi_wvalid);
        p_6_m_axi_wvalid->set_sv_netview_offsetfromdp(8035416);
        xsim_sc_channel<0, bool > *p_6_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_wready.bind(*p_6_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_bresp.bind(*p_6_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bvalid.bind(*p_6_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_bready.bind(*p_6_m_axi_bready);
        p_6_m_axi_bready->set_sv_netview_offsetfromdp(8035640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->m_axi_araddr.bind(*p_6_m_axi_araddr);
        p_6_m_axi_araddr->set_sv_netview_offsetfromdp(8035696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->m_axi_arprot.bind(*p_6_m_axi_arprot);
        p_6_m_axi_arprot->set_sv_netview_offsetfromdp(8035752);
        xsim_sc_channel<0, bool > *p_6_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arvalid.bind(*p_6_m_axi_arvalid);
        p_6_m_axi_arvalid->set_sv_netview_offsetfromdp(8035808);
        xsim_sc_channel<0, bool > *p_6_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_arready.bind(*p_6_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->m_axi_rdata.bind(*p_6_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->m_axi_rresp.bind(*p_6_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_6_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rvalid.bind(*p_6_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_6_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->m_axi_rready.bind(*p_6_m_axi_rready);
        p_6_m_axi_rready->set_sv_netview_offsetfromdp(8036088);
        sc_inst_7 = new pfm_dynamic_auto_cc_6(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.auto_cc");
        sc_inst_7->xsim_set_dbg_index(2837);
        xsim_sc_channel<0, bool > *p_7_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aclk.bind(*p_7_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_aresetn.bind(*p_7_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_awaddr.bind(*p_7_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_awprot.bind(*p_7_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awvalid.bind(*p_7_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_awready.bind(*p_7_s_axi_awready);
        p_7_s_axi_awready->set_sv_netview_offsetfromdp(8071960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_wdata.bind(*p_7_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_axi_wstrb.bind(*p_7_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wvalid.bind(*p_7_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_wready.bind(*p_7_s_axi_wready);
        p_7_s_axi_wready->set_sv_netview_offsetfromdp(8072184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_bresp.bind(*p_7_s_axi_bresp);
        p_7_s_axi_bresp->set_sv_netview_offsetfromdp(8072240);
        xsim_sc_channel<0, bool > *p_7_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bvalid.bind(*p_7_s_axi_bvalid);
        p_7_s_axi_bvalid->set_sv_netview_offsetfromdp(8072296);
        xsim_sc_channel<0, bool > *p_7_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_bready.bind(*p_7_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_axi_araddr.bind(*p_7_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_axi_arprot.bind(*p_7_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_7_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arvalid.bind(*p_7_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_arready.bind(*p_7_s_axi_arready);
        p_7_s_axi_arready->set_sv_netview_offsetfromdp(8072576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_axi_rdata.bind(*p_7_s_axi_rdata);
        p_7_s_axi_rdata->set_sv_netview_offsetfromdp(8072632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_axi_rresp.bind(*p_7_s_axi_rresp);
        p_7_s_axi_rresp->set_sv_netview_offsetfromdp(8072688);
        xsim_sc_channel<0, bool > *p_7_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rvalid.bind(*p_7_s_axi_rvalid);
        p_7_s_axi_rvalid->set_sv_netview_offsetfromdp(8072744);
        xsim_sc_channel<0, bool > *p_7_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_axi_rready.bind(*p_7_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_axi_rready);
        xsim_sc_channel<0, bool > *p_7_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aclk.bind(*p_7_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_aresetn.bind(*p_7_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_awaddr.bind(*p_7_m_axi_awaddr);
        p_7_m_axi_awaddr->set_sv_netview_offsetfromdp(8072968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_awprot.bind(*p_7_m_axi_awprot);
        p_7_m_axi_awprot->set_sv_netview_offsetfromdp(8073024);
        xsim_sc_channel<0, bool > *p_7_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awvalid.bind(*p_7_m_axi_awvalid);
        p_7_m_axi_awvalid->set_sv_netview_offsetfromdp(8073080);
        xsim_sc_channel<0, bool > *p_7_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_awready.bind(*p_7_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_wdata.bind(*p_7_m_axi_wdata);
        p_7_m_axi_wdata->set_sv_netview_offsetfromdp(8073192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->m_axi_wstrb.bind(*p_7_m_axi_wstrb);
        p_7_m_axi_wstrb->set_sv_netview_offsetfromdp(8073248);
        xsim_sc_channel<0, bool > *p_7_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wvalid.bind(*p_7_m_axi_wvalid);
        p_7_m_axi_wvalid->set_sv_netview_offsetfromdp(8073304);
        xsim_sc_channel<0, bool > *p_7_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_wready.bind(*p_7_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_bresp.bind(*p_7_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bvalid.bind(*p_7_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_bready.bind(*p_7_m_axi_bready);
        p_7_m_axi_bready->set_sv_netview_offsetfromdp(8073528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->m_axi_araddr.bind(*p_7_m_axi_araddr);
        p_7_m_axi_araddr->set_sv_netview_offsetfromdp(8073584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->m_axi_arprot.bind(*p_7_m_axi_arprot);
        p_7_m_axi_arprot->set_sv_netview_offsetfromdp(8073640);
        xsim_sc_channel<0, bool > *p_7_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arvalid.bind(*p_7_m_axi_arvalid);
        p_7_m_axi_arvalid->set_sv_netview_offsetfromdp(8073696);
        xsim_sc_channel<0, bool > *p_7_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_arready.bind(*p_7_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->m_axi_rdata.bind(*p_7_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->m_axi_rresp.bind(*p_7_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_7_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rvalid.bind(*p_7_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_7_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->m_axi_rready.bind(*p_7_m_axi_rready);
        p_7_m_axi_rready->set_sv_netview_offsetfromdp(8073976);
        sc_inst_8 = new pfm_dynamic_m03_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m03_couplers.m03_regslice");
        sc_inst_8->xsim_set_dbg_index(2838);
        xsim_sc_channel<0, bool > *p_8_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->aclk.bind(*p_8_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aclk);
        xsim_sc_channel<0, bool > *p_8_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->aresetn.bind(*p_8_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_awaddr.bind(*p_8_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_awprot.bind(*p_8_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awvalid.bind(*p_8_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_awready.bind(*p_8_s_axi_awready);
        p_8_s_axi_awready->set_sv_netview_offsetfromdp(8074360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_wdata.bind(*p_8_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_axi_wstrb.bind(*p_8_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wvalid.bind(*p_8_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_wready.bind(*p_8_s_axi_wready);
        p_8_s_axi_wready->set_sv_netview_offsetfromdp(8074584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_bresp.bind(*p_8_s_axi_bresp);
        p_8_s_axi_bresp->set_sv_netview_offsetfromdp(8074640);
        xsim_sc_channel<0, bool > *p_8_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bvalid.bind(*p_8_s_axi_bvalid);
        p_8_s_axi_bvalid->set_sv_netview_offsetfromdp(8074696);
        xsim_sc_channel<0, bool > *p_8_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_bready.bind(*p_8_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_axi_araddr.bind(*p_8_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_axi_arprot.bind(*p_8_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_8_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arvalid.bind(*p_8_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_arready.bind(*p_8_s_axi_arready);
        p_8_s_axi_arready->set_sv_netview_offsetfromdp(8074976);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_axi_rdata.bind(*p_8_s_axi_rdata);
        p_8_s_axi_rdata->set_sv_netview_offsetfromdp(8075032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_axi_rresp.bind(*p_8_s_axi_rresp);
        p_8_s_axi_rresp->set_sv_netview_offsetfromdp(8075088);
        xsim_sc_channel<0, bool > *p_8_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rvalid.bind(*p_8_s_axi_rvalid);
        p_8_s_axi_rvalid->set_sv_netview_offsetfromdp(8075144);
        xsim_sc_channel<0, bool > *p_8_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_axi_rready.bind(*p_8_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_awaddr.bind(*p_8_m_axi_awaddr);
        p_8_m_axi_awaddr->set_sv_netview_offsetfromdp(8075256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_awprot.bind(*p_8_m_axi_awprot);
        p_8_m_axi_awprot->set_sv_netview_offsetfromdp(8075312);
        xsim_sc_channel<0, bool > *p_8_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awvalid.bind(*p_8_m_axi_awvalid);
        p_8_m_axi_awvalid->set_sv_netview_offsetfromdp(8075368);
        xsim_sc_channel<0, bool > *p_8_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_awready.bind(*p_8_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_wdata.bind(*p_8_m_axi_wdata);
        p_8_m_axi_wdata->set_sv_netview_offsetfromdp(8075480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->m_axi_wstrb.bind(*p_8_m_axi_wstrb);
        p_8_m_axi_wstrb->set_sv_netview_offsetfromdp(8075536);
        xsim_sc_channel<0, bool > *p_8_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wvalid.bind(*p_8_m_axi_wvalid);
        p_8_m_axi_wvalid->set_sv_netview_offsetfromdp(8075592);
        xsim_sc_channel<0, bool > *p_8_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_wready.bind(*p_8_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_bresp.bind(*p_8_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bvalid.bind(*p_8_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_bready.bind(*p_8_m_axi_bready);
        p_8_m_axi_bready->set_sv_netview_offsetfromdp(8075816);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->m_axi_araddr.bind(*p_8_m_axi_araddr);
        p_8_m_axi_araddr->set_sv_netview_offsetfromdp(8075872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->m_axi_arprot.bind(*p_8_m_axi_arprot);
        p_8_m_axi_arprot->set_sv_netview_offsetfromdp(8075928);
        xsim_sc_channel<0, bool > *p_8_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arvalid.bind(*p_8_m_axi_arvalid);
        p_8_m_axi_arvalid->set_sv_netview_offsetfromdp(8075984);
        xsim_sc_channel<0, bool > *p_8_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_arready.bind(*p_8_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->m_axi_rdata.bind(*p_8_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->m_axi_rresp.bind(*p_8_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_8_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rvalid.bind(*p_8_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_8_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->m_axi_rready.bind(*p_8_m_axi_rready);
        p_8_m_axi_rready->set_sv_netview_offsetfromdp(8076264);
        sc_inst_9 = new pfm_dynamic_auto_cc_7(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.auto_cc");
        sc_inst_9->xsim_set_dbg_index(2879);
        xsim_sc_channel<0, bool > *p_9_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aclk.bind(*p_9_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_aresetn.bind(*p_9_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_awaddr.bind(*p_9_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_awprot.bind(*p_9_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awvalid.bind(*p_9_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_awready.bind(*p_9_s_axi_awready);
        p_9_s_axi_awready->set_sv_netview_offsetfromdp(8112136);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_wdata.bind(*p_9_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s_axi_wstrb.bind(*p_9_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wvalid.bind(*p_9_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_wready.bind(*p_9_s_axi_wready);
        p_9_s_axi_wready->set_sv_netview_offsetfromdp(8112360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_bresp.bind(*p_9_s_axi_bresp);
        p_9_s_axi_bresp->set_sv_netview_offsetfromdp(8112416);
        xsim_sc_channel<0, bool > *p_9_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bvalid.bind(*p_9_s_axi_bvalid);
        p_9_s_axi_bvalid->set_sv_netview_offsetfromdp(8112472);
        xsim_sc_channel<0, bool > *p_9_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_bready.bind(*p_9_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s_axi_araddr.bind(*p_9_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s_axi_arprot.bind(*p_9_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_9_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arvalid.bind(*p_9_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_arready.bind(*p_9_s_axi_arready);
        p_9_s_axi_arready->set_sv_netview_offsetfromdp(8112752);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s_axi_rdata.bind(*p_9_s_axi_rdata);
        p_9_s_axi_rdata->set_sv_netview_offsetfromdp(8112808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s_axi_rresp.bind(*p_9_s_axi_rresp);
        p_9_s_axi_rresp->set_sv_netview_offsetfromdp(8112864);
        xsim_sc_channel<0, bool > *p_9_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rvalid.bind(*p_9_s_axi_rvalid);
        p_9_s_axi_rvalid->set_sv_netview_offsetfromdp(8112920);
        xsim_sc_channel<0, bool > *p_9_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s_axi_rready.bind(*p_9_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s_axi_rready);
        xsim_sc_channel<0, bool > *p_9_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aclk.bind(*p_9_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_aresetn.bind(*p_9_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_awaddr.bind(*p_9_m_axi_awaddr);
        p_9_m_axi_awaddr->set_sv_netview_offsetfromdp(8113144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_awprot.bind(*p_9_m_axi_awprot);
        p_9_m_axi_awprot->set_sv_netview_offsetfromdp(8113200);
        xsim_sc_channel<0, bool > *p_9_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awvalid.bind(*p_9_m_axi_awvalid);
        p_9_m_axi_awvalid->set_sv_netview_offsetfromdp(8113256);
        xsim_sc_channel<0, bool > *p_9_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_awready.bind(*p_9_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_wdata.bind(*p_9_m_axi_wdata);
        p_9_m_axi_wdata->set_sv_netview_offsetfromdp(8113368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m_axi_wstrb.bind(*p_9_m_axi_wstrb);
        p_9_m_axi_wstrb->set_sv_netview_offsetfromdp(8113424);
        xsim_sc_channel<0, bool > *p_9_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wvalid.bind(*p_9_m_axi_wvalid);
        p_9_m_axi_wvalid->set_sv_netview_offsetfromdp(8113480);
        xsim_sc_channel<0, bool > *p_9_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_wready.bind(*p_9_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_bresp.bind(*p_9_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bvalid.bind(*p_9_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_bready.bind(*p_9_m_axi_bready);
        p_9_m_axi_bready->set_sv_netview_offsetfromdp(8113704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m_axi_araddr.bind(*p_9_m_axi_araddr);
        p_9_m_axi_araddr->set_sv_netview_offsetfromdp(8113760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m_axi_arprot.bind(*p_9_m_axi_arprot);
        p_9_m_axi_arprot->set_sv_netview_offsetfromdp(8113816);
        xsim_sc_channel<0, bool > *p_9_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arvalid.bind(*p_9_m_axi_arvalid);
        p_9_m_axi_arvalid->set_sv_netview_offsetfromdp(8113872);
        xsim_sc_channel<0, bool > *p_9_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_arready.bind(*p_9_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m_axi_rdata.bind(*p_9_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m_axi_rresp.bind(*p_9_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rvalid.bind(*p_9_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m_axi_rready.bind(*p_9_m_axi_rready);
        p_9_m_axi_rready->set_sv_netview_offsetfromdp(8114152);
        sc_inst_10 = new pfm_dynamic_m04_regslice_5(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m04_couplers.m04_regslice");
        sc_inst_10->xsim_set_dbg_index(2880);
        xsim_sc_channel<0, bool > *p_10_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->aclk.bind(*p_10_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aclk);
        xsim_sc_channel<0, bool > *p_10_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->aresetn.bind(*p_10_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_awaddr.bind(*p_10_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_awprot.bind(*p_10_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awvalid.bind(*p_10_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_awready.bind(*p_10_s_axi_awready);
        p_10_s_axi_awready->set_sv_netview_offsetfromdp(8114536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_wdata.bind(*p_10_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s_axi_wstrb.bind(*p_10_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wvalid.bind(*p_10_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_wready.bind(*p_10_s_axi_wready);
        p_10_s_axi_wready->set_sv_netview_offsetfromdp(8114760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_bresp.bind(*p_10_s_axi_bresp);
        p_10_s_axi_bresp->set_sv_netview_offsetfromdp(8114816);
        xsim_sc_channel<0, bool > *p_10_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bvalid.bind(*p_10_s_axi_bvalid);
        p_10_s_axi_bvalid->set_sv_netview_offsetfromdp(8114872);
        xsim_sc_channel<0, bool > *p_10_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_bready.bind(*p_10_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s_axi_araddr.bind(*p_10_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s_axi_arprot.bind(*p_10_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_10_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arvalid.bind(*p_10_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_arready.bind(*p_10_s_axi_arready);
        p_10_s_axi_arready->set_sv_netview_offsetfromdp(8115152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s_axi_rdata.bind(*p_10_s_axi_rdata);
        p_10_s_axi_rdata->set_sv_netview_offsetfromdp(8115208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s_axi_rresp.bind(*p_10_s_axi_rresp);
        p_10_s_axi_rresp->set_sv_netview_offsetfromdp(8115264);
        xsim_sc_channel<0, bool > *p_10_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rvalid.bind(*p_10_s_axi_rvalid);
        p_10_s_axi_rvalid->set_sv_netview_offsetfromdp(8115320);
        xsim_sc_channel<0, bool > *p_10_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s_axi_rready.bind(*p_10_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_awaddr.bind(*p_10_m_axi_awaddr);
        p_10_m_axi_awaddr->set_sv_netview_offsetfromdp(8115432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_awprot.bind(*p_10_m_axi_awprot);
        p_10_m_axi_awprot->set_sv_netview_offsetfromdp(8115488);
        xsim_sc_channel<0, bool > *p_10_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awvalid.bind(*p_10_m_axi_awvalid);
        p_10_m_axi_awvalid->set_sv_netview_offsetfromdp(8115544);
        xsim_sc_channel<0, bool > *p_10_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_awready.bind(*p_10_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_wdata.bind(*p_10_m_axi_wdata);
        p_10_m_axi_wdata->set_sv_netview_offsetfromdp(8115656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m_axi_wstrb.bind(*p_10_m_axi_wstrb);
        p_10_m_axi_wstrb->set_sv_netview_offsetfromdp(8115712);
        xsim_sc_channel<0, bool > *p_10_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wvalid.bind(*p_10_m_axi_wvalid);
        p_10_m_axi_wvalid->set_sv_netview_offsetfromdp(8115768);
        xsim_sc_channel<0, bool > *p_10_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_wready.bind(*p_10_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_bresp.bind(*p_10_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bvalid.bind(*p_10_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_bready.bind(*p_10_m_axi_bready);
        p_10_m_axi_bready->set_sv_netview_offsetfromdp(8115992);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m_axi_araddr.bind(*p_10_m_axi_araddr);
        p_10_m_axi_araddr->set_sv_netview_offsetfromdp(8116048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m_axi_arprot.bind(*p_10_m_axi_arprot);
        p_10_m_axi_arprot->set_sv_netview_offsetfromdp(8116104);
        xsim_sc_channel<0, bool > *p_10_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arvalid.bind(*p_10_m_axi_arvalid);
        p_10_m_axi_arvalid->set_sv_netview_offsetfromdp(8116160);
        xsim_sc_channel<0, bool > *p_10_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_arready.bind(*p_10_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m_axi_rdata.bind(*p_10_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m_axi_rresp.bind(*p_10_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rvalid.bind(*p_10_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m_axi_rready.bind(*p_10_m_axi_rready);
        p_10_m_axi_rready->set_sv_netview_offsetfromdp(8116440);
        sc_inst_11 = new pfm_dynamic_auto_cc_8(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.auto_cc");
        sc_inst_11->xsim_set_dbg_index(2921);
        xsim_sc_channel<0, bool > *p_11_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aclk.bind(*p_11_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_aresetn.bind(*p_11_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_awaddr.bind(*p_11_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_awprot.bind(*p_11_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awvalid.bind(*p_11_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_awready.bind(*p_11_s_axi_awready);
        p_11_s_axi_awready->set_sv_netview_offsetfromdp(8153464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_wdata.bind(*p_11_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s_axi_wstrb.bind(*p_11_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wvalid.bind(*p_11_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_wready.bind(*p_11_s_axi_wready);
        p_11_s_axi_wready->set_sv_netview_offsetfromdp(8153688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_bresp.bind(*p_11_s_axi_bresp);
        p_11_s_axi_bresp->set_sv_netview_offsetfromdp(8153744);
        xsim_sc_channel<0, bool > *p_11_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bvalid.bind(*p_11_s_axi_bvalid);
        p_11_s_axi_bvalid->set_sv_netview_offsetfromdp(8153800);
        xsim_sc_channel<0, bool > *p_11_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_bready.bind(*p_11_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s_axi_araddr.bind(*p_11_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s_axi_arprot.bind(*p_11_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_11_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arvalid.bind(*p_11_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_arready.bind(*p_11_s_axi_arready);
        p_11_s_axi_arready->set_sv_netview_offsetfromdp(8154080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s_axi_rdata.bind(*p_11_s_axi_rdata);
        p_11_s_axi_rdata->set_sv_netview_offsetfromdp(8154136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s_axi_rresp.bind(*p_11_s_axi_rresp);
        p_11_s_axi_rresp->set_sv_netview_offsetfromdp(8154192);
        xsim_sc_channel<0, bool > *p_11_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rvalid.bind(*p_11_s_axi_rvalid);
        p_11_s_axi_rvalid->set_sv_netview_offsetfromdp(8154248);
        xsim_sc_channel<0, bool > *p_11_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s_axi_rready.bind(*p_11_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s_axi_rready);
        xsim_sc_channel<0, bool > *p_11_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aclk.bind(*p_11_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_aresetn.bind(*p_11_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_awaddr.bind(*p_11_m_axi_awaddr);
        p_11_m_axi_awaddr->set_sv_netview_offsetfromdp(8154472);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_awprot.bind(*p_11_m_axi_awprot);
        p_11_m_axi_awprot->set_sv_netview_offsetfromdp(8154528);
        xsim_sc_channel<0, bool > *p_11_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awvalid.bind(*p_11_m_axi_awvalid);
        p_11_m_axi_awvalid->set_sv_netview_offsetfromdp(8154584);
        xsim_sc_channel<0, bool > *p_11_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_awready.bind(*p_11_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_wdata.bind(*p_11_m_axi_wdata);
        p_11_m_axi_wdata->set_sv_netview_offsetfromdp(8154696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m_axi_wstrb.bind(*p_11_m_axi_wstrb);
        p_11_m_axi_wstrb->set_sv_netview_offsetfromdp(8154752);
        xsim_sc_channel<0, bool > *p_11_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wvalid.bind(*p_11_m_axi_wvalid);
        p_11_m_axi_wvalid->set_sv_netview_offsetfromdp(8154808);
        xsim_sc_channel<0, bool > *p_11_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_wready.bind(*p_11_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_bresp.bind(*p_11_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bvalid.bind(*p_11_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_bready.bind(*p_11_m_axi_bready);
        p_11_m_axi_bready->set_sv_netview_offsetfromdp(8155032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m_axi_araddr.bind(*p_11_m_axi_araddr);
        p_11_m_axi_araddr->set_sv_netview_offsetfromdp(8155088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m_axi_arprot.bind(*p_11_m_axi_arprot);
        p_11_m_axi_arprot->set_sv_netview_offsetfromdp(8155144);
        xsim_sc_channel<0, bool > *p_11_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arvalid.bind(*p_11_m_axi_arvalid);
        p_11_m_axi_arvalid->set_sv_netview_offsetfromdp(8155200);
        xsim_sc_channel<0, bool > *p_11_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_arready.bind(*p_11_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m_axi_rdata.bind(*p_11_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m_axi_rresp.bind(*p_11_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rvalid.bind(*p_11_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m_axi_rready.bind(*p_11_m_axi_rready);
        p_11_m_axi_rready->set_sv_netview_offsetfromdp(8155480);
        sc_inst_12 = new pfm_dynamic_m05_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m05_couplers.m05_regslice");
        sc_inst_12->xsim_set_dbg_index(2922);
        xsim_sc_channel<0, bool > *p_12_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->aclk.bind(*p_12_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aclk);
        xsim_sc_channel<0, bool > *p_12_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->aresetn.bind(*p_12_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_awaddr.bind(*p_12_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_awprot.bind(*p_12_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awvalid.bind(*p_12_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_awready.bind(*p_12_s_axi_awready);
        p_12_s_axi_awready->set_sv_netview_offsetfromdp(8155864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_wdata.bind(*p_12_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s_axi_wstrb.bind(*p_12_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wvalid.bind(*p_12_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_wready.bind(*p_12_s_axi_wready);
        p_12_s_axi_wready->set_sv_netview_offsetfromdp(8156088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_bresp.bind(*p_12_s_axi_bresp);
        p_12_s_axi_bresp->set_sv_netview_offsetfromdp(8156144);
        xsim_sc_channel<0, bool > *p_12_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bvalid.bind(*p_12_s_axi_bvalid);
        p_12_s_axi_bvalid->set_sv_netview_offsetfromdp(8156200);
        xsim_sc_channel<0, bool > *p_12_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_bready.bind(*p_12_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s_axi_araddr.bind(*p_12_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s_axi_arprot.bind(*p_12_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_12_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arvalid.bind(*p_12_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_arready.bind(*p_12_s_axi_arready);
        p_12_s_axi_arready->set_sv_netview_offsetfromdp(8156480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s_axi_rdata.bind(*p_12_s_axi_rdata);
        p_12_s_axi_rdata->set_sv_netview_offsetfromdp(8156536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s_axi_rresp.bind(*p_12_s_axi_rresp);
        p_12_s_axi_rresp->set_sv_netview_offsetfromdp(8156592);
        xsim_sc_channel<0, bool > *p_12_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rvalid.bind(*p_12_s_axi_rvalid);
        p_12_s_axi_rvalid->set_sv_netview_offsetfromdp(8156648);
        xsim_sc_channel<0, bool > *p_12_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s_axi_rready.bind(*p_12_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_awaddr.bind(*p_12_m_axi_awaddr);
        p_12_m_axi_awaddr->set_sv_netview_offsetfromdp(8156760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_awprot.bind(*p_12_m_axi_awprot);
        p_12_m_axi_awprot->set_sv_netview_offsetfromdp(8156816);
        xsim_sc_channel<0, bool > *p_12_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awvalid.bind(*p_12_m_axi_awvalid);
        p_12_m_axi_awvalid->set_sv_netview_offsetfromdp(8156872);
        xsim_sc_channel<0, bool > *p_12_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_awready.bind(*p_12_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_wdata.bind(*p_12_m_axi_wdata);
        p_12_m_axi_wdata->set_sv_netview_offsetfromdp(8156984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m_axi_wstrb.bind(*p_12_m_axi_wstrb);
        p_12_m_axi_wstrb->set_sv_netview_offsetfromdp(8157040);
        xsim_sc_channel<0, bool > *p_12_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wvalid.bind(*p_12_m_axi_wvalid);
        p_12_m_axi_wvalid->set_sv_netview_offsetfromdp(8157096);
        xsim_sc_channel<0, bool > *p_12_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_wready.bind(*p_12_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_bresp.bind(*p_12_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bvalid.bind(*p_12_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_bready.bind(*p_12_m_axi_bready);
        p_12_m_axi_bready->set_sv_netview_offsetfromdp(8157320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m_axi_araddr.bind(*p_12_m_axi_araddr);
        p_12_m_axi_araddr->set_sv_netview_offsetfromdp(8157376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m_axi_arprot.bind(*p_12_m_axi_arprot);
        p_12_m_axi_arprot->set_sv_netview_offsetfromdp(8157432);
        xsim_sc_channel<0, bool > *p_12_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arvalid.bind(*p_12_m_axi_arvalid);
        p_12_m_axi_arvalid->set_sv_netview_offsetfromdp(8157488);
        xsim_sc_channel<0, bool > *p_12_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_arready.bind(*p_12_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m_axi_rdata.bind(*p_12_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m_axi_rresp.bind(*p_12_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rvalid.bind(*p_12_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m_axi_rready.bind(*p_12_m_axi_rready);
        p_12_m_axi_rready->set_sv_netview_offsetfromdp(8157768);
        sc_inst_13 = new pfm_dynamic_auto_cc_9(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m06_couplers.auto_cc");
        sc_inst_13->xsim_set_dbg_index(2965);
        xsim_sc_channel<0, bool > *p_13_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_aclk.bind(*p_13_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_aresetn.bind(*p_13_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_awaddr.bind(*p_13_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_awprot.bind(*p_13_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awvalid.bind(*p_13_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_awready.bind(*p_13_s_axi_awready);
        p_13_s_axi_awready->set_sv_netview_offsetfromdp(8193640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_wdata.bind(*p_13_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s_axi_wstrb.bind(*p_13_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wvalid.bind(*p_13_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_wready.bind(*p_13_s_axi_wready);
        p_13_s_axi_wready->set_sv_netview_offsetfromdp(8193864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_bresp.bind(*p_13_s_axi_bresp);
        p_13_s_axi_bresp->set_sv_netview_offsetfromdp(8193920);
        xsim_sc_channel<0, bool > *p_13_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bvalid.bind(*p_13_s_axi_bvalid);
        p_13_s_axi_bvalid->set_sv_netview_offsetfromdp(8193976);
        xsim_sc_channel<0, bool > *p_13_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_bready.bind(*p_13_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s_axi_araddr.bind(*p_13_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s_axi_arprot.bind(*p_13_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_13_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arvalid.bind(*p_13_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_arready.bind(*p_13_s_axi_arready);
        p_13_s_axi_arready->set_sv_netview_offsetfromdp(8194256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s_axi_rdata.bind(*p_13_s_axi_rdata);
        p_13_s_axi_rdata->set_sv_netview_offsetfromdp(8194312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s_axi_rresp.bind(*p_13_s_axi_rresp);
        p_13_s_axi_rresp->set_sv_netview_offsetfromdp(8194368);
        xsim_sc_channel<0, bool > *p_13_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rvalid.bind(*p_13_s_axi_rvalid);
        p_13_s_axi_rvalid->set_sv_netview_offsetfromdp(8194424);
        xsim_sc_channel<0, bool > *p_13_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s_axi_rready.bind(*p_13_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s_axi_rready);
        xsim_sc_channel<0, bool > *p_13_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_aclk.bind(*p_13_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_aresetn.bind(*p_13_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axi_awaddr.bind(*p_13_m_axi_awaddr);
        p_13_m_axi_awaddr->set_sv_netview_offsetfromdp(8194648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_awprot.bind(*p_13_m_axi_awprot);
        p_13_m_axi_awprot->set_sv_netview_offsetfromdp(8194704);
        xsim_sc_channel<0, bool > *p_13_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awvalid.bind(*p_13_m_axi_awvalid);
        p_13_m_axi_awvalid->set_sv_netview_offsetfromdp(8194760);
        xsim_sc_channel<0, bool > *p_13_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_awready.bind(*p_13_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_wdata.bind(*p_13_m_axi_wdata);
        p_13_m_axi_wdata->set_sv_netview_offsetfromdp(8194872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m_axi_wstrb.bind(*p_13_m_axi_wstrb);
        p_13_m_axi_wstrb->set_sv_netview_offsetfromdp(8194928);
        xsim_sc_channel<0, bool > *p_13_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wvalid.bind(*p_13_m_axi_wvalid);
        p_13_m_axi_wvalid->set_sv_netview_offsetfromdp(8194984);
        xsim_sc_channel<0, bool > *p_13_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_wready.bind(*p_13_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_bresp.bind(*p_13_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bvalid.bind(*p_13_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_bready.bind(*p_13_m_axi_bready);
        p_13_m_axi_bready->set_sv_netview_offsetfromdp(8195208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m_axi_araddr.bind(*p_13_m_axi_araddr);
        p_13_m_axi_araddr->set_sv_netview_offsetfromdp(8195264);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m_axi_arprot.bind(*p_13_m_axi_arprot);
        p_13_m_axi_arprot->set_sv_netview_offsetfromdp(8195320);
        xsim_sc_channel<0, bool > *p_13_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arvalid.bind(*p_13_m_axi_arvalid);
        p_13_m_axi_arvalid->set_sv_netview_offsetfromdp(8195376);
        xsim_sc_channel<0, bool > *p_13_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_arready.bind(*p_13_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m_axi_rdata.bind(*p_13_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m_axi_rresp.bind(*p_13_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rvalid.bind(*p_13_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m_axi_rready.bind(*p_13_m_axi_rready);
        p_13_m_axi_rready->set_sv_netview_offsetfromdp(8195656);
        sc_inst_14 = new pfm_dynamic_m06_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m06_couplers.m06_regslice");
        sc_inst_14->xsim_set_dbg_index(2966);
        xsim_sc_channel<0, bool > *p_14_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_14->aclk.bind(*p_14_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aclk);
        xsim_sc_channel<0, bool > *p_14_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_14->aresetn.bind(*p_14_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_14_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_awaddr.bind(*p_14_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_awprot.bind(*p_14_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awvalid.bind(*p_14_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_awready.bind(*p_14_s_axi_awready);
        p_14_s_axi_awready->set_sv_netview_offsetfromdp(8196040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_wdata.bind(*p_14_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->s_axi_wstrb.bind(*p_14_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_14_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wvalid.bind(*p_14_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_wready.bind(*p_14_s_axi_wready);
        p_14_s_axi_wready->set_sv_netview_offsetfromdp(8196264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_bresp.bind(*p_14_s_axi_bresp);
        p_14_s_axi_bresp->set_sv_netview_offsetfromdp(8196320);
        xsim_sc_channel<0, bool > *p_14_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bvalid.bind(*p_14_s_axi_bvalid);
        p_14_s_axi_bvalid->set_sv_netview_offsetfromdp(8196376);
        xsim_sc_channel<0, bool > *p_14_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_bready.bind(*p_14_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->s_axi_araddr.bind(*p_14_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->s_axi_arprot.bind(*p_14_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_14_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arvalid.bind(*p_14_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_14_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_arready.bind(*p_14_s_axi_arready);
        p_14_s_axi_arready->set_sv_netview_offsetfromdp(8196656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->s_axi_rdata.bind(*p_14_s_axi_rdata);
        p_14_s_axi_rdata->set_sv_netview_offsetfromdp(8196712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->s_axi_rresp.bind(*p_14_s_axi_rresp);
        p_14_s_axi_rresp->set_sv_netview_offsetfromdp(8196768);
        xsim_sc_channel<0, bool > *p_14_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rvalid.bind(*p_14_s_axi_rvalid);
        p_14_s_axi_rvalid->set_sv_netview_offsetfromdp(8196824);
        xsim_sc_channel<0, bool > *p_14_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->s_axi_rready.bind(*p_14_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_awaddr.bind(*p_14_m_axi_awaddr);
        p_14_m_axi_awaddr->set_sv_netview_offsetfromdp(8196936);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_awprot.bind(*p_14_m_axi_awprot);
        p_14_m_axi_awprot->set_sv_netview_offsetfromdp(8196992);
        xsim_sc_channel<0, bool > *p_14_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awvalid.bind(*p_14_m_axi_awvalid);
        p_14_m_axi_awvalid->set_sv_netview_offsetfromdp(8197048);
        xsim_sc_channel<0, bool > *p_14_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_awready.bind(*p_14_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m_axi_wdata.bind(*p_14_m_axi_wdata);
        p_14_m_axi_wdata->set_sv_netview_offsetfromdp(8197160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_14_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_14->m_axi_wstrb.bind(*p_14_m_axi_wstrb);
        p_14_m_axi_wstrb->set_sv_netview_offsetfromdp(8197216);
        xsim_sc_channel<0, bool > *p_14_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wvalid.bind(*p_14_m_axi_wvalid);
        p_14_m_axi_wvalid->set_sv_netview_offsetfromdp(8197272);
        xsim_sc_channel<0, bool > *p_14_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_wready.bind(*p_14_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_bresp.bind(*p_14_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bvalid.bind(*p_14_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_bready.bind(*p_14_m_axi_bready);
        p_14_m_axi_bready->set_sv_netview_offsetfromdp(8197496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_14_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_14->m_axi_araddr.bind(*p_14_m_axi_araddr);
        p_14_m_axi_araddr->set_sv_netview_offsetfromdp(8197552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_14_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_14->m_axi_arprot.bind(*p_14_m_axi_arprot);
        p_14_m_axi_arprot->set_sv_netview_offsetfromdp(8197608);
        xsim_sc_channel<0, bool > *p_14_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arvalid.bind(*p_14_m_axi_arvalid);
        p_14_m_axi_arvalid->set_sv_netview_offsetfromdp(8197664);
        xsim_sc_channel<0, bool > *p_14_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_arready.bind(*p_14_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_14_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_14->m_axi_rdata.bind(*p_14_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_14_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_14->m_axi_rresp.bind(*p_14_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_14_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rvalid.bind(*p_14_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_14_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_14_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_14->m_axi_rready.bind(*p_14_m_axi_rready);
        p_14_m_axi_rready->set_sv_netview_offsetfromdp(8197944);
        sc_inst_15 = new pfm_dynamic_auto_cc_10(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m07_couplers.auto_cc");
        sc_inst_15->xsim_set_dbg_index(3007);
        xsim_sc_channel<0, bool > *p_15_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_aclk.bind(*p_15_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_aresetn.bind(*p_15_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_awaddr.bind(*p_15_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_awprot.bind(*p_15_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_15_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awvalid.bind(*p_15_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_awready.bind(*p_15_s_axi_awready);
        p_15_s_axi_awready->set_sv_netview_offsetfromdp(8233816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_wdata.bind(*p_15_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->s_axi_wstrb.bind(*p_15_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_15_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wvalid.bind(*p_15_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_wready.bind(*p_15_s_axi_wready);
        p_15_s_axi_wready->set_sv_netview_offsetfromdp(8234040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_bresp.bind(*p_15_s_axi_bresp);
        p_15_s_axi_bresp->set_sv_netview_offsetfromdp(8234096);
        xsim_sc_channel<0, bool > *p_15_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bvalid.bind(*p_15_s_axi_bvalid);
        p_15_s_axi_bvalid->set_sv_netview_offsetfromdp(8234152);
        xsim_sc_channel<0, bool > *p_15_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_bready.bind(*p_15_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->s_axi_araddr.bind(*p_15_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->s_axi_arprot.bind(*p_15_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_15_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arvalid.bind(*p_15_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_15_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_arready.bind(*p_15_s_axi_arready);
        p_15_s_axi_arready->set_sv_netview_offsetfromdp(8234432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->s_axi_rdata.bind(*p_15_s_axi_rdata);
        p_15_s_axi_rdata->set_sv_netview_offsetfromdp(8234488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->s_axi_rresp.bind(*p_15_s_axi_rresp);
        p_15_s_axi_rresp->set_sv_netview_offsetfromdp(8234544);
        xsim_sc_channel<0, bool > *p_15_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rvalid.bind(*p_15_s_axi_rvalid);
        p_15_s_axi_rvalid->set_sv_netview_offsetfromdp(8234600);
        xsim_sc_channel<0, bool > *p_15_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->s_axi_rready.bind(*p_15_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_s_axi_rready);
        xsim_sc_channel<0, bool > *p_15_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_aclk.bind(*p_15_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_15_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_aresetn.bind(*p_15_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axi_awaddr.bind(*p_15_m_axi_awaddr);
        p_15_m_axi_awaddr->set_sv_netview_offsetfromdp(8234824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_awprot.bind(*p_15_m_axi_awprot);
        p_15_m_axi_awprot->set_sv_netview_offsetfromdp(8234880);
        xsim_sc_channel<0, bool > *p_15_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_awvalid.bind(*p_15_m_axi_awvalid);
        p_15_m_axi_awvalid->set_sv_netview_offsetfromdp(8234936);
        xsim_sc_channel<0, bool > *p_15_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_awready.bind(*p_15_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m_axi_wdata.bind(*p_15_m_axi_wdata);
        p_15_m_axi_wdata->set_sv_netview_offsetfromdp(8235048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->m_axi_wstrb.bind(*p_15_m_axi_wstrb);
        p_15_m_axi_wstrb->set_sv_netview_offsetfromdp(8235104);
        xsim_sc_channel<0, bool > *p_15_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wvalid.bind(*p_15_m_axi_wvalid);
        p_15_m_axi_wvalid->set_sv_netview_offsetfromdp(8235160);
        xsim_sc_channel<0, bool > *p_15_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_wready.bind(*p_15_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_bresp.bind(*p_15_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_15_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_bvalid.bind(*p_15_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_15_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_bready.bind(*p_15_m_axi_bready);
        p_15_m_axi_bready->set_sv_netview_offsetfromdp(8235384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_15_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_15->m_axi_araddr.bind(*p_15_m_axi_araddr);
        p_15_m_axi_araddr->set_sv_netview_offsetfromdp(8235440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->m_axi_arprot.bind(*p_15_m_axi_arprot);
        p_15_m_axi_arprot->set_sv_netview_offsetfromdp(8235496);
        xsim_sc_channel<0, bool > *p_15_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_arvalid.bind(*p_15_m_axi_arvalid);
        p_15_m_axi_arvalid->set_sv_netview_offsetfromdp(8235552);
        xsim_sc_channel<0, bool > *p_15_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_arready.bind(*p_15_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->m_axi_rdata.bind(*p_15_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->m_axi_rresp.bind(*p_15_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_15_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rvalid.bind(*p_15_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_15_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->m_axi_rready.bind(*p_15_m_axi_rready);
        p_15_m_axi_rready->set_sv_netview_offsetfromdp(8235832);
        sc_inst_16 = new pfm_dynamic_m07_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m07_couplers.m07_regslice");
        sc_inst_16->xsim_set_dbg_index(3008);
        xsim_sc_channel<0, bool > *p_16_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->aclk.bind(*p_16_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aclk);
        xsim_sc_channel<0, bool > *p_16_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->aresetn.bind(*p_16_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_awaddr.bind(*p_16_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_awprot.bind(*p_16_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awvalid.bind(*p_16_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_awready.bind(*p_16_s_axi_awready);
        p_16_s_axi_awready->set_sv_netview_offsetfromdp(8236216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_wdata.bind(*p_16_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s_axi_wstrb.bind(*p_16_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wvalid.bind(*p_16_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_wready.bind(*p_16_s_axi_wready);
        p_16_s_axi_wready->set_sv_netview_offsetfromdp(8236440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_bresp.bind(*p_16_s_axi_bresp);
        p_16_s_axi_bresp->set_sv_netview_offsetfromdp(8236496);
        xsim_sc_channel<0, bool > *p_16_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bvalid.bind(*p_16_s_axi_bvalid);
        p_16_s_axi_bvalid->set_sv_netview_offsetfromdp(8236552);
        xsim_sc_channel<0, bool > *p_16_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_bready.bind(*p_16_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s_axi_araddr.bind(*p_16_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s_axi_arprot.bind(*p_16_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_16_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arvalid.bind(*p_16_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_arready.bind(*p_16_s_axi_arready);
        p_16_s_axi_arready->set_sv_netview_offsetfromdp(8236832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->s_axi_rdata.bind(*p_16_s_axi_rdata);
        p_16_s_axi_rdata->set_sv_netview_offsetfromdp(8236888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s_axi_rresp.bind(*p_16_s_axi_rresp);
        p_16_s_axi_rresp->set_sv_netview_offsetfromdp(8236944);
        xsim_sc_channel<0, bool > *p_16_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rvalid.bind(*p_16_s_axi_rvalid);
        p_16_s_axi_rvalid->set_sv_netview_offsetfromdp(8237000);
        xsim_sc_channel<0, bool > *p_16_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s_axi_rready.bind(*p_16_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axi_awaddr.bind(*p_16_m_axi_awaddr);
        p_16_m_axi_awaddr->set_sv_netview_offsetfromdp(8237112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_awprot.bind(*p_16_m_axi_awprot);
        p_16_m_axi_awprot->set_sv_netview_offsetfromdp(8237168);
        xsim_sc_channel<0, bool > *p_16_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_awvalid.bind(*p_16_m_axi_awvalid);
        p_16_m_axi_awvalid->set_sv_netview_offsetfromdp(8237224);
        xsim_sc_channel<0, bool > *p_16_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_awready.bind(*p_16_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m_axi_wdata.bind(*p_16_m_axi_wdata);
        p_16_m_axi_wdata->set_sv_netview_offsetfromdp(8237336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m_axi_wstrb.bind(*p_16_m_axi_wstrb);
        p_16_m_axi_wstrb->set_sv_netview_offsetfromdp(8237392);
        xsim_sc_channel<0, bool > *p_16_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_wvalid.bind(*p_16_m_axi_wvalid);
        p_16_m_axi_wvalid->set_sv_netview_offsetfromdp(8237448);
        xsim_sc_channel<0, bool > *p_16_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_wready.bind(*p_16_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_bresp.bind(*p_16_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_16_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_bvalid.bind(*p_16_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_bready.bind(*p_16_m_axi_bready);
        p_16_m_axi_bready->set_sv_netview_offsetfromdp(8237672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m_axi_araddr.bind(*p_16_m_axi_araddr);
        p_16_m_axi_araddr->set_sv_netview_offsetfromdp(8237728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m_axi_arprot.bind(*p_16_m_axi_arprot);
        p_16_m_axi_arprot->set_sv_netview_offsetfromdp(8237784);
        xsim_sc_channel<0, bool > *p_16_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_arvalid.bind(*p_16_m_axi_arvalid);
        p_16_m_axi_arvalid->set_sv_netview_offsetfromdp(8237840);
        xsim_sc_channel<0, bool > *p_16_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_arready.bind(*p_16_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_16_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_16->m_axi_rdata.bind(*p_16_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m_axi_rresp.bind(*p_16_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_rvalid.bind(*p_16_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m_axi_rready.bind(*p_16_m_axi_rready);
        p_16_m_axi_rready->set_sv_netview_offsetfromdp(8238120);
        sc_inst_17 = new pfm_dynamic_auto_cc_11(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m08_couplers.auto_cc");
        sc_inst_17->xsim_set_dbg_index(3049);
        xsim_sc_channel<0, bool > *p_17_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_aclk.bind(*p_17_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_aresetn.bind(*p_17_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_awaddr.bind(*p_17_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_awprot.bind(*p_17_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_17_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awvalid.bind(*p_17_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_awready.bind(*p_17_s_axi_awready);
        p_17_s_axi_awready->set_sv_netview_offsetfromdp(8275144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_wdata.bind(*p_17_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_wstrb.bind(*p_17_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_17_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wvalid.bind(*p_17_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_wready.bind(*p_17_s_axi_wready);
        p_17_s_axi_wready->set_sv_netview_offsetfromdp(8275368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_bresp.bind(*p_17_s_axi_bresp);
        p_17_s_axi_bresp->set_sv_netview_offsetfromdp(8275424);
        xsim_sc_channel<0, bool > *p_17_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bvalid.bind(*p_17_s_axi_bvalid);
        p_17_s_axi_bvalid->set_sv_netview_offsetfromdp(8275480);
        xsim_sc_channel<0, bool > *p_17_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_bready.bind(*p_17_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->s_axi_araddr.bind(*p_17_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->s_axi_arprot.bind(*p_17_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_17_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arvalid.bind(*p_17_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_17_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_arready.bind(*p_17_s_axi_arready);
        p_17_s_axi_arready->set_sv_netview_offsetfromdp(8275760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_rdata.bind(*p_17_s_axi_rdata);
        p_17_s_axi_rdata->set_sv_netview_offsetfromdp(8275816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_rresp.bind(*p_17_s_axi_rresp);
        p_17_s_axi_rresp->set_sv_netview_offsetfromdp(8275872);
        xsim_sc_channel<0, bool > *p_17_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rvalid.bind(*p_17_s_axi_rvalid);
        p_17_s_axi_rvalid->set_sv_netview_offsetfromdp(8275928);
        xsim_sc_channel<0, bool > *p_17_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_rready.bind(*p_17_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_rready);
        xsim_sc_channel<0, bool > *p_17_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_aclk.bind(*p_17_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_17_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_aresetn.bind(*p_17_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_awaddr.bind(*p_17_m_axi_awaddr);
        p_17_m_axi_awaddr->set_sv_netview_offsetfromdp(8276152);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_awprot.bind(*p_17_m_axi_awprot);
        p_17_m_axi_awprot->set_sv_netview_offsetfromdp(8276208);
        xsim_sc_channel<0, bool > *p_17_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awvalid.bind(*p_17_m_axi_awvalid);
        p_17_m_axi_awvalid->set_sv_netview_offsetfromdp(8276264);
        xsim_sc_channel<0, bool > *p_17_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_awready.bind(*p_17_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_wdata.bind(*p_17_m_axi_wdata);
        p_17_m_axi_wdata->set_sv_netview_offsetfromdp(8276376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_wstrb.bind(*p_17_m_axi_wstrb);
        p_17_m_axi_wstrb->set_sv_netview_offsetfromdp(8276432);
        xsim_sc_channel<0, bool > *p_17_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wvalid.bind(*p_17_m_axi_wvalid);
        p_17_m_axi_wvalid->set_sv_netview_offsetfromdp(8276488);
        xsim_sc_channel<0, bool > *p_17_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_wready.bind(*p_17_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_bresp.bind(*p_17_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bvalid.bind(*p_17_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_bready.bind(*p_17_m_axi_bready);
        p_17_m_axi_bready->set_sv_netview_offsetfromdp(8276712);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_araddr.bind(*p_17_m_axi_araddr);
        p_17_m_axi_araddr->set_sv_netview_offsetfromdp(8276768);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_arprot.bind(*p_17_m_axi_arprot);
        p_17_m_axi_arprot->set_sv_netview_offsetfromdp(8276824);
        xsim_sc_channel<0, bool > *p_17_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arvalid.bind(*p_17_m_axi_arvalid);
        p_17_m_axi_arvalid->set_sv_netview_offsetfromdp(8276880);
        xsim_sc_channel<0, bool > *p_17_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_arready.bind(*p_17_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->m_axi_rdata.bind(*p_17_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_rresp.bind(*p_17_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_17_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rvalid.bind(*p_17_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_17_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_rready.bind(*p_17_m_axi_rready);
        p_17_m_axi_rready->set_sv_netview_offsetfromdp(8277160);
        sc_inst_18 = new pfm_dynamic_m08_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m08_couplers.m08_regslice");
        sc_inst_18->xsim_set_dbg_index(3050);
        xsim_sc_channel<0, bool > *p_18_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_18->aclk.bind(*p_18_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aclk);
        xsim_sc_channel<0, bool > *p_18_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_18->aresetn.bind(*p_18_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_18_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_awaddr.bind(*p_18_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_awprot.bind(*p_18_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awvalid.bind(*p_18_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_awready.bind(*p_18_s_axi_awready);
        p_18_s_axi_awready->set_sv_netview_offsetfromdp(8277544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_wdata.bind(*p_18_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_wstrb.bind(*p_18_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_18_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wvalid.bind(*p_18_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_wready.bind(*p_18_s_axi_wready);
        p_18_s_axi_wready->set_sv_netview_offsetfromdp(8277768);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_bresp.bind(*p_18_s_axi_bresp);
        p_18_s_axi_bresp->set_sv_netview_offsetfromdp(8277824);
        xsim_sc_channel<0, bool > *p_18_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bvalid.bind(*p_18_s_axi_bvalid);
        p_18_s_axi_bvalid->set_sv_netview_offsetfromdp(8277880);
        xsim_sc_channel<0, bool > *p_18_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_bready.bind(*p_18_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->s_axi_araddr.bind(*p_18_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->s_axi_arprot.bind(*p_18_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_18_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arvalid.bind(*p_18_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_18_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_arready.bind(*p_18_s_axi_arready);
        p_18_s_axi_arready->set_sv_netview_offsetfromdp(8278160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_rdata.bind(*p_18_s_axi_rdata);
        p_18_s_axi_rdata->set_sv_netview_offsetfromdp(8278216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_rresp.bind(*p_18_s_axi_rresp);
        p_18_s_axi_rresp->set_sv_netview_offsetfromdp(8278272);
        xsim_sc_channel<0, bool > *p_18_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rvalid.bind(*p_18_s_axi_rvalid);
        p_18_s_axi_rvalid->set_sv_netview_offsetfromdp(8278328);
        xsim_sc_channel<0, bool > *p_18_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_rready.bind(*p_18_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_awaddr.bind(*p_18_m_axi_awaddr);
        p_18_m_axi_awaddr->set_sv_netview_offsetfromdp(8278440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_awprot.bind(*p_18_m_axi_awprot);
        p_18_m_axi_awprot->set_sv_netview_offsetfromdp(8278496);
        xsim_sc_channel<0, bool > *p_18_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_awvalid.bind(*p_18_m_axi_awvalid);
        p_18_m_axi_awvalid->set_sv_netview_offsetfromdp(8278552);
        xsim_sc_channel<0, bool > *p_18_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_awready.bind(*p_18_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->m_axi_wdata.bind(*p_18_m_axi_wdata);
        p_18_m_axi_wdata->set_sv_netview_offsetfromdp(8278664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_wstrb.bind(*p_18_m_axi_wstrb);
        p_18_m_axi_wstrb->set_sv_netview_offsetfromdp(8278720);
        xsim_sc_channel<0, bool > *p_18_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_wvalid.bind(*p_18_m_axi_wvalid);
        p_18_m_axi_wvalid->set_sv_netview_offsetfromdp(8278776);
        xsim_sc_channel<0, bool > *p_18_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_wready.bind(*p_18_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_bresp.bind(*p_18_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_18_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_bvalid.bind(*p_18_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_18_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_bready.bind(*p_18_m_axi_bready);
        p_18_m_axi_bready->set_sv_netview_offsetfromdp(8279000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_araddr.bind(*p_18_m_axi_araddr);
        p_18_m_axi_araddr->set_sv_netview_offsetfromdp(8279056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_arprot.bind(*p_18_m_axi_arprot);
        p_18_m_axi_arprot->set_sv_netview_offsetfromdp(8279112);
        xsim_sc_channel<0, bool > *p_18_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_arvalid.bind(*p_18_m_axi_arvalid);
        p_18_m_axi_arvalid->set_sv_netview_offsetfromdp(8279168);
        xsim_sc_channel<0, bool > *p_18_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_arready.bind(*p_18_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->m_axi_rdata.bind(*p_18_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_rresp.bind(*p_18_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_18_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_rvalid.bind(*p_18_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_18_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_rready.bind(*p_18_m_axi_rready);
        p_18_m_axi_rready->set_sv_netview_offsetfromdp(8279448);
        sc_inst_19 = new pfm_dynamic_auto_cc_12(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m09_couplers.auto_cc");
        sc_inst_19->xsim_set_dbg_index(3093);
        xsim_sc_channel<0, bool > *p_19_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_aclk.bind(*p_19_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_19_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_aresetn.bind(*p_19_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_awaddr.bind(*p_19_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_awprot.bind(*p_19_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_19_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awvalid.bind(*p_19_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_awready.bind(*p_19_s_axi_awready);
        p_19_s_axi_awready->set_sv_netview_offsetfromdp(8315320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_wdata.bind(*p_19_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_wstrb.bind(*p_19_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_19_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wvalid.bind(*p_19_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_wready.bind(*p_19_s_axi_wready);
        p_19_s_axi_wready->set_sv_netview_offsetfromdp(8315544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_bresp.bind(*p_19_s_axi_bresp);
        p_19_s_axi_bresp->set_sv_netview_offsetfromdp(8315600);
        xsim_sc_channel<0, bool > *p_19_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bvalid.bind(*p_19_s_axi_bvalid);
        p_19_s_axi_bvalid->set_sv_netview_offsetfromdp(8315656);
        xsim_sc_channel<0, bool > *p_19_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_bready.bind(*p_19_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->s_axi_araddr.bind(*p_19_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->s_axi_arprot.bind(*p_19_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_19_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arvalid.bind(*p_19_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_19_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_arready.bind(*p_19_s_axi_arready);
        p_19_s_axi_arready->set_sv_netview_offsetfromdp(8315936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_rdata.bind(*p_19_s_axi_rdata);
        p_19_s_axi_rdata->set_sv_netview_offsetfromdp(8315992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_rresp.bind(*p_19_s_axi_rresp);
        p_19_s_axi_rresp->set_sv_netview_offsetfromdp(8316048);
        xsim_sc_channel<0, bool > *p_19_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rvalid.bind(*p_19_s_axi_rvalid);
        p_19_s_axi_rvalid->set_sv_netview_offsetfromdp(8316104);
        xsim_sc_channel<0, bool > *p_19_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_rready.bind(*p_19_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_rready);
        xsim_sc_channel<0, bool > *p_19_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_aclk.bind(*p_19_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_19_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_aresetn.bind(*p_19_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_awaddr.bind(*p_19_m_axi_awaddr);
        p_19_m_axi_awaddr->set_sv_netview_offsetfromdp(8316328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_awprot.bind(*p_19_m_axi_awprot);
        p_19_m_axi_awprot->set_sv_netview_offsetfromdp(8316384);
        xsim_sc_channel<0, bool > *p_19_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_awvalid.bind(*p_19_m_axi_awvalid);
        p_19_m_axi_awvalid->set_sv_netview_offsetfromdp(8316440);
        xsim_sc_channel<0, bool > *p_19_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_awready.bind(*p_19_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_axi_wdata.bind(*p_19_m_axi_wdata);
        p_19_m_axi_wdata->set_sv_netview_offsetfromdp(8316552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_wstrb.bind(*p_19_m_axi_wstrb);
        p_19_m_axi_wstrb->set_sv_netview_offsetfromdp(8316608);
        xsim_sc_channel<0, bool > *p_19_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_wvalid.bind(*p_19_m_axi_wvalid);
        p_19_m_axi_wvalid->set_sv_netview_offsetfromdp(8316664);
        xsim_sc_channel<0, bool > *p_19_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_wready.bind(*p_19_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_bresp.bind(*p_19_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_19_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_bvalid.bind(*p_19_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_19_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_bready.bind(*p_19_m_axi_bready);
        p_19_m_axi_bready->set_sv_netview_offsetfromdp(8316888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_araddr.bind(*p_19_m_axi_araddr);
        p_19_m_axi_araddr->set_sv_netview_offsetfromdp(8316944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_arprot.bind(*p_19_m_axi_arprot);
        p_19_m_axi_arprot->set_sv_netview_offsetfromdp(8317000);
        xsim_sc_channel<0, bool > *p_19_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_arvalid.bind(*p_19_m_axi_arvalid);
        p_19_m_axi_arvalid->set_sv_netview_offsetfromdp(8317056);
        xsim_sc_channel<0, bool > *p_19_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_arready.bind(*p_19_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->m_axi_rdata.bind(*p_19_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_rresp.bind(*p_19_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_19_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_rvalid.bind(*p_19_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_19_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_rready.bind(*p_19_m_axi_rready);
        p_19_m_axi_rready->set_sv_netview_offsetfromdp(8317336);
        sc_inst_20 = new pfm_dynamic_m09_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m09_couplers.m09_regslice");
        sc_inst_20->xsim_set_dbg_index(3094);
        xsim_sc_channel<0, bool > *p_20_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_20->aclk.bind(*p_20_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aclk);
        xsim_sc_channel<0, bool > *p_20_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_20->aresetn.bind(*p_20_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_20_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_awaddr.bind(*p_20_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_awprot.bind(*p_20_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_20_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awvalid.bind(*p_20_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_awready.bind(*p_20_s_axi_awready);
        p_20_s_axi_awready->set_sv_netview_offsetfromdp(8317720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_wdata.bind(*p_20_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_wstrb.bind(*p_20_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_20_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wvalid.bind(*p_20_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_wready.bind(*p_20_s_axi_wready);
        p_20_s_axi_wready->set_sv_netview_offsetfromdp(8317944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_bresp.bind(*p_20_s_axi_bresp);
        p_20_s_axi_bresp->set_sv_netview_offsetfromdp(8318000);
        xsim_sc_channel<0, bool > *p_20_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bvalid.bind(*p_20_s_axi_bvalid);
        p_20_s_axi_bvalid->set_sv_netview_offsetfromdp(8318056);
        xsim_sc_channel<0, bool > *p_20_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_bready.bind(*p_20_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->s_axi_araddr.bind(*p_20_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->s_axi_arprot.bind(*p_20_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_20_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arvalid.bind(*p_20_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_20_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_arready.bind(*p_20_s_axi_arready);
        p_20_s_axi_arready->set_sv_netview_offsetfromdp(8318336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_rdata.bind(*p_20_s_axi_rdata);
        p_20_s_axi_rdata->set_sv_netview_offsetfromdp(8318392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_rresp.bind(*p_20_s_axi_rresp);
        p_20_s_axi_rresp->set_sv_netview_offsetfromdp(8318448);
        xsim_sc_channel<0, bool > *p_20_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rvalid.bind(*p_20_s_axi_rvalid);
        p_20_s_axi_rvalid->set_sv_netview_offsetfromdp(8318504);
        xsim_sc_channel<0, bool > *p_20_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_rready.bind(*p_20_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_awaddr.bind(*p_20_m_axi_awaddr);
        p_20_m_axi_awaddr->set_sv_netview_offsetfromdp(8318616);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_awprot.bind(*p_20_m_axi_awprot);
        p_20_m_axi_awprot->set_sv_netview_offsetfromdp(8318672);
        xsim_sc_channel<0, bool > *p_20_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awvalid.bind(*p_20_m_axi_awvalid);
        p_20_m_axi_awvalid->set_sv_netview_offsetfromdp(8318728);
        xsim_sc_channel<0, bool > *p_20_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_awready.bind(*p_20_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_wdata.bind(*p_20_m_axi_wdata);
        p_20_m_axi_wdata->set_sv_netview_offsetfromdp(8318840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_wstrb.bind(*p_20_m_axi_wstrb);
        p_20_m_axi_wstrb->set_sv_netview_offsetfromdp(8318896);
        xsim_sc_channel<0, bool > *p_20_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wvalid.bind(*p_20_m_axi_wvalid);
        p_20_m_axi_wvalid->set_sv_netview_offsetfromdp(8318952);
        xsim_sc_channel<0, bool > *p_20_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_wready.bind(*p_20_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_bresp.bind(*p_20_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bvalid.bind(*p_20_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_bready.bind(*p_20_m_axi_bready);
        p_20_m_axi_bready->set_sv_netview_offsetfromdp(8319176);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_araddr.bind(*p_20_m_axi_araddr);
        p_20_m_axi_araddr->set_sv_netview_offsetfromdp(8319232);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_arprot.bind(*p_20_m_axi_arprot);
        p_20_m_axi_arprot->set_sv_netview_offsetfromdp(8319288);
        xsim_sc_channel<0, bool > *p_20_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arvalid.bind(*p_20_m_axi_arvalid);
        p_20_m_axi_arvalid->set_sv_netview_offsetfromdp(8319344);
        xsim_sc_channel<0, bool > *p_20_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_arready.bind(*p_20_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->m_axi_rdata.bind(*p_20_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_rresp.bind(*p_20_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_20_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rvalid.bind(*p_20_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_20_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_rready.bind(*p_20_m_axi_rready);
        p_20_m_axi_rready->set_sv_netview_offsetfromdp(8319624);
        sc_inst_21 = new pfm_dynamic_auto_cc_13(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m10_couplers.auto_cc");
        sc_inst_21->xsim_set_dbg_index(3135);
        xsim_sc_channel<0, bool > *p_21_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_aclk.bind(*p_21_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_21_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_aresetn.bind(*p_21_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_axi_awaddr.bind(*p_21_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_awprot.bind(*p_21_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awvalid.bind(*p_21_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_awready.bind(*p_21_s_axi_awready);
        p_21_s_axi_awready->set_sv_netview_offsetfromdp(8355496);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_wdata.bind(*p_21_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_axi_wstrb.bind(*p_21_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wvalid.bind(*p_21_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_wready.bind(*p_21_s_axi_wready);
        p_21_s_axi_wready->set_sv_netview_offsetfromdp(8355720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_bresp.bind(*p_21_s_axi_bresp);
        p_21_s_axi_bresp->set_sv_netview_offsetfromdp(8355776);
        xsim_sc_channel<0, bool > *p_21_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bvalid.bind(*p_21_s_axi_bvalid);
        p_21_s_axi_bvalid->set_sv_netview_offsetfromdp(8355832);
        xsim_sc_channel<0, bool > *p_21_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_bready.bind(*p_21_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_axi_araddr.bind(*p_21_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_axi_arprot.bind(*p_21_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_21_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arvalid.bind(*p_21_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_arready.bind(*p_21_s_axi_arready);
        p_21_s_axi_arready->set_sv_netview_offsetfromdp(8356112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_axi_rdata.bind(*p_21_s_axi_rdata);
        p_21_s_axi_rdata->set_sv_netview_offsetfromdp(8356168);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_axi_rresp.bind(*p_21_s_axi_rresp);
        p_21_s_axi_rresp->set_sv_netview_offsetfromdp(8356224);
        xsim_sc_channel<0, bool > *p_21_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rvalid.bind(*p_21_s_axi_rvalid);
        p_21_s_axi_rvalid->set_sv_netview_offsetfromdp(8356280);
        xsim_sc_channel<0, bool > *p_21_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_axi_rready.bind(*p_21_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_axi_rready);
        xsim_sc_channel<0, bool > *p_21_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_aclk.bind(*p_21_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_21_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_aresetn.bind(*p_21_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_awaddr.bind(*p_21_m_axi_awaddr);
        p_21_m_axi_awaddr->set_sv_netview_offsetfromdp(8356504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_awprot.bind(*p_21_m_axi_awprot);
        p_21_m_axi_awprot->set_sv_netview_offsetfromdp(8356560);
        xsim_sc_channel<0, bool > *p_21_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awvalid.bind(*p_21_m_axi_awvalid);
        p_21_m_axi_awvalid->set_sv_netview_offsetfromdp(8356616);
        xsim_sc_channel<0, bool > *p_21_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_awready.bind(*p_21_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_wdata.bind(*p_21_m_axi_wdata);
        p_21_m_axi_wdata->set_sv_netview_offsetfromdp(8356728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->m_axi_wstrb.bind(*p_21_m_axi_wstrb);
        p_21_m_axi_wstrb->set_sv_netview_offsetfromdp(8356784);
        xsim_sc_channel<0, bool > *p_21_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wvalid.bind(*p_21_m_axi_wvalid);
        p_21_m_axi_wvalid->set_sv_netview_offsetfromdp(8356840);
        xsim_sc_channel<0, bool > *p_21_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_wready.bind(*p_21_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_bresp.bind(*p_21_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bvalid.bind(*p_21_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_bready.bind(*p_21_m_axi_bready);
        p_21_m_axi_bready->set_sv_netview_offsetfromdp(8357064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->m_axi_araddr.bind(*p_21_m_axi_araddr);
        p_21_m_axi_araddr->set_sv_netview_offsetfromdp(8357120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->m_axi_arprot.bind(*p_21_m_axi_arprot);
        p_21_m_axi_arprot->set_sv_netview_offsetfromdp(8357176);
        xsim_sc_channel<0, bool > *p_21_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arvalid.bind(*p_21_m_axi_arvalid);
        p_21_m_axi_arvalid->set_sv_netview_offsetfromdp(8357232);
        xsim_sc_channel<0, bool > *p_21_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_arready.bind(*p_21_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->m_axi_rdata.bind(*p_21_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->m_axi_rresp.bind(*p_21_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_21_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rvalid.bind(*p_21_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_21_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->m_axi_rready.bind(*p_21_m_axi_rready);
        p_21_m_axi_rready->set_sv_netview_offsetfromdp(8357512);
        sc_inst_22 = new pfm_dynamic_m10_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.m10_couplers.m10_regslice");
        sc_inst_22->xsim_set_dbg_index(3136);
        xsim_sc_channel<0, bool > *p_22_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->aclk.bind(*p_22_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aclk);
        xsim_sc_channel<0, bool > *p_22_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->aresetn.bind(*p_22_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_aresetn);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_axi_awaddr.bind(*p_22_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_awprot.bind(*p_22_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_22_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awvalid.bind(*p_22_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_awready.bind(*p_22_s_axi_awready);
        p_22_s_axi_awready->set_sv_netview_offsetfromdp(8357896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_wdata.bind(*p_22_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->s_axi_wstrb.bind(*p_22_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_22_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wvalid.bind(*p_22_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_wready.bind(*p_22_s_axi_wready);
        p_22_s_axi_wready->set_sv_netview_offsetfromdp(8358120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_bresp.bind(*p_22_s_axi_bresp);
        p_22_s_axi_bresp->set_sv_netview_offsetfromdp(8358176);
        xsim_sc_channel<0, bool > *p_22_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bvalid.bind(*p_22_s_axi_bvalid);
        p_22_s_axi_bvalid->set_sv_netview_offsetfromdp(8358232);
        xsim_sc_channel<0, bool > *p_22_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_bready.bind(*p_22_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_bready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->s_axi_araddr.bind(*p_22_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->s_axi_arprot.bind(*p_22_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_22_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arvalid.bind(*p_22_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_22_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_arready.bind(*p_22_s_axi_arready);
        p_22_s_axi_arready->set_sv_netview_offsetfromdp(8358512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->s_axi_rdata.bind(*p_22_s_axi_rdata);
        p_22_s_axi_rdata->set_sv_netview_offsetfromdp(8358568);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->s_axi_rresp.bind(*p_22_s_axi_rresp);
        p_22_s_axi_rresp->set_sv_netview_offsetfromdp(8358624);
        xsim_sc_channel<0, bool > *p_22_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rvalid.bind(*p_22_s_axi_rvalid);
        p_22_s_axi_rvalid->set_sv_netview_offsetfromdp(8358680);
        xsim_sc_channel<0, bool > *p_22_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->s_axi_rready.bind(*p_22_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_awaddr.bind(*p_22_m_axi_awaddr);
        p_22_m_axi_awaddr->set_sv_netview_offsetfromdp(8358792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_awprot.bind(*p_22_m_axi_awprot);
        p_22_m_axi_awprot->set_sv_netview_offsetfromdp(8358848);
        xsim_sc_channel<0, bool > *p_22_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awvalid.bind(*p_22_m_axi_awvalid);
        p_22_m_axi_awvalid->set_sv_netview_offsetfromdp(8358904);
        xsim_sc_channel<0, bool > *p_22_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_awready.bind(*p_22_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_wdata.bind(*p_22_m_axi_wdata);
        p_22_m_axi_wdata->set_sv_netview_offsetfromdp(8359016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axi_wstrb.bind(*p_22_m_axi_wstrb);
        p_22_m_axi_wstrb->set_sv_netview_offsetfromdp(8359072);
        xsim_sc_channel<0, bool > *p_22_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wvalid.bind(*p_22_m_axi_wvalid);
        p_22_m_axi_wvalid->set_sv_netview_offsetfromdp(8359128);
        xsim_sc_channel<0, bool > *p_22_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_wready.bind(*p_22_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_bresp.bind(*p_22_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bvalid.bind(*p_22_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_bready.bind(*p_22_m_axi_bready);
        p_22_m_axi_bready->set_sv_netview_offsetfromdp(8359352);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_axi_araddr.bind(*p_22_m_axi_araddr);
        p_22_m_axi_araddr->set_sv_netview_offsetfromdp(8359408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axi_arprot.bind(*p_22_m_axi_arprot);
        p_22_m_axi_arprot->set_sv_netview_offsetfromdp(8359464);
        xsim_sc_channel<0, bool > *p_22_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arvalid.bind(*p_22_m_axi_arvalid);
        p_22_m_axi_arvalid->set_sv_netview_offsetfromdp(8359520);
        xsim_sc_channel<0, bool > *p_22_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_arready.bind(*p_22_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axi_rdata.bind(*p_22_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axi_rresp.bind(*p_22_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rvalid.bind(*p_22_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axi_rready.bind(*p_22_m_axi_rready);
        p_22_m_axi_rready->set_sv_netview_offsetfromdp(8359800);
        sc_inst_23 = new pfm_dynamic_s00_regslice_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.s00_couplers.s00_regslice");
        sc_inst_23->xsim_set_dbg_index(3177);
        xsim_sc_channel<0, bool > *p_23_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_23->aclk.bind(*p_23_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aclk);
        xsim_sc_channel<0, bool > *p_23_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_23->aresetn.bind(*p_23_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_23_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->s_axi_awaddr.bind(*p_23_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_awprot.bind(*p_23_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_23_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awvalid.bind(*p_23_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_awready.bind(*p_23_s_axi_awready);
        p_23_s_axi_awready->set_sv_netview_offsetfromdp(8383440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_wdata.bind(*p_23_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->s_axi_wstrb.bind(*p_23_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_23_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wvalid.bind(*p_23_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_wready.bind(*p_23_s_axi_wready);
        p_23_s_axi_wready->set_sv_netview_offsetfromdp(8383664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_bresp.bind(*p_23_s_axi_bresp);
        p_23_s_axi_bresp->set_sv_netview_offsetfromdp(8383720);
        xsim_sc_channel<0, bool > *p_23_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bvalid.bind(*p_23_s_axi_bvalid);
        p_23_s_axi_bvalid->set_sv_netview_offsetfromdp(8383776);
        xsim_sc_channel<0, bool > *p_23_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_bready.bind(*p_23_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->s_axi_araddr.bind(*p_23_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->s_axi_arprot.bind(*p_23_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_23_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arvalid.bind(*p_23_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_23_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_arready.bind(*p_23_s_axi_arready);
        p_23_s_axi_arready->set_sv_netview_offsetfromdp(8384056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->s_axi_rdata.bind(*p_23_s_axi_rdata);
        p_23_s_axi_rdata->set_sv_netview_offsetfromdp(8384112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->s_axi_rresp.bind(*p_23_s_axi_rresp);
        p_23_s_axi_rresp->set_sv_netview_offsetfromdp(8384168);
        xsim_sc_channel<0, bool > *p_23_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rvalid.bind(*p_23_s_axi_rvalid);
        p_23_s_axi_rvalid->set_sv_netview_offsetfromdp(8384224);
        xsim_sc_channel<0, bool > *p_23_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->s_axi_rready.bind(*p_23_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_awaddr.bind(*p_23_m_axi_awaddr);
        p_23_m_axi_awaddr->set_sv_netview_offsetfromdp(8384336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_awprot.bind(*p_23_m_axi_awprot);
        p_23_m_axi_awprot->set_sv_netview_offsetfromdp(8384392);
        xsim_sc_channel<0, bool > *p_23_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awvalid.bind(*p_23_m_axi_awvalid);
        p_23_m_axi_awvalid->set_sv_netview_offsetfromdp(8384448);
        xsim_sc_channel<0, bool > *p_23_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_awready.bind(*p_23_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_wdata.bind(*p_23_m_axi_wdata);
        p_23_m_axi_wdata->set_sv_netview_offsetfromdp(8384560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_23_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_23->m_axi_wstrb.bind(*p_23_m_axi_wstrb);
        p_23_m_axi_wstrb->set_sv_netview_offsetfromdp(8384616);
        xsim_sc_channel<0, bool > *p_23_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wvalid.bind(*p_23_m_axi_wvalid);
        p_23_m_axi_wvalid->set_sv_netview_offsetfromdp(8384672);
        xsim_sc_channel<0, bool > *p_23_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_wready.bind(*p_23_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_bresp.bind(*p_23_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bvalid.bind(*p_23_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_bready.bind(*p_23_m_axi_bready);
        p_23_m_axi_bready->set_sv_netview_offsetfromdp(8384896);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_23_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_23->m_axi_araddr.bind(*p_23_m_axi_araddr);
        p_23_m_axi_araddr->set_sv_netview_offsetfromdp(8384952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_23_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_23->m_axi_arprot.bind(*p_23_m_axi_arprot);
        p_23_m_axi_arprot->set_sv_netview_offsetfromdp(8385008);
        xsim_sc_channel<0, bool > *p_23_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arvalid.bind(*p_23_m_axi_arvalid);
        p_23_m_axi_arvalid->set_sv_netview_offsetfromdp(8385064);
        xsim_sc_channel<0, bool > *p_23_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_arready.bind(*p_23_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_23_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_23->m_axi_rdata.bind(*p_23_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_23_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_23->m_axi_rresp.bind(*p_23_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_23_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rvalid.bind(*p_23_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_23_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_23_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_23->m_axi_rready.bind(*p_23_m_axi_rready);
        p_23_m_axi_rready->set_sv_netview_offsetfromdp(8385344);
        sc_inst_24 = new pfm_dynamic_xbar_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_ctrl_interconnect.xbar");
        sc_inst_24->xsim_set_dbg_index(936);
        xsim_sc_channel<0, bool > *p_24_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_24->aclk.bind(*p_24_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aclk);
        xsim_sc_channel<0, bool > *p_24_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_24->aresetn.bind(*p_24_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_24_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->s_axi_awaddr.bind(*p_24_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_awprot.bind(*p_24_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_awvalid.bind(*p_24_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_awready.bind(*p_24_s_axi_awready);
        p_24_s_axi_awready->set_sv_netview_offsetfromdp(8385728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_wdata.bind(*p_24_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_24_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_24->s_axi_wstrb.bind(*p_24_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_wvalid.bind(*p_24_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_wready.bind(*p_24_s_axi_wready);
        p_24_s_axi_wready->set_sv_netview_offsetfromdp(8385952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_bresp.bind(*p_24_s_axi_bresp);
        p_24_s_axi_bresp->set_sv_netview_offsetfromdp(8386008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_bvalid.bind(*p_24_s_axi_bvalid);
        p_24_s_axi_bvalid->set_sv_netview_offsetfromdp(8386064);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_bready.bind(*p_24_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_24_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_24->s_axi_araddr.bind(*p_24_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_24_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_24->s_axi_arprot.bind(*p_24_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_arvalid.bind(*p_24_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_arready.bind(*p_24_s_axi_arready);
        p_24_s_axi_arready->set_sv_netview_offsetfromdp(8386344);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_24_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_24->s_axi_rdata.bind(*p_24_s_axi_rdata);
        p_24_s_axi_rdata->set_sv_netview_offsetfromdp(8386400);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_24_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_24->s_axi_rresp.bind(*p_24_s_axi_rresp);
        p_24_s_axi_rresp->set_sv_netview_offsetfromdp(8386456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_rvalid.bind(*p_24_s_axi_rvalid);
        p_24_s_axi_rvalid->set_sv_netview_offsetfromdp(8386512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_24_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_24->s_axi_rready.bind(*p_24_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_s_axi_rready);
        xsim_sc_channel<704, sc_dt::sc_bv<704> > *p_24_m_axi_awaddr = new xsim_sc_channel<704, sc_dt::sc_bv<704> >();
        sc_inst_24->m_axi_awaddr.bind(*p_24_m_axi_awaddr);
        p_24_m_axi_awaddr->set_sv_netview_offsetfromdp(8386624);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_awprot = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_awprot.bind(*p_24_m_axi_awprot);
        p_24_m_axi_awprot->set_sv_netview_offsetfromdp(8386680);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_awvalid = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_awvalid.bind(*p_24_m_axi_awvalid);
        p_24_m_axi_awvalid->set_sv_netview_offsetfromdp(8386736);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_awready = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_awready.bind(*p_24_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_awready);
        xsim_sc_channel<352, sc_dt::sc_bv<352> > *p_24_m_axi_wdata = new xsim_sc_channel<352, sc_dt::sc_bv<352> >();
        sc_inst_24->m_axi_wdata.bind(*p_24_m_axi_wdata);
        p_24_m_axi_wdata->set_sv_netview_offsetfromdp(8386848);
        xsim_sc_channel<44, sc_dt::sc_bv<44> > *p_24_m_axi_wstrb = new xsim_sc_channel<44, sc_dt::sc_bv<44> >();
        sc_inst_24->m_axi_wstrb.bind(*p_24_m_axi_wstrb);
        p_24_m_axi_wstrb->set_sv_netview_offsetfromdp(8386904);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_wvalid = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_wvalid.bind(*p_24_m_axi_wvalid);
        p_24_m_axi_wvalid->set_sv_netview_offsetfromdp(8386960);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_wready = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_wready.bind(*p_24_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_wready);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_24_m_axi_bresp = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_24->m_axi_bresp.bind(*p_24_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bresp);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_bvalid = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_bvalid.bind(*p_24_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_bvalid);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_bready = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_bready.bind(*p_24_m_axi_bready);
        p_24_m_axi_bready->set_sv_netview_offsetfromdp(8387184);
        xsim_sc_channel<704, sc_dt::sc_bv<704> > *p_24_m_axi_araddr = new xsim_sc_channel<704, sc_dt::sc_bv<704> >();
        sc_inst_24->m_axi_araddr.bind(*p_24_m_axi_araddr);
        p_24_m_axi_araddr->set_sv_netview_offsetfromdp(8387240);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_24_m_axi_arprot = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_24->m_axi_arprot.bind(*p_24_m_axi_arprot);
        p_24_m_axi_arprot->set_sv_netview_offsetfromdp(8387296);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_arvalid = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_arvalid.bind(*p_24_m_axi_arvalid);
        p_24_m_axi_arvalid->set_sv_netview_offsetfromdp(8387352);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_arready = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_arready.bind(*p_24_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_arready);
        xsim_sc_channel<352, sc_dt::sc_bv<352> > *p_24_m_axi_rdata = new xsim_sc_channel<352, sc_dt::sc_bv<352> >();
        sc_inst_24->m_axi_rdata.bind(*p_24_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rdata);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_24_m_axi_rresp = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_24->m_axi_rresp.bind(*p_24_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rresp);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_rvalid = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_rvalid.bind(*p_24_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_24_m_axi_rvalid);
        xsim_sc_channel<11, sc_dt::sc_bv<11> > *p_24_m_axi_rready = new xsim_sc_channel<11, sc_dt::sc_bv<11> >();
        sc_inst_24->m_axi_rready.bind(*p_24_m_axi_rready);
        p_24_m_axi_rready->set_sv_netview_offsetfromdp(8387632);
        sc_inst_25 = new pfm_dynamic_dpa_hub_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_hub");
        sc_inst_25->xsim_set_dbg_index(395);
        xsim_sc_channel<0, bool > *p_25_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_clk.bind(*p_25_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_25_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_aresetn.bind(*p_25_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_25_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_clk.bind(*p_25_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_clk);
        xsim_sc_channel<0, bool > *p_25_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_aresetn.bind(*p_25_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_aresetn);
        xsim_sc_channel<0, bool > *p_25_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_25->axilite_clk.bind(*p_25_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_25_axilite_clk);
        xsim_sc_channel<0, bool > *p_25_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_25->axilite_aresetn.bind(*p_25_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_25_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_25_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready0.bind(*p_25_trace_tready0);
        p_25_trace_tready0->set_sv_netview_offsetfromdp(8388072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata0.bind(*p_25_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata0);
        xsim_sc_channel<0, bool > *p_25_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast0.bind(*p_25_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid0.bind(*p_25_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest0.bind(*p_25_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest0);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid0.bind(*p_25_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_25_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready1.bind(*p_25_trace_tready1);
        p_25_trace_tready1->set_sv_netview_offsetfromdp(8388408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata1.bind(*p_25_trace_tdata1);
        p_25_trace_tdata1->set_sv_netview_offsetfromdp(8388464);
        xsim_sc_channel<0, bool > *p_25_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast1.bind(*p_25_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid1.bind(*p_25_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest1.bind(*p_25_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest1);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid1.bind(*p_25_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata2.bind(*p_25_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata2);
        xsim_sc_channel<0, bool > *p_25_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready2.bind(*p_25_trace_tready2);
        p_25_trace_tready2->set_sv_netview_offsetfromdp(8388800);
        xsim_sc_channel<0, bool > *p_25_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast2.bind(*p_25_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid2.bind(*p_25_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest2.bind(*p_25_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest2);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid2.bind(*p_25_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid2);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata3 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata3.bind(*p_25_trace_tdata3);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata3);
        xsim_sc_channel<0, bool > *p_25_trace_tready3 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready3.bind(*p_25_trace_tready3);
        p_25_trace_tready3->set_sv_netview_offsetfromdp(8389136);
        xsim_sc_channel<0, bool > *p_25_trace_tlast3 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast3.bind(*p_25_trace_tlast3);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid3.bind(*p_25_trace_tid3);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid3);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest3 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest3.bind(*p_25_trace_tdest3);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest3);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid3 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid3.bind(*p_25_trace_tvalid3);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid3);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata4 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata4.bind(*p_25_trace_tdata4);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata4);
        xsim_sc_channel<0, bool > *p_25_trace_tready4 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready4.bind(*p_25_trace_tready4);
        p_25_trace_tready4->set_sv_netview_offsetfromdp(8389472);
        xsim_sc_channel<0, bool > *p_25_trace_tlast4 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast4.bind(*p_25_trace_tlast4);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid4.bind(*p_25_trace_tid4);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid4);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest4 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest4.bind(*p_25_trace_tdest4);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest4);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid4 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid4.bind(*p_25_trace_tvalid4);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid4);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata5 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata5.bind(*p_25_trace_tdata5);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata5);
        xsim_sc_channel<0, bool > *p_25_trace_tready5 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready5.bind(*p_25_trace_tready5);
        p_25_trace_tready5->set_sv_netview_offsetfromdp(8389808);
        xsim_sc_channel<0, bool > *p_25_trace_tlast5 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast5.bind(*p_25_trace_tlast5);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid5.bind(*p_25_trace_tid5);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid5);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest5 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest5.bind(*p_25_trace_tdest5);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest5);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid5 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid5.bind(*p_25_trace_tvalid5);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid5);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata6 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata6.bind(*p_25_trace_tdata6);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata6);
        xsim_sc_channel<0, bool > *p_25_trace_tready6 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready6.bind(*p_25_trace_tready6);
        p_25_trace_tready6->set_sv_netview_offsetfromdp(8390144);
        xsim_sc_channel<0, bool > *p_25_trace_tlast6 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast6.bind(*p_25_trace_tlast6);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid6.bind(*p_25_trace_tid6);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid6);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest6 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest6.bind(*p_25_trace_tdest6);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest6);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid6 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid6.bind(*p_25_trace_tvalid6);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid6);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata7 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata7.bind(*p_25_trace_tdata7);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata7);
        xsim_sc_channel<0, bool > *p_25_trace_tready7 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready7.bind(*p_25_trace_tready7);
        p_25_trace_tready7->set_sv_netview_offsetfromdp(8390480);
        xsim_sc_channel<0, bool > *p_25_trace_tlast7 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast7.bind(*p_25_trace_tlast7);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid7.bind(*p_25_trace_tid7);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid7);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest7 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest7.bind(*p_25_trace_tdest7);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest7);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid7 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid7.bind(*p_25_trace_tvalid7);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid7);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata8 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata8.bind(*p_25_trace_tdata8);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata8);
        xsim_sc_channel<0, bool > *p_25_trace_tready8 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready8.bind(*p_25_trace_tready8);
        p_25_trace_tready8->set_sv_netview_offsetfromdp(8390816);
        xsim_sc_channel<0, bool > *p_25_trace_tlast8 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast8.bind(*p_25_trace_tlast8);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid8.bind(*p_25_trace_tid8);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid8);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest8 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest8.bind(*p_25_trace_tdest8);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest8);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid8 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid8.bind(*p_25_trace_tvalid8);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid8);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata9 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata9.bind(*p_25_trace_tdata9);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata9);
        xsim_sc_channel<0, bool > *p_25_trace_tready9 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready9.bind(*p_25_trace_tready9);
        p_25_trace_tready9->set_sv_netview_offsetfromdp(8391152);
        xsim_sc_channel<0, bool > *p_25_trace_tlast9 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast9.bind(*p_25_trace_tlast9);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast9);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid9 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid9.bind(*p_25_trace_tid9);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid9);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest9 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest9.bind(*p_25_trace_tdest9);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest9);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid9 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid9.bind(*p_25_trace_tvalid9);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid9);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata10 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata10.bind(*p_25_trace_tdata10);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata10);
        xsim_sc_channel<0, bool > *p_25_trace_tready10 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready10.bind(*p_25_trace_tready10);
        p_25_trace_tready10->set_sv_netview_offsetfromdp(8391488);
        xsim_sc_channel<0, bool > *p_25_trace_tlast10 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast10.bind(*p_25_trace_tlast10);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid10 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid10.bind(*p_25_trace_tid10);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid10);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest10 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest10.bind(*p_25_trace_tdest10);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest10);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid10 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid10.bind(*p_25_trace_tvalid10);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid10);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata11 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata11.bind(*p_25_trace_tdata11);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata11);
        xsim_sc_channel<0, bool > *p_25_trace_tready11 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready11.bind(*p_25_trace_tready11);
        p_25_trace_tready11->set_sv_netview_offsetfromdp(8391824);
        xsim_sc_channel<0, bool > *p_25_trace_tlast11 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast11.bind(*p_25_trace_tlast11);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast11);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid11 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid11.bind(*p_25_trace_tid11);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid11);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest11 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest11.bind(*p_25_trace_tdest11);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest11);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid11 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid11.bind(*p_25_trace_tvalid11);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid11);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata12 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata12.bind(*p_25_trace_tdata12);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata12);
        xsim_sc_channel<0, bool > *p_25_trace_tready12 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready12.bind(*p_25_trace_tready12);
        p_25_trace_tready12->set_sv_netview_offsetfromdp(8392160);
        xsim_sc_channel<0, bool > *p_25_trace_tlast12 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast12.bind(*p_25_trace_tlast12);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast12);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid12 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid12.bind(*p_25_trace_tid12);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid12);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest12 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest12.bind(*p_25_trace_tdest12);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest12);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid12 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid12.bind(*p_25_trace_tvalid12);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid12);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata13 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata13.bind(*p_25_trace_tdata13);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata13);
        xsim_sc_channel<0, bool > *p_25_trace_tready13 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready13.bind(*p_25_trace_tready13);
        p_25_trace_tready13->set_sv_netview_offsetfromdp(8392496);
        xsim_sc_channel<0, bool > *p_25_trace_tlast13 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast13.bind(*p_25_trace_tlast13);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast13);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid13 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid13.bind(*p_25_trace_tid13);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid13);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest13 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest13.bind(*p_25_trace_tdest13);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest13);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid13 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid13.bind(*p_25_trace_tvalid13);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid13);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_trace_tdata14 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->trace_tdata14.bind(*p_25_trace_tdata14);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdata14);
        xsim_sc_channel<0, bool > *p_25_trace_tready14 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tready14.bind(*p_25_trace_tready14);
        p_25_trace_tready14->set_sv_netview_offsetfromdp(8392832);
        xsim_sc_channel<0, bool > *p_25_trace_tlast14 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tlast14.bind(*p_25_trace_tlast14);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tlast14);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tid14 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tid14.bind(*p_25_trace_tid14);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tid14);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_trace_tdest14 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->trace_tdest14.bind(*p_25_trace_tdest14);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tdest14);
        xsim_sc_channel<0, bool > *p_25_trace_tvalid14 = new xsim_sc_channel<0, bool >();
        sc_inst_25->trace_tvalid14.bind(*p_25_trace_tvalid14);
        (*_glb_hdl_sc_channel_map).push_back(p_25_trace_tvalid14);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axi_awaddr.bind(*p_25_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_25_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awvalid.bind(*p_25_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_awready.bind(*p_25_s_axi_awready);
        p_25_s_axi_awready->set_sv_netview_offsetfromdp(8393224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_wdata.bind(*p_25_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axi_wstrb.bind(*p_25_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wvalid.bind(*p_25_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_wready.bind(*p_25_s_axi_wready);
        p_25_s_axi_wready->set_sv_netview_offsetfromdp(8393448);
        xsim_sc_channel<0, bool > *p_25_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bvalid.bind(*p_25_s_axi_bvalid);
        p_25_s_axi_bvalid->set_sv_netview_offsetfromdp(8393504);
        xsim_sc_channel<0, bool > *p_25_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_bready.bind(*p_25_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_bresp.bind(*p_25_s_axi_bresp);
        p_25_s_axi_bresp->set_sv_netview_offsetfromdp(8393616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axi_araddr.bind(*p_25_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_25_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arvalid.bind(*p_25_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_arready.bind(*p_25_s_axi_arready);
        p_25_s_axi_arready->set_sv_netview_offsetfromdp(8393784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axi_rdata.bind(*p_25_s_axi_rdata);
        p_25_s_axi_rdata->set_sv_netview_offsetfromdp(8393840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axi_rresp.bind(*p_25_s_axi_rresp);
        p_25_s_axi_rresp->set_sv_netview_offsetfromdp(8393896);
        xsim_sc_channel<0, bool > *p_25_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rvalid.bind(*p_25_s_axi_rvalid);
        p_25_s_axi_rvalid->set_sv_netview_offsetfromdp(8393952);
        xsim_sc_channel<0, bool > *p_25_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axi_rready.bind(*p_25_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axihub_awaddr.bind(*p_25_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_25_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_awvalid.bind(*p_25_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_awready.bind(*p_25_s_axihub_awready);
        p_25_s_axihub_awready->set_sv_netview_offsetfromdp(8394176);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axihub_wdata.bind(*p_25_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_25_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_25->s_axihub_wstrb.bind(*p_25_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_wvalid.bind(*p_25_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_wready.bind(*p_25_s_axihub_wready);
        p_25_s_axihub_wready->set_sv_netview_offsetfromdp(8394400);
        xsim_sc_channel<0, bool > *p_25_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_bvalid.bind(*p_25_s_axihub_bvalid);
        p_25_s_axihub_bvalid->set_sv_netview_offsetfromdp(8394456);
        xsim_sc_channel<0, bool > *p_25_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_bready.bind(*p_25_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axihub_bresp.bind(*p_25_s_axihub_bresp);
        p_25_s_axihub_bresp->set_sv_netview_offsetfromdp(8394568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_axihub_araddr.bind(*p_25_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_25_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_arvalid.bind(*p_25_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_arready.bind(*p_25_s_axihub_arready);
        p_25_s_axihub_arready->set_sv_netview_offsetfromdp(8394736);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_axihub_rdata.bind(*p_25_s_axihub_rdata);
        p_25_s_axihub_rdata->set_sv_netview_offsetfromdp(8394792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_axihub_rresp.bind(*p_25_s_axihub_rresp);
        p_25_s_axihub_rresp->set_sv_netview_offsetfromdp(8394848);
        xsim_sc_channel<0, bool > *p_25_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_rvalid.bind(*p_25_s_axihub_rvalid);
        p_25_s_axihub_rvalid->set_sv_netview_offsetfromdp(8394904);
        xsim_sc_channel<0, bool > *p_25_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_axihub_rready.bind(*p_25_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_aximm_awaddr.bind(*p_25_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_25_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_awvalid.bind(*p_25_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_25_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_awready.bind(*p_25_s_aximm_awready);
        p_25_s_aximm_awready->set_sv_netview_offsetfromdp(8395128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_aximm_awlen.bind(*p_25_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_aximm_awsize.bind(*p_25_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_aximm_awburst.bind(*p_25_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_aximm_awid.bind(*p_25_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->s_aximm_wdata.bind(*p_25_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_aximm_wstrb.bind(*p_25_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_25_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_wvalid.bind(*p_25_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_25_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_wready.bind(*p_25_s_aximm_wready);
        p_25_s_aximm_wready->set_sv_netview_offsetfromdp(8395576);
        xsim_sc_channel<0, bool > *p_25_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_bvalid.bind(*p_25_s_aximm_bvalid);
        p_25_s_aximm_bvalid->set_sv_netview_offsetfromdp(8395632);
        xsim_sc_channel<0, bool > *p_25_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_bready.bind(*p_25_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_25_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_wlast.bind(*p_25_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_25_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_rlast.bind(*p_25_s_aximm_rlast);
        p_25_s_aximm_rlast->set_sv_netview_offsetfromdp(8395800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_aximm_bresp.bind(*p_25_s_aximm_bresp);
        p_25_s_aximm_bresp->set_sv_netview_offsetfromdp(8395856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_aximm_bid.bind(*p_25_s_aximm_bid);
        p_25_s_aximm_bid->set_sv_netview_offsetfromdp(8395912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_25_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_25->s_aximm_araddr.bind(*p_25_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_25_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_arvalid.bind(*p_25_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_25_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_arready.bind(*p_25_s_aximm_arready);
        p_25_s_aximm_arready->set_sv_netview_offsetfromdp(8396080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_25_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_25->s_aximm_arlen.bind(*p_25_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_25_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_25->s_aximm_arsize.bind(*p_25_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_aximm_arburst.bind(*p_25_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_aximm_arid.bind(*p_25_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_25_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_25->s_aximm_rdata.bind(*p_25_s_aximm_rdata);
        p_25_s_aximm_rdata->set_sv_netview_offsetfromdp(8396360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_25_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_25->s_aximm_rid.bind(*p_25_s_aximm_rid);
        p_25_s_aximm_rid->set_sv_netview_offsetfromdp(8396416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_25_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_25->s_aximm_rresp.bind(*p_25_s_aximm_rresp);
        p_25_s_aximm_rresp->set_sv_netview_offsetfromdp(8396472);
        xsim_sc_channel<0, bool > *p_25_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_rvalid.bind(*p_25_s_aximm_rvalid);
        p_25_s_aximm_rvalid->set_sv_netview_offsetfromdp(8396528);
        xsim_sc_channel<0, bool > *p_25_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_25->s_aximm_rready.bind(*p_25_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_25_s_aximm_rready);
        sc_inst_26 = new pfm_dynamic_dpa_mon0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon0");
        sc_inst_26->xsim_set_dbg_index(396);
        xsim_sc_channel<0, bool > *p_26_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_clk.bind(*p_26_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_clk);
        xsim_sc_channel<0, bool > *p_26_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_resetn.bind(*p_26_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_resetn);
        xsim_sc_channel<0, bool > *p_26_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_26->trace_clk.bind(*p_26_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_26_trace_clk);
        xsim_sc_channel<0, bool > *p_26_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_26->trace_rst.bind(*p_26_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_26_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->s_axi_awaddr.bind(*p_26_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_awprot.bind(*p_26_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_26_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awvalid.bind(*p_26_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_awready.bind(*p_26_s_axi_awready);
        p_26_s_axi_awready->set_sv_netview_offsetfromdp(8397080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_wdata.bind(*p_26_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->s_axi_wstrb.bind(*p_26_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_26_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wvalid.bind(*p_26_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_wready.bind(*p_26_s_axi_wready);
        p_26_s_axi_wready->set_sv_netview_offsetfromdp(8397304);
        xsim_sc_channel<0, bool > *p_26_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bvalid.bind(*p_26_s_axi_bvalid);
        p_26_s_axi_bvalid->set_sv_netview_offsetfromdp(8397360);
        xsim_sc_channel<0, bool > *p_26_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_bready.bind(*p_26_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_bresp.bind(*p_26_s_axi_bresp);
        p_26_s_axi_bresp->set_sv_netview_offsetfromdp(8397472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->s_axi_araddr.bind(*p_26_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_26_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_26->s_axi_arprot.bind(*p_26_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_26_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arvalid.bind(*p_26_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_26_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_arready.bind(*p_26_s_axi_arready);
        p_26_s_axi_arready->set_sv_netview_offsetfromdp(8397696);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->s_axi_rdata.bind(*p_26_s_axi_rdata);
        p_26_s_axi_rdata->set_sv_netview_offsetfromdp(8397752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->s_axi_rresp.bind(*p_26_s_axi_rresp);
        p_26_s_axi_rresp->set_sv_netview_offsetfromdp(8397808);
        xsim_sc_channel<0, bool > *p_26_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rvalid.bind(*p_26_s_axi_rvalid);
        p_26_s_axi_rvalid->set_sv_netview_offsetfromdp(8397864);
        xsim_sc_channel<0, bool > *p_26_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_26->s_axi_rready.bind(*p_26_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_s_axi_rready);
        xsim_sc_channel<0, bool > *p_26_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_AWVALID.bind(*p_26_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_26_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_AWREADY.bind(*p_26_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->mon_AWADDR.bind(*p_26_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_26_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_WVALID.bind(*p_26_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_WVALID);
        xsim_sc_channel<0, bool > *p_26_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_WREADY.bind(*p_26_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->mon_WDATA.bind(*p_26_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_26_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_26->mon_WSTRB.bind(*p_26_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_26_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_ARVALID.bind(*p_26_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_26_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_ARREADY.bind(*p_26_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->mon_ARADDR.bind(*p_26_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_26_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_RVALID.bind(*p_26_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_RVALID);
        xsim_sc_channel<0, bool > *p_26_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_RREADY.bind(*p_26_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_26_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_26->mon_RDATA.bind(*p_26_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->mon_RRESP.bind(*p_26_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_RRESP);
        xsim_sc_channel<0, bool > *p_26_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_BVALID.bind(*p_26_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_BVALID);
        xsim_sc_channel<0, bool > *p_26_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_26->mon_BREADY.bind(*p_26_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_26_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_26->mon_BRESP.bind(*p_26_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_26_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_26_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_26->m_axis_tready.bind(*p_26_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_26_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_26->m_axis_tdata.bind(*p_26_m_axis_tdata);
        p_26_m_axis_tdata->set_sv_netview_offsetfromdp(8398984);
        xsim_sc_channel<0, bool > *p_26_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axis_tlast.bind(*p_26_m_axis_tlast);
        p_26_m_axis_tlast->set_sv_netview_offsetfromdp(8399040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_axis_tid.bind(*p_26_m_axis_tid);
        p_26_m_axis_tid->set_sv_netview_offsetfromdp(8399096);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_26_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_26->m_axis_tdest.bind(*p_26_m_axis_tdest);
        p_26_m_axis_tdest->set_sv_netview_offsetfromdp(8399152);
        xsim_sc_channel<0, bool > *p_26_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_26->m_axis_tvalid.bind(*p_26_m_axis_tvalid);
        p_26_m_axis_tvalid->set_sv_netview_offsetfromdp(8399208);
        xsim_sc_channel<0, bool > *p_26_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_26->ap_continue.bind(*p_26_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_26_ap_continue);
        xsim_sc_channel<0, bool > *p_26_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_26->ap_ready.bind(*p_26_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_26_ap_ready);
        xsim_sc_channel<0, bool > *p_26_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_26->ap_start.bind(*p_26_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_26_ap_start);
        xsim_sc_channel<0, bool > *p_26_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_26->ap_idle.bind(*p_26_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_26_ap_idle);
        xsim_sc_channel<0, bool > *p_26_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_26->ap_done.bind(*p_26_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_26_ap_done);
        sc_inst_27 = new pfm_dynamic_dpa_mon1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon1");
        sc_inst_27->xsim_set_dbg_index(397);
        xsim_sc_channel<0, bool > *p_27_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_clk.bind(*p_27_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_clk);
        xsim_sc_channel<0, bool > *p_27_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_resetn.bind(*p_27_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_resetn);
        xsim_sc_channel<0, bool > *p_27_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_27->trace_clk.bind(*p_27_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_27_trace_clk);
        xsim_sc_channel<0, bool > *p_27_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_27->trace_rst.bind(*p_27_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_27_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_awaddr.bind(*p_27_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid.bind(*p_27_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready.bind(*p_27_s_axi_awready);
        p_27_s_axi_awready->set_sv_netview_offsetfromdp(8399928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wdata.bind(*p_27_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_wstrb.bind(*p_27_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid.bind(*p_27_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready.bind(*p_27_s_axi_wready);
        p_27_s_axi_wready->set_sv_netview_offsetfromdp(8400152);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid.bind(*p_27_s_axi_bvalid);
        p_27_s_axi_bvalid->set_sv_netview_offsetfromdp(8400208);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready.bind(*p_27_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp.bind(*p_27_s_axi_bresp);
        p_27_s_axi_bresp->set_sv_netview_offsetfromdp(8400320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_araddr.bind(*p_27_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid.bind(*p_27_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready.bind(*p_27_s_axi_arready);
        p_27_s_axi_arready->set_sv_netview_offsetfromdp(8400488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_rdata.bind(*p_27_s_axi_rdata);
        p_27_s_axi_rdata->set_sv_netview_offsetfromdp(8400544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp.bind(*p_27_s_axi_rresp);
        p_27_s_axi_rresp->set_sv_netview_offsetfromdp(8400600);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid.bind(*p_27_s_axi_rvalid);
        p_27_s_axi_rvalid->set_sv_netview_offsetfromdp(8400656);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready.bind(*p_27_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready);
        xsim_sc_channel<0, bool > *p_27_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_AWVALID.bind(*p_27_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_27_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_AWREADY.bind(*p_27_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->mon_AWADDR.bind(*p_27_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->mon_AWID.bind(*p_27_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->mon_AWLEN.bind(*p_27_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->mon_AWSIZE.bind(*p_27_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->mon_AWBURST.bind(*p_27_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_27_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_WVALID.bind(*p_27_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_WVALID);
        xsim_sc_channel<0, bool > *p_27_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_WREADY.bind(*p_27_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->mon_WDATA.bind(*p_27_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->mon_WSTRB.bind(*p_27_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_27_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_WLAST.bind(*p_27_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_WLAST);
        xsim_sc_channel<0, bool > *p_27_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_ARVALID.bind(*p_27_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_27_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_ARREADY.bind(*p_27_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->mon_ARADDR.bind(*p_27_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->mon_ARID.bind(*p_27_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->mon_ARLEN.bind(*p_27_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->mon_ARSIZE.bind(*p_27_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->mon_ARBURST.bind(*p_27_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_27_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_RVALID.bind(*p_27_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_RVALID);
        xsim_sc_channel<0, bool > *p_27_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_RREADY.bind(*p_27_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_27_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_27->mon_RDATA.bind(*p_27_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_RDATA);
        xsim_sc_channel<0, bool > *p_27_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_RLAST.bind(*p_27_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->mon_RID.bind(*p_27_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->mon_RRESP.bind(*p_27_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_RRESP);
        xsim_sc_channel<0, bool > *p_27_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_BVALID.bind(*p_27_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_BVALID);
        xsim_sc_channel<0, bool > *p_27_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_27->mon_BREADY.bind(*p_27_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->mon_BRESP.bind(*p_27_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_27_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_27->mon_BID.bind(*p_27_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_27_mon_BID);
        xsim_sc_channel<0, bool > *p_27_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axis_rd_tready.bind(*p_27_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->m_axis_rd_tdata.bind(*p_27_m_axis_rd_tdata);
        p_27_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8402448);
        xsim_sc_channel<0, bool > *p_27_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axis_rd_tlast.bind(*p_27_m_axis_rd_tlast);
        p_27_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8402504);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axis_rd_tid.bind(*p_27_m_axis_rd_tid);
        p_27_m_axis_rd_tid->set_sv_netview_offsetfromdp(8402560);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axis_rd_tdest.bind(*p_27_m_axis_rd_tdest);
        p_27_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8402616);
        xsim_sc_channel<0, bool > *p_27_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axis_wr_tready.bind(*p_27_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_27_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_27_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_27->m_axis_wr_tdata.bind(*p_27_m_axis_wr_tdata);
        p_27_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8402728);
        xsim_sc_channel<0, bool > *p_27_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axis_wr_tlast.bind(*p_27_m_axis_wr_tlast);
        p_27_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8402784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axis_wr_tid.bind(*p_27_m_axis_wr_tid);
        p_27_m_axis_wr_tid->set_sv_netview_offsetfromdp(8402840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->m_axis_wr_tdest.bind(*p_27_m_axis_wr_tdest);
        p_27_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8402896);
        xsim_sc_channel<0, bool > *p_27_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axis_wr_tvalid.bind(*p_27_m_axis_wr_tvalid);
        p_27_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8402952);
        xsim_sc_channel<0, bool > *p_27_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_27->m_axis_rd_tvalid.bind(*p_27_m_axis_rd_tvalid);
        p_27_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8403008);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_awaddr_mon.bind(*p_27_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_awprot_mon.bind(*p_27_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awvalid_mon.bind(*p_27_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_awready_mon.bind(*p_27_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_wdata_mon.bind(*p_27_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_27_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_27->s_axi_wstrb_mon.bind(*p_27_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wvalid_mon.bind(*p_27_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_wready_mon.bind(*p_27_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_bresp_mon.bind(*p_27_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bvalid_mon.bind(*p_27_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_bready_mon.bind(*p_27_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_27_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_27->s_axi_araddr_mon.bind(*p_27_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_27_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_27->s_axi_arprot_mon.bind(*p_27_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arvalid_mon.bind(*p_27_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_arready_mon.bind(*p_27_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_27_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_27->s_axi_rdata_mon.bind(*p_27_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_27_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_27->s_axi_rresp_mon.bind(*p_27_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rvalid_mon.bind(*p_27_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_27_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_27->s_axi_rready_mon.bind(*p_27_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_27_s_axi_rready_mon);
        sc_inst_28 = new pfm_dynamic_dpa_mon2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon2");
        sc_inst_28->xsim_set_dbg_index(398);
        xsim_sc_channel<0, bool > *p_28_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_clk.bind(*p_28_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_clk);
        xsim_sc_channel<0, bool > *p_28_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_resetn.bind(*p_28_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_resetn);
        xsim_sc_channel<0, bool > *p_28_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_28->trace_clk.bind(*p_28_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_28_trace_clk);
        xsim_sc_channel<0, bool > *p_28_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_28->trace_rst.bind(*p_28_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_28_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_awaddr.bind(*p_28_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid.bind(*p_28_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready.bind(*p_28_s_axi_awready);
        p_28_s_axi_awready->set_sv_netview_offsetfromdp(8404512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_wdata.bind(*p_28_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_wstrb.bind(*p_28_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid.bind(*p_28_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready.bind(*p_28_s_axi_wready);
        p_28_s_axi_wready->set_sv_netview_offsetfromdp(8404736);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid.bind(*p_28_s_axi_bvalid);
        p_28_s_axi_bvalid->set_sv_netview_offsetfromdp(8404792);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready.bind(*p_28_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp.bind(*p_28_s_axi_bresp);
        p_28_s_axi_bresp->set_sv_netview_offsetfromdp(8404904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_araddr.bind(*p_28_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid.bind(*p_28_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready.bind(*p_28_s_axi_arready);
        p_28_s_axi_arready->set_sv_netview_offsetfromdp(8405072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_rdata.bind(*p_28_s_axi_rdata);
        p_28_s_axi_rdata->set_sv_netview_offsetfromdp(8405128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp.bind(*p_28_s_axi_rresp);
        p_28_s_axi_rresp->set_sv_netview_offsetfromdp(8405184);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid.bind(*p_28_s_axi_rvalid);
        p_28_s_axi_rvalid->set_sv_netview_offsetfromdp(8405240);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready.bind(*p_28_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready);
        xsim_sc_channel<0, bool > *p_28_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_AWVALID.bind(*p_28_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_28_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_AWREADY.bind(*p_28_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->mon_AWADDR.bind(*p_28_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->mon_AWID.bind(*p_28_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->mon_AWLEN.bind(*p_28_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->mon_AWSIZE.bind(*p_28_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->mon_AWBURST.bind(*p_28_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_28_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_WVALID.bind(*p_28_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_WVALID);
        xsim_sc_channel<0, bool > *p_28_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_WREADY.bind(*p_28_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->mon_WDATA.bind(*p_28_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->mon_WSTRB.bind(*p_28_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_28_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_WLAST.bind(*p_28_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_WLAST);
        xsim_sc_channel<0, bool > *p_28_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_ARVALID.bind(*p_28_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_28_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_ARREADY.bind(*p_28_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->mon_ARADDR.bind(*p_28_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->mon_ARID.bind(*p_28_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->mon_ARLEN.bind(*p_28_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->mon_ARSIZE.bind(*p_28_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->mon_ARBURST.bind(*p_28_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_28_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_RVALID.bind(*p_28_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_RVALID);
        xsim_sc_channel<0, bool > *p_28_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_RREADY.bind(*p_28_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_28_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_28->mon_RDATA.bind(*p_28_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_RDATA);
        xsim_sc_channel<0, bool > *p_28_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_RLAST.bind(*p_28_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->mon_RID.bind(*p_28_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->mon_RRESP.bind(*p_28_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_RRESP);
        xsim_sc_channel<0, bool > *p_28_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_BVALID.bind(*p_28_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_BVALID);
        xsim_sc_channel<0, bool > *p_28_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_28->mon_BREADY.bind(*p_28_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->mon_BRESP.bind(*p_28_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_28_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_28->mon_BID.bind(*p_28_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_28_mon_BID);
        xsim_sc_channel<0, bool > *p_28_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axis_rd_tready.bind(*p_28_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axis_rd_tdata.bind(*p_28_m_axis_rd_tdata);
        p_28_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8407032);
        xsim_sc_channel<0, bool > *p_28_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axis_rd_tlast.bind(*p_28_m_axis_rd_tlast);
        p_28_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8407088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axis_rd_tid.bind(*p_28_m_axis_rd_tid);
        p_28_m_axis_rd_tid->set_sv_netview_offsetfromdp(8407144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axis_rd_tdest.bind(*p_28_m_axis_rd_tdest);
        p_28_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8407200);
        xsim_sc_channel<0, bool > *p_28_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axis_wr_tready.bind(*p_28_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_28_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_28_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_28->m_axis_wr_tdata.bind(*p_28_m_axis_wr_tdata);
        p_28_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8407312);
        xsim_sc_channel<0, bool > *p_28_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axis_wr_tlast.bind(*p_28_m_axis_wr_tlast);
        p_28_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8407368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axis_wr_tid.bind(*p_28_m_axis_wr_tid);
        p_28_m_axis_wr_tid->set_sv_netview_offsetfromdp(8407424);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->m_axis_wr_tdest.bind(*p_28_m_axis_wr_tdest);
        p_28_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8407480);
        xsim_sc_channel<0, bool > *p_28_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axis_wr_tvalid.bind(*p_28_m_axis_wr_tvalid);
        p_28_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8407536);
        xsim_sc_channel<0, bool > *p_28_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_28->m_axis_rd_tvalid.bind(*p_28_m_axis_rd_tvalid);
        p_28_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8407592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_awaddr_mon.bind(*p_28_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_awprot_mon.bind(*p_28_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awvalid_mon.bind(*p_28_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_awready_mon.bind(*p_28_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_wdata_mon.bind(*p_28_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_28_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_28->s_axi_wstrb_mon.bind(*p_28_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wvalid_mon.bind(*p_28_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_wready_mon.bind(*p_28_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_bresp_mon.bind(*p_28_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bvalid_mon.bind(*p_28_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_bready_mon.bind(*p_28_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_28_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_28->s_axi_araddr_mon.bind(*p_28_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_28_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_28->s_axi_arprot_mon.bind(*p_28_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arvalid_mon.bind(*p_28_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_arready_mon.bind(*p_28_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_28_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_28->s_axi_rdata_mon.bind(*p_28_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_28_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_28->s_axi_rresp_mon.bind(*p_28_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rvalid_mon.bind(*p_28_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_28_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_28->s_axi_rready_mon.bind(*p_28_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_28_s_axi_rready_mon);
        sc_inst_29 = new pfm_dynamic_dpa_mon3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon3");
        sc_inst_29->xsim_set_dbg_index(399);
        xsim_sc_channel<0, bool > *p_29_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_clk.bind(*p_29_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_clk);
        xsim_sc_channel<0, bool > *p_29_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_resetn.bind(*p_29_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_resetn);
        xsim_sc_channel<0, bool > *p_29_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_29->trace_clk.bind(*p_29_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_29_trace_clk);
        xsim_sc_channel<0, bool > *p_29_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_29->trace_rst.bind(*p_29_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_29_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_awaddr.bind(*p_29_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_awprot.bind(*p_29_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_29_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awvalid.bind(*p_29_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_awready.bind(*p_29_s_axi_awready);
        p_29_s_axi_awready->set_sv_netview_offsetfromdp(8409152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_wdata.bind(*p_29_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->s_axi_wstrb.bind(*p_29_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_29_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wvalid.bind(*p_29_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_wready.bind(*p_29_s_axi_wready);
        p_29_s_axi_wready->set_sv_netview_offsetfromdp(8409376);
        xsim_sc_channel<0, bool > *p_29_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bvalid.bind(*p_29_s_axi_bvalid);
        p_29_s_axi_bvalid->set_sv_netview_offsetfromdp(8409432);
        xsim_sc_channel<0, bool > *p_29_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_bready.bind(*p_29_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_bresp.bind(*p_29_s_axi_bresp);
        p_29_s_axi_bresp->set_sv_netview_offsetfromdp(8409544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->s_axi_araddr.bind(*p_29_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_29_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_29->s_axi_arprot.bind(*p_29_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_29_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arvalid.bind(*p_29_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_29_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_arready.bind(*p_29_s_axi_arready);
        p_29_s_axi_arready->set_sv_netview_offsetfromdp(8409768);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->s_axi_rdata.bind(*p_29_s_axi_rdata);
        p_29_s_axi_rdata->set_sv_netview_offsetfromdp(8409824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->s_axi_rresp.bind(*p_29_s_axi_rresp);
        p_29_s_axi_rresp->set_sv_netview_offsetfromdp(8409880);
        xsim_sc_channel<0, bool > *p_29_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rvalid.bind(*p_29_s_axi_rvalid);
        p_29_s_axi_rvalid->set_sv_netview_offsetfromdp(8409936);
        xsim_sc_channel<0, bool > *p_29_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_29->s_axi_rready.bind(*p_29_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_s_axi_rready);
        xsim_sc_channel<0, bool > *p_29_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_AWVALID.bind(*p_29_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_29_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_AWREADY.bind(*p_29_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->mon_AWADDR.bind(*p_29_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_29_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_WVALID.bind(*p_29_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_WVALID);
        xsim_sc_channel<0, bool > *p_29_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_WREADY.bind(*p_29_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->mon_WDATA.bind(*p_29_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_29_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_29->mon_WSTRB.bind(*p_29_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_29_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_ARVALID.bind(*p_29_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_29_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_ARREADY.bind(*p_29_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->mon_ARADDR.bind(*p_29_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_29_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_RVALID.bind(*p_29_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_RVALID);
        xsim_sc_channel<0, bool > *p_29_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_RREADY.bind(*p_29_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_29_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_29->mon_RDATA.bind(*p_29_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->mon_RRESP.bind(*p_29_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_RRESP);
        xsim_sc_channel<0, bool > *p_29_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_BVALID.bind(*p_29_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_BVALID);
        xsim_sc_channel<0, bool > *p_29_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_29->mon_BREADY.bind(*p_29_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_29_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_29->mon_BRESP.bind(*p_29_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_29_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_29_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_29->m_axis_tready.bind(*p_29_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_29_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_29->m_axis_tdata.bind(*p_29_m_axis_tdata);
        p_29_m_axis_tdata->set_sv_netview_offsetfromdp(8411056);
        xsim_sc_channel<0, bool > *p_29_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axis_tlast.bind(*p_29_m_axis_tlast);
        p_29_m_axis_tlast->set_sv_netview_offsetfromdp(8411112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axis_tid.bind(*p_29_m_axis_tid);
        p_29_m_axis_tid->set_sv_netview_offsetfromdp(8411168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_29_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_29->m_axis_tdest.bind(*p_29_m_axis_tdest);
        p_29_m_axis_tdest->set_sv_netview_offsetfromdp(8411224);
        xsim_sc_channel<0, bool > *p_29_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_29->m_axis_tvalid.bind(*p_29_m_axis_tvalid);
        p_29_m_axis_tvalid->set_sv_netview_offsetfromdp(8411280);
        xsim_sc_channel<0, bool > *p_29_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_29->ap_continue.bind(*p_29_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_29_ap_continue);
        xsim_sc_channel<0, bool > *p_29_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_29->ap_ready.bind(*p_29_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_29_ap_ready);
        xsim_sc_channel<0, bool > *p_29_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_29->ap_start.bind(*p_29_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_29_ap_start);
        xsim_sc_channel<0, bool > *p_29_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_29->ap_idle.bind(*p_29_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_29_ap_idle);
        xsim_sc_channel<0, bool > *p_29_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_29->ap_done.bind(*p_29_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_29_ap_done);
        sc_inst_30 = new pfm_dynamic_dpa_mon4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon4");
        sc_inst_30->xsim_set_dbg_index(400);
        xsim_sc_channel<0, bool > *p_30_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_clk.bind(*p_30_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_clk);
        xsim_sc_channel<0, bool > *p_30_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_resetn.bind(*p_30_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_resetn);
        xsim_sc_channel<0, bool > *p_30_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_30->trace_clk.bind(*p_30_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_30_trace_clk);
        xsim_sc_channel<0, bool > *p_30_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_30->trace_rst.bind(*p_30_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_30_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_awaddr.bind(*p_30_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid.bind(*p_30_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready.bind(*p_30_s_axi_awready);
        p_30_s_axi_awready->set_sv_netview_offsetfromdp(8412000);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wdata.bind(*p_30_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_wstrb.bind(*p_30_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid.bind(*p_30_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready.bind(*p_30_s_axi_wready);
        p_30_s_axi_wready->set_sv_netview_offsetfromdp(8412224);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid.bind(*p_30_s_axi_bvalid);
        p_30_s_axi_bvalid->set_sv_netview_offsetfromdp(8412280);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready.bind(*p_30_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp.bind(*p_30_s_axi_bresp);
        p_30_s_axi_bresp->set_sv_netview_offsetfromdp(8412392);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_araddr.bind(*p_30_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid.bind(*p_30_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready.bind(*p_30_s_axi_arready);
        p_30_s_axi_arready->set_sv_netview_offsetfromdp(8412560);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_rdata.bind(*p_30_s_axi_rdata);
        p_30_s_axi_rdata->set_sv_netview_offsetfromdp(8412616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp.bind(*p_30_s_axi_rresp);
        p_30_s_axi_rresp->set_sv_netview_offsetfromdp(8412672);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid.bind(*p_30_s_axi_rvalid);
        p_30_s_axi_rvalid->set_sv_netview_offsetfromdp(8412728);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready.bind(*p_30_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready);
        xsim_sc_channel<0, bool > *p_30_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_AWVALID.bind(*p_30_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_30_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_AWREADY.bind(*p_30_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->mon_AWADDR.bind(*p_30_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->mon_AWID.bind(*p_30_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->mon_AWLEN.bind(*p_30_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->mon_AWSIZE.bind(*p_30_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->mon_AWBURST.bind(*p_30_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_30_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_WVALID.bind(*p_30_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_WVALID);
        xsim_sc_channel<0, bool > *p_30_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_WREADY.bind(*p_30_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->mon_WDATA.bind(*p_30_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->mon_WSTRB.bind(*p_30_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_30_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_WLAST.bind(*p_30_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_WLAST);
        xsim_sc_channel<0, bool > *p_30_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_ARVALID.bind(*p_30_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_30_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_ARREADY.bind(*p_30_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->mon_ARADDR.bind(*p_30_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->mon_ARID.bind(*p_30_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->mon_ARLEN.bind(*p_30_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->mon_ARSIZE.bind(*p_30_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->mon_ARBURST.bind(*p_30_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_30_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_RVALID.bind(*p_30_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_RVALID);
        xsim_sc_channel<0, bool > *p_30_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_RREADY.bind(*p_30_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_30_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_30->mon_RDATA.bind(*p_30_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_RDATA);
        xsim_sc_channel<0, bool > *p_30_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_RLAST.bind(*p_30_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->mon_RID.bind(*p_30_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->mon_RRESP.bind(*p_30_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_RRESP);
        xsim_sc_channel<0, bool > *p_30_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_BVALID.bind(*p_30_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_BVALID);
        xsim_sc_channel<0, bool > *p_30_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_30->mon_BREADY.bind(*p_30_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->mon_BRESP.bind(*p_30_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_30_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_30->mon_BID.bind(*p_30_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_30_mon_BID);
        xsim_sc_channel<0, bool > *p_30_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axis_rd_tready.bind(*p_30_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->m_axis_rd_tdata.bind(*p_30_m_axis_rd_tdata);
        p_30_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8414520);
        xsim_sc_channel<0, bool > *p_30_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axis_rd_tlast.bind(*p_30_m_axis_rd_tlast);
        p_30_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8414576);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->m_axis_rd_tid.bind(*p_30_m_axis_rd_tid);
        p_30_m_axis_rd_tid->set_sv_netview_offsetfromdp(8414632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->m_axis_rd_tdest.bind(*p_30_m_axis_rd_tdest);
        p_30_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8414688);
        xsim_sc_channel<0, bool > *p_30_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axis_wr_tready.bind(*p_30_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_30_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_30_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_30->m_axis_wr_tdata.bind(*p_30_m_axis_wr_tdata);
        p_30_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8414800);
        xsim_sc_channel<0, bool > *p_30_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axis_wr_tlast.bind(*p_30_m_axis_wr_tlast);
        p_30_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8414856);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->m_axis_wr_tid.bind(*p_30_m_axis_wr_tid);
        p_30_m_axis_wr_tid->set_sv_netview_offsetfromdp(8414912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->m_axis_wr_tdest.bind(*p_30_m_axis_wr_tdest);
        p_30_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8414968);
        xsim_sc_channel<0, bool > *p_30_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axis_wr_tvalid.bind(*p_30_m_axis_wr_tvalid);
        p_30_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8415024);
        xsim_sc_channel<0, bool > *p_30_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_30->m_axis_rd_tvalid.bind(*p_30_m_axis_rd_tvalid);
        p_30_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8415080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_awaddr_mon.bind(*p_30_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_awprot_mon.bind(*p_30_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awvalid_mon.bind(*p_30_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_awready_mon.bind(*p_30_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_wdata_mon.bind(*p_30_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_30_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_30->s_axi_wstrb_mon.bind(*p_30_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wvalid_mon.bind(*p_30_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_wready_mon.bind(*p_30_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_bresp_mon.bind(*p_30_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bvalid_mon.bind(*p_30_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_bready_mon.bind(*p_30_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_30_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_30->s_axi_araddr_mon.bind(*p_30_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_30_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_30->s_axi_arprot_mon.bind(*p_30_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arvalid_mon.bind(*p_30_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_arready_mon.bind(*p_30_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_30_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_30->s_axi_rdata_mon.bind(*p_30_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_30_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_30->s_axi_rresp_mon.bind(*p_30_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rvalid_mon.bind(*p_30_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_30_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_30->s_axi_rready_mon.bind(*p_30_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_30_s_axi_rready_mon);
        sc_inst_31 = new pfm_dynamic_dpa_mon5_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon5");
        sc_inst_31->xsim_set_dbg_index(401);
        xsim_sc_channel<0, bool > *p_31_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_clk.bind(*p_31_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_clk);
        xsim_sc_channel<0, bool > *p_31_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_resetn.bind(*p_31_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_resetn);
        xsim_sc_channel<0, bool > *p_31_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_31->trace_clk.bind(*p_31_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_31_trace_clk);
        xsim_sc_channel<0, bool > *p_31_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_31->trace_rst.bind(*p_31_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_31_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_awaddr.bind(*p_31_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid.bind(*p_31_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready.bind(*p_31_s_axi_awready);
        p_31_s_axi_awready->set_sv_netview_offsetfromdp(8416584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wdata.bind(*p_31_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_wstrb.bind(*p_31_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid.bind(*p_31_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready.bind(*p_31_s_axi_wready);
        p_31_s_axi_wready->set_sv_netview_offsetfromdp(8416808);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid.bind(*p_31_s_axi_bvalid);
        p_31_s_axi_bvalid->set_sv_netview_offsetfromdp(8416864);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready.bind(*p_31_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp.bind(*p_31_s_axi_bresp);
        p_31_s_axi_bresp->set_sv_netview_offsetfromdp(8416976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_araddr.bind(*p_31_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid.bind(*p_31_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready.bind(*p_31_s_axi_arready);
        p_31_s_axi_arready->set_sv_netview_offsetfromdp(8417144);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_rdata.bind(*p_31_s_axi_rdata);
        p_31_s_axi_rdata->set_sv_netview_offsetfromdp(8417200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp.bind(*p_31_s_axi_rresp);
        p_31_s_axi_rresp->set_sv_netview_offsetfromdp(8417256);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid.bind(*p_31_s_axi_rvalid);
        p_31_s_axi_rvalid->set_sv_netview_offsetfromdp(8417312);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready.bind(*p_31_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready);
        xsim_sc_channel<0, bool > *p_31_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_AWVALID.bind(*p_31_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_31_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_AWREADY.bind(*p_31_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->mon_AWADDR.bind(*p_31_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->mon_AWID.bind(*p_31_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->mon_AWLEN.bind(*p_31_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->mon_AWSIZE.bind(*p_31_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->mon_AWBURST.bind(*p_31_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_31_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_WVALID.bind(*p_31_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_WVALID);
        xsim_sc_channel<0, bool > *p_31_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_WREADY.bind(*p_31_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->mon_WDATA.bind(*p_31_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->mon_WSTRB.bind(*p_31_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_31_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_WLAST.bind(*p_31_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_WLAST);
        xsim_sc_channel<0, bool > *p_31_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_ARVALID.bind(*p_31_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_31_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_ARREADY.bind(*p_31_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->mon_ARADDR.bind(*p_31_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->mon_ARID.bind(*p_31_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->mon_ARLEN.bind(*p_31_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->mon_ARSIZE.bind(*p_31_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->mon_ARBURST.bind(*p_31_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_31_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_RVALID.bind(*p_31_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_RVALID);
        xsim_sc_channel<0, bool > *p_31_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_RREADY.bind(*p_31_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_31_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_31->mon_RDATA.bind(*p_31_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_RDATA);
        xsim_sc_channel<0, bool > *p_31_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_RLAST.bind(*p_31_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->mon_RID.bind(*p_31_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->mon_RRESP.bind(*p_31_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_RRESP);
        xsim_sc_channel<0, bool > *p_31_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_BVALID.bind(*p_31_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_BVALID);
        xsim_sc_channel<0, bool > *p_31_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_31->mon_BREADY.bind(*p_31_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->mon_BRESP.bind(*p_31_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_31_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_31->mon_BID.bind(*p_31_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_31_mon_BID);
        xsim_sc_channel<0, bool > *p_31_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axis_rd_tready.bind(*p_31_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axis_rd_tdata.bind(*p_31_m_axis_rd_tdata);
        p_31_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8419104);
        xsim_sc_channel<0, bool > *p_31_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axis_rd_tlast.bind(*p_31_m_axis_rd_tlast);
        p_31_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8419160);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axis_rd_tid.bind(*p_31_m_axis_rd_tid);
        p_31_m_axis_rd_tid->set_sv_netview_offsetfromdp(8419216);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axis_rd_tdest.bind(*p_31_m_axis_rd_tdest);
        p_31_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8419272);
        xsim_sc_channel<0, bool > *p_31_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axis_wr_tready.bind(*p_31_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_31_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_31_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_31->m_axis_wr_tdata.bind(*p_31_m_axis_wr_tdata);
        p_31_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8419384);
        xsim_sc_channel<0, bool > *p_31_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axis_wr_tlast.bind(*p_31_m_axis_wr_tlast);
        p_31_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8419440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axis_wr_tid.bind(*p_31_m_axis_wr_tid);
        p_31_m_axis_wr_tid->set_sv_netview_offsetfromdp(8419496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->m_axis_wr_tdest.bind(*p_31_m_axis_wr_tdest);
        p_31_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8419552);
        xsim_sc_channel<0, bool > *p_31_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axis_wr_tvalid.bind(*p_31_m_axis_wr_tvalid);
        p_31_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8419608);
        xsim_sc_channel<0, bool > *p_31_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_31->m_axis_rd_tvalid.bind(*p_31_m_axis_rd_tvalid);
        p_31_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8419664);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_awaddr_mon.bind(*p_31_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_awprot_mon.bind(*p_31_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awvalid_mon.bind(*p_31_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_awready_mon.bind(*p_31_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_wdata_mon.bind(*p_31_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_31_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_31->s_axi_wstrb_mon.bind(*p_31_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wvalid_mon.bind(*p_31_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_wready_mon.bind(*p_31_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_bresp_mon.bind(*p_31_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bvalid_mon.bind(*p_31_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_bready_mon.bind(*p_31_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_31_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_31->s_axi_araddr_mon.bind(*p_31_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_31_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_31->s_axi_arprot_mon.bind(*p_31_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arvalid_mon.bind(*p_31_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_arready_mon.bind(*p_31_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_31_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_31->s_axi_rdata_mon.bind(*p_31_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_31_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_31->s_axi_rresp_mon.bind(*p_31_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rvalid_mon.bind(*p_31_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_31_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_31->s_axi_rready_mon.bind(*p_31_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_31_s_axi_rready_mon);
        sc_inst_32 = new pfm_dynamic_dpa_mon6_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon6");
        sc_inst_32->xsim_set_dbg_index(402);
        xsim_sc_channel<0, bool > *p_32_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_clk.bind(*p_32_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_clk);
        xsim_sc_channel<0, bool > *p_32_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_resetn.bind(*p_32_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_resetn);
        xsim_sc_channel<0, bool > *p_32_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_32->trace_clk.bind(*p_32_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_32_trace_clk);
        xsim_sc_channel<0, bool > *p_32_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_32->trace_rst.bind(*p_32_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_32_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_awaddr.bind(*p_32_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_awprot.bind(*p_32_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_32_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awvalid.bind(*p_32_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_awready.bind(*p_32_s_axi_awready);
        p_32_s_axi_awready->set_sv_netview_offsetfromdp(8421224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_wdata.bind(*p_32_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->s_axi_wstrb.bind(*p_32_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_32_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wvalid.bind(*p_32_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_wready.bind(*p_32_s_axi_wready);
        p_32_s_axi_wready->set_sv_netview_offsetfromdp(8421448);
        xsim_sc_channel<0, bool > *p_32_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bvalid.bind(*p_32_s_axi_bvalid);
        p_32_s_axi_bvalid->set_sv_netview_offsetfromdp(8421504);
        xsim_sc_channel<0, bool > *p_32_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_bready.bind(*p_32_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_bresp.bind(*p_32_s_axi_bresp);
        p_32_s_axi_bresp->set_sv_netview_offsetfromdp(8421616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->s_axi_araddr.bind(*p_32_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_32_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_32->s_axi_arprot.bind(*p_32_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_32_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arvalid.bind(*p_32_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_32_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_arready.bind(*p_32_s_axi_arready);
        p_32_s_axi_arready->set_sv_netview_offsetfromdp(8421840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->s_axi_rdata.bind(*p_32_s_axi_rdata);
        p_32_s_axi_rdata->set_sv_netview_offsetfromdp(8421896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->s_axi_rresp.bind(*p_32_s_axi_rresp);
        p_32_s_axi_rresp->set_sv_netview_offsetfromdp(8421952);
        xsim_sc_channel<0, bool > *p_32_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rvalid.bind(*p_32_s_axi_rvalid);
        p_32_s_axi_rvalid->set_sv_netview_offsetfromdp(8422008);
        xsim_sc_channel<0, bool > *p_32_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_32->s_axi_rready.bind(*p_32_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_s_axi_rready);
        xsim_sc_channel<0, bool > *p_32_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_AWVALID.bind(*p_32_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_32_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_AWREADY.bind(*p_32_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->mon_AWADDR.bind(*p_32_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_32_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_WVALID.bind(*p_32_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_WVALID);
        xsim_sc_channel<0, bool > *p_32_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_WREADY.bind(*p_32_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->mon_WDATA.bind(*p_32_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_32_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_32->mon_WSTRB.bind(*p_32_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_32_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_ARVALID.bind(*p_32_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_32_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_ARREADY.bind(*p_32_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->mon_ARADDR.bind(*p_32_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_32_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_RVALID.bind(*p_32_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_RVALID);
        xsim_sc_channel<0, bool > *p_32_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_RREADY.bind(*p_32_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_32_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_32->mon_RDATA.bind(*p_32_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->mon_RRESP.bind(*p_32_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_RRESP);
        xsim_sc_channel<0, bool > *p_32_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_BVALID.bind(*p_32_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_BVALID);
        xsim_sc_channel<0, bool > *p_32_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_32->mon_BREADY.bind(*p_32_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_32_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_32->mon_BRESP.bind(*p_32_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_32_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_32_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_32->m_axis_tready.bind(*p_32_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_32_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_32->m_axis_tdata.bind(*p_32_m_axis_tdata);
        p_32_m_axis_tdata->set_sv_netview_offsetfromdp(8423128);
        xsim_sc_channel<0, bool > *p_32_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axis_tlast.bind(*p_32_m_axis_tlast);
        p_32_m_axis_tlast->set_sv_netview_offsetfromdp(8423184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_axis_tid.bind(*p_32_m_axis_tid);
        p_32_m_axis_tid->set_sv_netview_offsetfromdp(8423240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_32_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_32->m_axis_tdest.bind(*p_32_m_axis_tdest);
        p_32_m_axis_tdest->set_sv_netview_offsetfromdp(8423296);
        xsim_sc_channel<0, bool > *p_32_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_32->m_axis_tvalid.bind(*p_32_m_axis_tvalid);
        p_32_m_axis_tvalid->set_sv_netview_offsetfromdp(8423352);
        xsim_sc_channel<0, bool > *p_32_ap_continue = new xsim_sc_channel<0, bool >();
        sc_inst_32->ap_continue.bind(*p_32_ap_continue);
        (*_glb_hdl_sc_channel_map).push_back(p_32_ap_continue);
        xsim_sc_channel<0, bool > *p_32_ap_ready = new xsim_sc_channel<0, bool >();
        sc_inst_32->ap_ready.bind(*p_32_ap_ready);
        (*_glb_hdl_sc_channel_map).push_back(p_32_ap_ready);
        xsim_sc_channel<0, bool > *p_32_ap_start = new xsim_sc_channel<0, bool >();
        sc_inst_32->ap_start.bind(*p_32_ap_start);
        (*_glb_hdl_sc_channel_map).push_back(p_32_ap_start);
        xsim_sc_channel<0, bool > *p_32_ap_idle = new xsim_sc_channel<0, bool >();
        sc_inst_32->ap_idle.bind(*p_32_ap_idle);
        (*_glb_hdl_sc_channel_map).push_back(p_32_ap_idle);
        xsim_sc_channel<0, bool > *p_32_ap_done = new xsim_sc_channel<0, bool >();
        sc_inst_32->ap_done.bind(*p_32_ap_done);
        (*_glb_hdl_sc_channel_map).push_back(p_32_ap_done);
        sc_inst_33 = new pfm_dynamic_dpa_mon7_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon7");
        sc_inst_33->xsim_set_dbg_index(403);
        xsim_sc_channel<0, bool > *p_33_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_clk.bind(*p_33_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_clk);
        xsim_sc_channel<0, bool > *p_33_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_resetn.bind(*p_33_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_resetn);
        xsim_sc_channel<0, bool > *p_33_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_33->trace_clk.bind(*p_33_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_33_trace_clk);
        xsim_sc_channel<0, bool > *p_33_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_33->trace_rst.bind(*p_33_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_33_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->s_axi_awaddr.bind(*p_33_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid.bind(*p_33_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready.bind(*p_33_s_axi_awready);
        p_33_s_axi_awready->set_sv_netview_offsetfromdp(8424072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wdata.bind(*p_33_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_wstrb.bind(*p_33_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid.bind(*p_33_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready.bind(*p_33_s_axi_wready);
        p_33_s_axi_wready->set_sv_netview_offsetfromdp(8424296);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid.bind(*p_33_s_axi_bvalid);
        p_33_s_axi_bvalid->set_sv_netview_offsetfromdp(8424352);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready.bind(*p_33_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp.bind(*p_33_s_axi_bresp);
        p_33_s_axi_bresp->set_sv_netview_offsetfromdp(8424464);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->s_axi_araddr.bind(*p_33_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid.bind(*p_33_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready.bind(*p_33_s_axi_arready);
        p_33_s_axi_arready->set_sv_netview_offsetfromdp(8424632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_rdata.bind(*p_33_s_axi_rdata);
        p_33_s_axi_rdata->set_sv_netview_offsetfromdp(8424688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp.bind(*p_33_s_axi_rresp);
        p_33_s_axi_rresp->set_sv_netview_offsetfromdp(8424744);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid.bind(*p_33_s_axi_rvalid);
        p_33_s_axi_rvalid->set_sv_netview_offsetfromdp(8424800);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready.bind(*p_33_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready);
        xsim_sc_channel<0, bool > *p_33_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_AWVALID.bind(*p_33_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_33_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_AWREADY.bind(*p_33_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->mon_AWADDR.bind(*p_33_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->mon_AWID.bind(*p_33_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->mon_AWLEN.bind(*p_33_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->mon_AWSIZE.bind(*p_33_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->mon_AWBURST.bind(*p_33_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_33_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_WVALID.bind(*p_33_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_WVALID);
        xsim_sc_channel<0, bool > *p_33_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_WREADY.bind(*p_33_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->mon_WDATA.bind(*p_33_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->mon_WSTRB.bind(*p_33_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_33_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_WLAST.bind(*p_33_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_WLAST);
        xsim_sc_channel<0, bool > *p_33_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_ARVALID.bind(*p_33_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_33_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_ARREADY.bind(*p_33_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->mon_ARADDR.bind(*p_33_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->mon_ARID.bind(*p_33_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->mon_ARLEN.bind(*p_33_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->mon_ARSIZE.bind(*p_33_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->mon_ARBURST.bind(*p_33_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_33_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_RVALID.bind(*p_33_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_RVALID);
        xsim_sc_channel<0, bool > *p_33_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_RREADY.bind(*p_33_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_33_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_33->mon_RDATA.bind(*p_33_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_RDATA);
        xsim_sc_channel<0, bool > *p_33_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_RLAST.bind(*p_33_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->mon_RID.bind(*p_33_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->mon_RRESP.bind(*p_33_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_RRESP);
        xsim_sc_channel<0, bool > *p_33_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_BVALID.bind(*p_33_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_BVALID);
        xsim_sc_channel<0, bool > *p_33_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_33->mon_BREADY.bind(*p_33_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->mon_BRESP.bind(*p_33_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_33_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_33->mon_BID.bind(*p_33_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_33_mon_BID);
        xsim_sc_channel<0, bool > *p_33_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axis_rd_tready.bind(*p_33_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->m_axis_rd_tdata.bind(*p_33_m_axis_rd_tdata);
        p_33_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8426592);
        xsim_sc_channel<0, bool > *p_33_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axis_rd_tlast.bind(*p_33_m_axis_rd_tlast);
        p_33_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8426648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->m_axis_rd_tid.bind(*p_33_m_axis_rd_tid);
        p_33_m_axis_rd_tid->set_sv_netview_offsetfromdp(8426704);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->m_axis_rd_tdest.bind(*p_33_m_axis_rd_tdest);
        p_33_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8426760);
        xsim_sc_channel<0, bool > *p_33_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axis_wr_tready.bind(*p_33_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_33_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_33_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_33->m_axis_wr_tdata.bind(*p_33_m_axis_wr_tdata);
        p_33_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8426872);
        xsim_sc_channel<0, bool > *p_33_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axis_wr_tlast.bind(*p_33_m_axis_wr_tlast);
        p_33_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8426928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->m_axis_wr_tid.bind(*p_33_m_axis_wr_tid);
        p_33_m_axis_wr_tid->set_sv_netview_offsetfromdp(8426984);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->m_axis_wr_tdest.bind(*p_33_m_axis_wr_tdest);
        p_33_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8427040);
        xsim_sc_channel<0, bool > *p_33_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axis_wr_tvalid.bind(*p_33_m_axis_wr_tvalid);
        p_33_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8427096);
        xsim_sc_channel<0, bool > *p_33_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_33->m_axis_rd_tvalid.bind(*p_33_m_axis_rd_tvalid);
        p_33_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8427152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->s_axi_awaddr_mon.bind(*p_33_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_awprot_mon.bind(*p_33_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awvalid_mon.bind(*p_33_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_awready_mon.bind(*p_33_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_wdata_mon.bind(*p_33_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_33_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_33->s_axi_wstrb_mon.bind(*p_33_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wvalid_mon.bind(*p_33_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_wready_mon.bind(*p_33_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_bresp_mon.bind(*p_33_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bvalid_mon.bind(*p_33_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_bready_mon.bind(*p_33_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_33_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_33->s_axi_araddr_mon.bind(*p_33_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_33_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_33->s_axi_arprot_mon.bind(*p_33_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arvalid_mon.bind(*p_33_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_arready_mon.bind(*p_33_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_33_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_33->s_axi_rdata_mon.bind(*p_33_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_33_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_33->s_axi_rresp_mon.bind(*p_33_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rvalid_mon.bind(*p_33_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_33_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_33->s_axi_rready_mon.bind(*p_33_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_33_s_axi_rready_mon);
        sc_inst_34 = new pfm_dynamic_dpa_mon8_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.System_DPA.dpa_mon8");
        sc_inst_34->xsim_set_dbg_index(404);
        xsim_sc_channel<0, bool > *p_34_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_clk.bind(*p_34_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_clk);
        xsim_sc_channel<0, bool > *p_34_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_resetn.bind(*p_34_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_resetn);
        xsim_sc_channel<0, bool > *p_34_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_34->trace_clk.bind(*p_34_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_34_trace_clk);
        xsim_sc_channel<0, bool > *p_34_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_34->trace_rst.bind(*p_34_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_34_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_awaddr.bind(*p_34_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_34_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awvalid.bind(*p_34_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awready.bind(*p_34_s_axi_awready);
        p_34_s_axi_awready->set_sv_netview_offsetfromdp(8428656);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_wdata.bind(*p_34_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_wstrb.bind(*p_34_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_34_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wvalid.bind(*p_34_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wready.bind(*p_34_s_axi_wready);
        p_34_s_axi_wready->set_sv_netview_offsetfromdp(8428880);
        xsim_sc_channel<0, bool > *p_34_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bvalid.bind(*p_34_s_axi_bvalid);
        p_34_s_axi_bvalid->set_sv_netview_offsetfromdp(8428936);
        xsim_sc_channel<0, bool > *p_34_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bready.bind(*p_34_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_bresp.bind(*p_34_s_axi_bresp);
        p_34_s_axi_bresp->set_sv_netview_offsetfromdp(8429048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_araddr.bind(*p_34_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_34_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arvalid.bind(*p_34_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_34_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arready.bind(*p_34_s_axi_arready);
        p_34_s_axi_arready->set_sv_netview_offsetfromdp(8429216);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_rdata.bind(*p_34_s_axi_rdata);
        p_34_s_axi_rdata->set_sv_netview_offsetfromdp(8429272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_rresp.bind(*p_34_s_axi_rresp);
        p_34_s_axi_rresp->set_sv_netview_offsetfromdp(8429328);
        xsim_sc_channel<0, bool > *p_34_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rvalid.bind(*p_34_s_axi_rvalid);
        p_34_s_axi_rvalid->set_sv_netview_offsetfromdp(8429384);
        xsim_sc_channel<0, bool > *p_34_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rready.bind(*p_34_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rready);
        xsim_sc_channel<0, bool > *p_34_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_AWVALID.bind(*p_34_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_34_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_AWREADY.bind(*p_34_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->mon_AWADDR.bind(*p_34_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->mon_AWID.bind(*p_34_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->mon_AWLEN.bind(*p_34_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->mon_AWSIZE.bind(*p_34_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->mon_AWBURST.bind(*p_34_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_34_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_WVALID.bind(*p_34_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_WVALID);
        xsim_sc_channel<0, bool > *p_34_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_WREADY.bind(*p_34_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_WREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_34_mon_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_34->mon_WDATA.bind(*p_34_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_WDATA);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_mon_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->mon_WSTRB.bind(*p_34_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_34_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_WLAST.bind(*p_34_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_WLAST);
        xsim_sc_channel<0, bool > *p_34_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_ARVALID.bind(*p_34_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_34_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_ARREADY.bind(*p_34_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->mon_ARADDR.bind(*p_34_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->mon_ARID.bind(*p_34_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->mon_ARLEN.bind(*p_34_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->mon_ARSIZE.bind(*p_34_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->mon_ARBURST.bind(*p_34_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_34_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_RVALID.bind(*p_34_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_RVALID);
        xsim_sc_channel<0, bool > *p_34_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_RREADY.bind(*p_34_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_RREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_34_mon_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_34->mon_RDATA.bind(*p_34_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_RDATA);
        xsim_sc_channel<0, bool > *p_34_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_RLAST.bind(*p_34_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->mon_RID.bind(*p_34_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->mon_RRESP.bind(*p_34_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_RRESP);
        xsim_sc_channel<0, bool > *p_34_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_BVALID.bind(*p_34_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_BVALID);
        xsim_sc_channel<0, bool > *p_34_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_34->mon_BREADY.bind(*p_34_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->mon_BRESP.bind(*p_34_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_34_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_34->mon_BID.bind(*p_34_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_34_mon_BID);
        xsim_sc_channel<0, bool > *p_34_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axis_rd_tready.bind(*p_34_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axis_rd_tdata.bind(*p_34_m_axis_rd_tdata);
        p_34_m_axis_rd_tdata->set_sv_netview_offsetfromdp(8431176);
        xsim_sc_channel<0, bool > *p_34_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axis_rd_tlast.bind(*p_34_m_axis_rd_tlast);
        p_34_m_axis_rd_tlast->set_sv_netview_offsetfromdp(8431232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_axis_rd_tid.bind(*p_34_m_axis_rd_tid);
        p_34_m_axis_rd_tid->set_sv_netview_offsetfromdp(8431288);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_axis_rd_tdest.bind(*p_34_m_axis_rd_tdest);
        p_34_m_axis_rd_tdest->set_sv_netview_offsetfromdp(8431344);
        xsim_sc_channel<0, bool > *p_34_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axis_wr_tready.bind(*p_34_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_34_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_34_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_34->m_axis_wr_tdata.bind(*p_34_m_axis_wr_tdata);
        p_34_m_axis_wr_tdata->set_sv_netview_offsetfromdp(8431456);
        xsim_sc_channel<0, bool > *p_34_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axis_wr_tlast.bind(*p_34_m_axis_wr_tlast);
        p_34_m_axis_wr_tlast->set_sv_netview_offsetfromdp(8431512);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_axis_wr_tid.bind(*p_34_m_axis_wr_tid);
        p_34_m_axis_wr_tid->set_sv_netview_offsetfromdp(8431568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->m_axis_wr_tdest.bind(*p_34_m_axis_wr_tdest);
        p_34_m_axis_wr_tdest->set_sv_netview_offsetfromdp(8431624);
        xsim_sc_channel<0, bool > *p_34_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axis_wr_tvalid.bind(*p_34_m_axis_wr_tvalid);
        p_34_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(8431680);
        xsim_sc_channel<0, bool > *p_34_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_34->m_axis_rd_tvalid.bind(*p_34_m_axis_rd_tvalid);
        p_34_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(8431736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_awaddr_mon.bind(*p_34_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_awprot_mon.bind(*p_34_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awvalid_mon.bind(*p_34_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_awready_mon.bind(*p_34_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_wdata_mon.bind(*p_34_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_34_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_34->s_axi_wstrb_mon.bind(*p_34_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wvalid_mon.bind(*p_34_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_wready_mon.bind(*p_34_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_bresp_mon.bind(*p_34_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bvalid_mon.bind(*p_34_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_bready_mon.bind(*p_34_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_34_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_34->s_axi_araddr_mon.bind(*p_34_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_34_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_34->s_axi_arprot_mon.bind(*p_34_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arvalid_mon.bind(*p_34_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_arready_mon.bind(*p_34_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_34_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_34->s_axi_rdata_mon.bind(*p_34_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_34_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_34->s_axi_rresp_mon.bind(*p_34_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rvalid_mon.bind(*p_34_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_34_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_34->s_axi_rready_mon.bind(*p_34_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_34_s_axi_rready_mon);
        sc_inst_35 = new bd_5dca_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.bd_5dca_sci_inst");
        sc_inst_35->xsim_set_dbg_index(1850);
        sc_inst_36 = new bd_5dca_hbm_inst_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.hbm_inst");
        sc_inst_36->xsim_set_dbg_index(1851);
        xsim_sc_channel<0, bool > *p_36_HBM_REF_CLK_0 = new xsim_sc_channel<0, bool >();
        sc_inst_36->HBM_REF_CLK_0.bind(*p_36_HBM_REF_CLK_0);
        (*_glb_hdl_sc_channel_map).push_back(p_36_HBM_REF_CLK_0);
        xsim_sc_channel<0, bool > *p_36_AXI_00_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_ACLK.bind(*p_36_AXI_00_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_00_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_ARESET_N.bind(*p_36_AXI_00_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_00_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_00_ARADDR.bind(*p_36_AXI_00_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_00_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_00_ARBURST.bind(*p_36_AXI_00_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_00_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_00_ARID.bind(*p_36_AXI_00_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_00_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_00_ARLEN.bind(*p_36_AXI_00_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_00_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_00_ARSIZE.bind(*p_36_AXI_00_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_00_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_ARVALID.bind(*p_36_AXI_00_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_00_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_00_AWADDR.bind(*p_36_AXI_00_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_00_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_00_AWBURST.bind(*p_36_AXI_00_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_00_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_00_AWID.bind(*p_36_AXI_00_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_00_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_00_AWLEN.bind(*p_36_AXI_00_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_00_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_00_AWSIZE.bind(*p_36_AXI_00_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_00_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_AWVALID.bind(*p_36_AXI_00_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_00_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_RREADY.bind(*p_36_AXI_00_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_00_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_BREADY.bind(*p_36_AXI_00_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_00_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_00_WDATA.bind(*p_36_AXI_00_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_00_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_WLAST.bind(*p_36_AXI_00_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_00_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_00_WSTRB.bind(*p_36_AXI_00_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_00_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_00_WDATA_PARITY.bind(*p_36_AXI_00_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_00_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_WVALID.bind(*p_36_AXI_00_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_00_WVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_01_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_ACLK.bind(*p_36_AXI_01_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_01_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_ARESET_N.bind(*p_36_AXI_01_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_01_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_01_ARADDR.bind(*p_36_AXI_01_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_01_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_01_ARBURST.bind(*p_36_AXI_01_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_01_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_01_ARID.bind(*p_36_AXI_01_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_01_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_01_ARLEN.bind(*p_36_AXI_01_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_01_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_01_ARSIZE.bind(*p_36_AXI_01_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_01_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_ARVALID.bind(*p_36_AXI_01_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_01_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_01_AWADDR.bind(*p_36_AXI_01_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_01_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_01_AWBURST.bind(*p_36_AXI_01_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_01_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_01_AWID.bind(*p_36_AXI_01_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_01_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_01_AWLEN.bind(*p_36_AXI_01_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_01_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_01_AWSIZE.bind(*p_36_AXI_01_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_01_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_AWVALID.bind(*p_36_AXI_01_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_01_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_RREADY.bind(*p_36_AXI_01_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_01_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_BREADY.bind(*p_36_AXI_01_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_01_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_01_WDATA.bind(*p_36_AXI_01_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_01_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_WLAST.bind(*p_36_AXI_01_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_01_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_01_WSTRB.bind(*p_36_AXI_01_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_01_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_01_WDATA_PARITY.bind(*p_36_AXI_01_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_01_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_WVALID.bind(*p_36_AXI_01_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_01_WVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_02_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_ACLK.bind(*p_36_AXI_02_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_02_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_ARESET_N.bind(*p_36_AXI_02_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_02_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_02_ARADDR.bind(*p_36_AXI_02_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_02_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_02_ARBURST.bind(*p_36_AXI_02_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_02_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_02_ARID.bind(*p_36_AXI_02_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_02_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_02_ARLEN.bind(*p_36_AXI_02_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_02_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_02_ARSIZE.bind(*p_36_AXI_02_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_02_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_ARVALID.bind(*p_36_AXI_02_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_02_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_02_AWADDR.bind(*p_36_AXI_02_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_02_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_02_AWBURST.bind(*p_36_AXI_02_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_02_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_02_AWID.bind(*p_36_AXI_02_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_02_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_02_AWLEN.bind(*p_36_AXI_02_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_02_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_02_AWSIZE.bind(*p_36_AXI_02_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_02_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_AWVALID.bind(*p_36_AXI_02_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_02_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_RREADY.bind(*p_36_AXI_02_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_02_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_BREADY.bind(*p_36_AXI_02_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_02_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_02_WDATA.bind(*p_36_AXI_02_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_02_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_WLAST.bind(*p_36_AXI_02_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_02_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_02_WSTRB.bind(*p_36_AXI_02_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_02_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_02_WDATA_PARITY.bind(*p_36_AXI_02_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_02_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_WVALID.bind(*p_36_AXI_02_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_02_WVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_03_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_ACLK.bind(*p_36_AXI_03_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_03_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_ARESET_N.bind(*p_36_AXI_03_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_03_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_03_ARADDR.bind(*p_36_AXI_03_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_03_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_03_ARBURST.bind(*p_36_AXI_03_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_03_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_03_ARID.bind(*p_36_AXI_03_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_03_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_03_ARLEN.bind(*p_36_AXI_03_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_03_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_03_ARSIZE.bind(*p_36_AXI_03_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_03_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_ARVALID.bind(*p_36_AXI_03_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_03_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_03_AWADDR.bind(*p_36_AXI_03_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_03_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_03_AWBURST.bind(*p_36_AXI_03_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_03_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_03_AWID.bind(*p_36_AXI_03_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_03_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_03_AWLEN.bind(*p_36_AXI_03_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_03_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_03_AWSIZE.bind(*p_36_AXI_03_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_03_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_AWVALID.bind(*p_36_AXI_03_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_03_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_RREADY.bind(*p_36_AXI_03_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_03_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_BREADY.bind(*p_36_AXI_03_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_03_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_03_WDATA.bind(*p_36_AXI_03_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_03_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_WLAST.bind(*p_36_AXI_03_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_03_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_03_WSTRB.bind(*p_36_AXI_03_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_03_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_03_WDATA_PARITY.bind(*p_36_AXI_03_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_03_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_WVALID.bind(*p_36_AXI_03_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_03_WVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_04_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_ACLK.bind(*p_36_AXI_04_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_04_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_ARESET_N.bind(*p_36_AXI_04_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_04_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_04_ARADDR.bind(*p_36_AXI_04_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_04_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_04_ARBURST.bind(*p_36_AXI_04_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_04_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_04_ARID.bind(*p_36_AXI_04_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_04_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_04_ARLEN.bind(*p_36_AXI_04_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_04_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_04_ARSIZE.bind(*p_36_AXI_04_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_04_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_ARVALID.bind(*p_36_AXI_04_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_04_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_04_AWADDR.bind(*p_36_AXI_04_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_04_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_04_AWBURST.bind(*p_36_AXI_04_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_04_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_04_AWID.bind(*p_36_AXI_04_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_04_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_04_AWLEN.bind(*p_36_AXI_04_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_04_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_04_AWSIZE.bind(*p_36_AXI_04_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_04_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_AWVALID.bind(*p_36_AXI_04_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_04_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_RREADY.bind(*p_36_AXI_04_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_04_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_BREADY.bind(*p_36_AXI_04_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_04_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_04_WDATA.bind(*p_36_AXI_04_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_04_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_WLAST.bind(*p_36_AXI_04_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_04_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_04_WSTRB.bind(*p_36_AXI_04_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_04_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_04_WDATA_PARITY.bind(*p_36_AXI_04_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_04_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_WVALID.bind(*p_36_AXI_04_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_04_WVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_05_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_ACLK.bind(*p_36_AXI_05_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_05_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_ARESET_N.bind(*p_36_AXI_05_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_05_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_05_ARADDR.bind(*p_36_AXI_05_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_05_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_05_ARBURST.bind(*p_36_AXI_05_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_05_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_05_ARID.bind(*p_36_AXI_05_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_05_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_05_ARLEN.bind(*p_36_AXI_05_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_05_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_05_ARSIZE.bind(*p_36_AXI_05_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_05_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_ARVALID.bind(*p_36_AXI_05_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_05_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_05_AWADDR.bind(*p_36_AXI_05_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_05_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_05_AWBURST.bind(*p_36_AXI_05_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_05_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_05_AWID.bind(*p_36_AXI_05_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_05_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_05_AWLEN.bind(*p_36_AXI_05_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_05_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_05_AWSIZE.bind(*p_36_AXI_05_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_05_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_AWVALID.bind(*p_36_AXI_05_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_05_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_RREADY.bind(*p_36_AXI_05_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_05_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_BREADY.bind(*p_36_AXI_05_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_05_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_05_WDATA.bind(*p_36_AXI_05_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_05_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_WLAST.bind(*p_36_AXI_05_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_05_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_05_WSTRB.bind(*p_36_AXI_05_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_05_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_05_WDATA_PARITY.bind(*p_36_AXI_05_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_05_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_WVALID.bind(*p_36_AXI_05_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_05_WVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_06_ACLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_ACLK.bind(*p_36_AXI_06_ACLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ACLK);
        xsim_sc_channel<0, bool > *p_36_AXI_06_ARESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_ARESET_N.bind(*p_36_AXI_06_ARESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARESET_N);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_06_ARADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_06_ARADDR.bind(*p_36_AXI_06_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_06_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_06_ARBURST.bind(*p_36_AXI_06_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_06_ARID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_06_ARID.bind(*p_36_AXI_06_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_06_ARLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_06_ARLEN.bind(*p_36_AXI_06_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_06_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_06_ARSIZE.bind(*p_36_AXI_06_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_06_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_ARVALID.bind(*p_36_AXI_06_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_ARVALID);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_36_AXI_06_AWADDR = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_36->AXI_06_AWADDR.bind(*p_36_AXI_06_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_AWADDR);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_06_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_06_AWBURST.bind(*p_36_AXI_06_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_AWBURST);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_06_AWID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_06_AWID.bind(*p_36_AXI_06_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_AWID);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_36_AXI_06_AWLEN = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_36->AXI_06_AWLEN.bind(*p_36_AXI_06_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_36_AXI_06_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_36->AXI_06_AWSIZE.bind(*p_36_AXI_06_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_AWSIZE);
        xsim_sc_channel<0, bool > *p_36_AXI_06_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_AWVALID.bind(*p_36_AXI_06_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_AWVALID);
        xsim_sc_channel<0, bool > *p_36_AXI_06_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_RREADY.bind(*p_36_AXI_06_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_RREADY);
        xsim_sc_channel<0, bool > *p_36_AXI_06_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_BREADY.bind(*p_36_AXI_06_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_BREADY);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_06_WDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_06_WDATA.bind(*p_36_AXI_06_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_WDATA);
        xsim_sc_channel<0, bool > *p_36_AXI_06_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_WLAST.bind(*p_36_AXI_06_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_WLAST);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_06_WSTRB = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_06_WSTRB.bind(*p_36_AXI_06_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_WSTRB);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_06_WDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_06_WDATA_PARITY.bind(*p_36_AXI_06_WDATA_PARITY);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_WDATA_PARITY);
        xsim_sc_channel<0, bool > *p_36_AXI_06_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_WVALID.bind(*p_36_AXI_06_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_36_AXI_06_WVALID);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_APB_0_PWDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->APB_0_PWDATA.bind(*p_36_APB_0_PWDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PWDATA);
        xsim_sc_channel<22, sc_dt::sc_bv<22> > *p_36_APB_0_PADDR = new xsim_sc_channel<22, sc_dt::sc_bv<22> >();
        sc_inst_36->APB_0_PADDR.bind(*p_36_APB_0_PADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PADDR);
        xsim_sc_channel<0, bool > *p_36_APB_0_PCLK = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PCLK.bind(*p_36_APB_0_PCLK);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PCLK);
        xsim_sc_channel<0, bool > *p_36_APB_0_PENABLE = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PENABLE.bind(*p_36_APB_0_PENABLE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PENABLE);
        xsim_sc_channel<0, bool > *p_36_APB_0_PRESET_N = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PRESET_N.bind(*p_36_APB_0_PRESET_N);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PRESET_N);
        xsim_sc_channel<0, bool > *p_36_APB_0_PSEL = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PSEL.bind(*p_36_APB_0_PSEL);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PSEL);
        xsim_sc_channel<0, bool > *p_36_APB_0_PWRITE = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PWRITE.bind(*p_36_APB_0_PWRITE);
        (*_glb_hdl_sc_channel_map).push_back(p_36_APB_0_PWRITE);
        xsim_sc_channel<0, bool > *p_36_AXI_00_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_ARREADY.bind(*p_36_AXI_00_ARREADY);
        p_36_AXI_00_ARREADY->set_sv_netview_offsetfromdp(10707784);
        xsim_sc_channel<0, bool > *p_36_AXI_00_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_AWREADY.bind(*p_36_AXI_00_AWREADY);
        p_36_AXI_00_AWREADY->set_sv_netview_offsetfromdp(10707840);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_00_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_00_RDATA_PARITY.bind(*p_36_AXI_00_RDATA_PARITY);
        p_36_AXI_00_RDATA_PARITY->set_sv_netview_offsetfromdp(10707896);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_00_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_00_RDATA.bind(*p_36_AXI_00_RDATA);
        p_36_AXI_00_RDATA->set_sv_netview_offsetfromdp(10707952);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_00_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_00_RID.bind(*p_36_AXI_00_RID);
        p_36_AXI_00_RID->set_sv_netview_offsetfromdp(10708008);
        xsim_sc_channel<0, bool > *p_36_AXI_00_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_RLAST.bind(*p_36_AXI_00_RLAST);
        p_36_AXI_00_RLAST->set_sv_netview_offsetfromdp(10708064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_00_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_00_RRESP.bind(*p_36_AXI_00_RRESP);
        p_36_AXI_00_RRESP->set_sv_netview_offsetfromdp(10708120);
        xsim_sc_channel<0, bool > *p_36_AXI_00_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_RVALID.bind(*p_36_AXI_00_RVALID);
        p_36_AXI_00_RVALID->set_sv_netview_offsetfromdp(10708176);
        xsim_sc_channel<0, bool > *p_36_AXI_00_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_WREADY.bind(*p_36_AXI_00_WREADY);
        p_36_AXI_00_WREADY->set_sv_netview_offsetfromdp(10708232);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_00_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_00_BID.bind(*p_36_AXI_00_BID);
        p_36_AXI_00_BID->set_sv_netview_offsetfromdp(10708288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_00_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_00_BRESP.bind(*p_36_AXI_00_BRESP);
        p_36_AXI_00_BRESP->set_sv_netview_offsetfromdp(10708344);
        xsim_sc_channel<0, bool > *p_36_AXI_00_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_00_BVALID.bind(*p_36_AXI_00_BVALID);
        p_36_AXI_00_BVALID->set_sv_netview_offsetfromdp(10708400);
        xsim_sc_channel<0, bool > *p_36_AXI_01_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_ARREADY.bind(*p_36_AXI_01_ARREADY);
        p_36_AXI_01_ARREADY->set_sv_netview_offsetfromdp(10708456);
        xsim_sc_channel<0, bool > *p_36_AXI_01_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_AWREADY.bind(*p_36_AXI_01_AWREADY);
        p_36_AXI_01_AWREADY->set_sv_netview_offsetfromdp(10708512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_01_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_01_RDATA_PARITY.bind(*p_36_AXI_01_RDATA_PARITY);
        p_36_AXI_01_RDATA_PARITY->set_sv_netview_offsetfromdp(10708568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_01_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_01_RDATA.bind(*p_36_AXI_01_RDATA);
        p_36_AXI_01_RDATA->set_sv_netview_offsetfromdp(10708624);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_01_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_01_RID.bind(*p_36_AXI_01_RID);
        p_36_AXI_01_RID->set_sv_netview_offsetfromdp(10708680);
        xsim_sc_channel<0, bool > *p_36_AXI_01_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_RLAST.bind(*p_36_AXI_01_RLAST);
        p_36_AXI_01_RLAST->set_sv_netview_offsetfromdp(10708736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_01_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_01_RRESP.bind(*p_36_AXI_01_RRESP);
        p_36_AXI_01_RRESP->set_sv_netview_offsetfromdp(10708792);
        xsim_sc_channel<0, bool > *p_36_AXI_01_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_RVALID.bind(*p_36_AXI_01_RVALID);
        p_36_AXI_01_RVALID->set_sv_netview_offsetfromdp(10708848);
        xsim_sc_channel<0, bool > *p_36_AXI_01_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_WREADY.bind(*p_36_AXI_01_WREADY);
        p_36_AXI_01_WREADY->set_sv_netview_offsetfromdp(10708904);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_01_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_01_BID.bind(*p_36_AXI_01_BID);
        p_36_AXI_01_BID->set_sv_netview_offsetfromdp(10708960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_01_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_01_BRESP.bind(*p_36_AXI_01_BRESP);
        p_36_AXI_01_BRESP->set_sv_netview_offsetfromdp(10709016);
        xsim_sc_channel<0, bool > *p_36_AXI_01_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_01_BVALID.bind(*p_36_AXI_01_BVALID);
        p_36_AXI_01_BVALID->set_sv_netview_offsetfromdp(10709072);
        xsim_sc_channel<0, bool > *p_36_AXI_02_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_ARREADY.bind(*p_36_AXI_02_ARREADY);
        p_36_AXI_02_ARREADY->set_sv_netview_offsetfromdp(10709128);
        xsim_sc_channel<0, bool > *p_36_AXI_02_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_AWREADY.bind(*p_36_AXI_02_AWREADY);
        p_36_AXI_02_AWREADY->set_sv_netview_offsetfromdp(10709184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_02_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_02_RDATA_PARITY.bind(*p_36_AXI_02_RDATA_PARITY);
        p_36_AXI_02_RDATA_PARITY->set_sv_netview_offsetfromdp(10709240);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_02_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_02_RDATA.bind(*p_36_AXI_02_RDATA);
        p_36_AXI_02_RDATA->set_sv_netview_offsetfromdp(10709296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_02_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_02_RID.bind(*p_36_AXI_02_RID);
        p_36_AXI_02_RID->set_sv_netview_offsetfromdp(10709352);
        xsim_sc_channel<0, bool > *p_36_AXI_02_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_RLAST.bind(*p_36_AXI_02_RLAST);
        p_36_AXI_02_RLAST->set_sv_netview_offsetfromdp(10709408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_02_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_02_RRESP.bind(*p_36_AXI_02_RRESP);
        p_36_AXI_02_RRESP->set_sv_netview_offsetfromdp(10709464);
        xsim_sc_channel<0, bool > *p_36_AXI_02_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_RVALID.bind(*p_36_AXI_02_RVALID);
        p_36_AXI_02_RVALID->set_sv_netview_offsetfromdp(10709520);
        xsim_sc_channel<0, bool > *p_36_AXI_02_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_WREADY.bind(*p_36_AXI_02_WREADY);
        p_36_AXI_02_WREADY->set_sv_netview_offsetfromdp(10709576);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_02_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_02_BID.bind(*p_36_AXI_02_BID);
        p_36_AXI_02_BID->set_sv_netview_offsetfromdp(10709632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_02_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_02_BRESP.bind(*p_36_AXI_02_BRESP);
        p_36_AXI_02_BRESP->set_sv_netview_offsetfromdp(10709688);
        xsim_sc_channel<0, bool > *p_36_AXI_02_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_02_BVALID.bind(*p_36_AXI_02_BVALID);
        p_36_AXI_02_BVALID->set_sv_netview_offsetfromdp(10709744);
        xsim_sc_channel<0, bool > *p_36_AXI_03_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_ARREADY.bind(*p_36_AXI_03_ARREADY);
        p_36_AXI_03_ARREADY->set_sv_netview_offsetfromdp(10709800);
        xsim_sc_channel<0, bool > *p_36_AXI_03_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_AWREADY.bind(*p_36_AXI_03_AWREADY);
        p_36_AXI_03_AWREADY->set_sv_netview_offsetfromdp(10709856);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_03_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_03_RDATA_PARITY.bind(*p_36_AXI_03_RDATA_PARITY);
        p_36_AXI_03_RDATA_PARITY->set_sv_netview_offsetfromdp(10709912);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_03_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_03_RDATA.bind(*p_36_AXI_03_RDATA);
        p_36_AXI_03_RDATA->set_sv_netview_offsetfromdp(10709968);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_03_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_03_RID.bind(*p_36_AXI_03_RID);
        p_36_AXI_03_RID->set_sv_netview_offsetfromdp(10710024);
        xsim_sc_channel<0, bool > *p_36_AXI_03_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_RLAST.bind(*p_36_AXI_03_RLAST);
        p_36_AXI_03_RLAST->set_sv_netview_offsetfromdp(10710080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_03_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_03_RRESP.bind(*p_36_AXI_03_RRESP);
        p_36_AXI_03_RRESP->set_sv_netview_offsetfromdp(10710136);
        xsim_sc_channel<0, bool > *p_36_AXI_03_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_RVALID.bind(*p_36_AXI_03_RVALID);
        p_36_AXI_03_RVALID->set_sv_netview_offsetfromdp(10710192);
        xsim_sc_channel<0, bool > *p_36_AXI_03_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_WREADY.bind(*p_36_AXI_03_WREADY);
        p_36_AXI_03_WREADY->set_sv_netview_offsetfromdp(10710248);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_03_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_03_BID.bind(*p_36_AXI_03_BID);
        p_36_AXI_03_BID->set_sv_netview_offsetfromdp(10710304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_03_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_03_BRESP.bind(*p_36_AXI_03_BRESP);
        p_36_AXI_03_BRESP->set_sv_netview_offsetfromdp(10710360);
        xsim_sc_channel<0, bool > *p_36_AXI_03_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_03_BVALID.bind(*p_36_AXI_03_BVALID);
        p_36_AXI_03_BVALID->set_sv_netview_offsetfromdp(10710416);
        xsim_sc_channel<0, bool > *p_36_AXI_04_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_ARREADY.bind(*p_36_AXI_04_ARREADY);
        p_36_AXI_04_ARREADY->set_sv_netview_offsetfromdp(10710472);
        xsim_sc_channel<0, bool > *p_36_AXI_04_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_AWREADY.bind(*p_36_AXI_04_AWREADY);
        p_36_AXI_04_AWREADY->set_sv_netview_offsetfromdp(10710528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_04_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_04_RDATA_PARITY.bind(*p_36_AXI_04_RDATA_PARITY);
        p_36_AXI_04_RDATA_PARITY->set_sv_netview_offsetfromdp(10710584);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_04_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_04_RDATA.bind(*p_36_AXI_04_RDATA);
        p_36_AXI_04_RDATA->set_sv_netview_offsetfromdp(10710640);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_04_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_04_RID.bind(*p_36_AXI_04_RID);
        p_36_AXI_04_RID->set_sv_netview_offsetfromdp(10710696);
        xsim_sc_channel<0, bool > *p_36_AXI_04_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_RLAST.bind(*p_36_AXI_04_RLAST);
        p_36_AXI_04_RLAST->set_sv_netview_offsetfromdp(10710752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_04_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_04_RRESP.bind(*p_36_AXI_04_RRESP);
        p_36_AXI_04_RRESP->set_sv_netview_offsetfromdp(10710808);
        xsim_sc_channel<0, bool > *p_36_AXI_04_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_RVALID.bind(*p_36_AXI_04_RVALID);
        p_36_AXI_04_RVALID->set_sv_netview_offsetfromdp(10710864);
        xsim_sc_channel<0, bool > *p_36_AXI_04_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_WREADY.bind(*p_36_AXI_04_WREADY);
        p_36_AXI_04_WREADY->set_sv_netview_offsetfromdp(10710920);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_04_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_04_BID.bind(*p_36_AXI_04_BID);
        p_36_AXI_04_BID->set_sv_netview_offsetfromdp(10710976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_04_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_04_BRESP.bind(*p_36_AXI_04_BRESP);
        p_36_AXI_04_BRESP->set_sv_netview_offsetfromdp(10711032);
        xsim_sc_channel<0, bool > *p_36_AXI_04_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_04_BVALID.bind(*p_36_AXI_04_BVALID);
        p_36_AXI_04_BVALID->set_sv_netview_offsetfromdp(10711088);
        xsim_sc_channel<0, bool > *p_36_AXI_05_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_ARREADY.bind(*p_36_AXI_05_ARREADY);
        p_36_AXI_05_ARREADY->set_sv_netview_offsetfromdp(10711144);
        xsim_sc_channel<0, bool > *p_36_AXI_05_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_AWREADY.bind(*p_36_AXI_05_AWREADY);
        p_36_AXI_05_AWREADY->set_sv_netview_offsetfromdp(10711200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_05_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_05_RDATA_PARITY.bind(*p_36_AXI_05_RDATA_PARITY);
        p_36_AXI_05_RDATA_PARITY->set_sv_netview_offsetfromdp(10711256);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_05_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_05_RDATA.bind(*p_36_AXI_05_RDATA);
        p_36_AXI_05_RDATA->set_sv_netview_offsetfromdp(10711312);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_05_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_05_RID.bind(*p_36_AXI_05_RID);
        p_36_AXI_05_RID->set_sv_netview_offsetfromdp(10711368);
        xsim_sc_channel<0, bool > *p_36_AXI_05_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_RLAST.bind(*p_36_AXI_05_RLAST);
        p_36_AXI_05_RLAST->set_sv_netview_offsetfromdp(10711424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_05_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_05_RRESP.bind(*p_36_AXI_05_RRESP);
        p_36_AXI_05_RRESP->set_sv_netview_offsetfromdp(10711480);
        xsim_sc_channel<0, bool > *p_36_AXI_05_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_RVALID.bind(*p_36_AXI_05_RVALID);
        p_36_AXI_05_RVALID->set_sv_netview_offsetfromdp(10711536);
        xsim_sc_channel<0, bool > *p_36_AXI_05_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_WREADY.bind(*p_36_AXI_05_WREADY);
        p_36_AXI_05_WREADY->set_sv_netview_offsetfromdp(10711592);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_05_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_05_BID.bind(*p_36_AXI_05_BID);
        p_36_AXI_05_BID->set_sv_netview_offsetfromdp(10711648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_05_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_05_BRESP.bind(*p_36_AXI_05_BRESP);
        p_36_AXI_05_BRESP->set_sv_netview_offsetfromdp(10711704);
        xsim_sc_channel<0, bool > *p_36_AXI_05_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_05_BVALID.bind(*p_36_AXI_05_BVALID);
        p_36_AXI_05_BVALID->set_sv_netview_offsetfromdp(10711760);
        xsim_sc_channel<0, bool > *p_36_AXI_06_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_ARREADY.bind(*p_36_AXI_06_ARREADY);
        p_36_AXI_06_ARREADY->set_sv_netview_offsetfromdp(10711816);
        xsim_sc_channel<0, bool > *p_36_AXI_06_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_AWREADY.bind(*p_36_AXI_06_AWREADY);
        p_36_AXI_06_AWREADY->set_sv_netview_offsetfromdp(10711872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_AXI_06_RDATA_PARITY = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->AXI_06_RDATA_PARITY.bind(*p_36_AXI_06_RDATA_PARITY);
        p_36_AXI_06_RDATA_PARITY->set_sv_netview_offsetfromdp(10711928);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_36_AXI_06_RDATA = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_36->AXI_06_RDATA.bind(*p_36_AXI_06_RDATA);
        p_36_AXI_06_RDATA->set_sv_netview_offsetfromdp(10711984);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_06_RID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_06_RID.bind(*p_36_AXI_06_RID);
        p_36_AXI_06_RID->set_sv_netview_offsetfromdp(10712040);
        xsim_sc_channel<0, bool > *p_36_AXI_06_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_RLAST.bind(*p_36_AXI_06_RLAST);
        p_36_AXI_06_RLAST->set_sv_netview_offsetfromdp(10712096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_06_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_06_RRESP.bind(*p_36_AXI_06_RRESP);
        p_36_AXI_06_RRESP->set_sv_netview_offsetfromdp(10712152);
        xsim_sc_channel<0, bool > *p_36_AXI_06_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_RVALID.bind(*p_36_AXI_06_RVALID);
        p_36_AXI_06_RVALID->set_sv_netview_offsetfromdp(10712208);
        xsim_sc_channel<0, bool > *p_36_AXI_06_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_WREADY.bind(*p_36_AXI_06_WREADY);
        p_36_AXI_06_WREADY->set_sv_netview_offsetfromdp(10712264);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_36_AXI_06_BID = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_36->AXI_06_BID.bind(*p_36_AXI_06_BID);
        p_36_AXI_06_BID->set_sv_netview_offsetfromdp(10712320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_36_AXI_06_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_36->AXI_06_BRESP.bind(*p_36_AXI_06_BRESP);
        p_36_AXI_06_BRESP->set_sv_netview_offsetfromdp(10712376);
        xsim_sc_channel<0, bool > *p_36_AXI_06_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_36->AXI_06_BVALID.bind(*p_36_AXI_06_BVALID);
        p_36_AXI_06_BVALID->set_sv_netview_offsetfromdp(10712432);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_36_APB_0_PRDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_36->APB_0_PRDATA.bind(*p_36_APB_0_PRDATA);
        p_36_APB_0_PRDATA->set_sv_netview_offsetfromdp(10712488);
        xsim_sc_channel<0, bool > *p_36_APB_0_PREADY = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PREADY.bind(*p_36_APB_0_PREADY);
        p_36_APB_0_PREADY->set_sv_netview_offsetfromdp(10712544);
        xsim_sc_channel<0, bool > *p_36_APB_0_PSLVERR = new xsim_sc_channel<0, bool >();
        sc_inst_36->APB_0_PSLVERR.bind(*p_36_APB_0_PSLVERR);
        p_36_APB_0_PSLVERR->set_sv_netview_offsetfromdp(10712600);
        xsim_sc_channel<0, bool > *p_36_apb_complete_0 = new xsim_sc_channel<0, bool >();
        sc_inst_36->apb_complete_0.bind(*p_36_apb_complete_0);
        p_36_apb_complete_0->set_sv_netview_offsetfromdp(10712656);
        xsim_sc_channel<0, bool > *p_36_DRAM_0_STAT_CATTRIP = new xsim_sc_channel<0, bool >();
        sc_inst_36->DRAM_0_STAT_CATTRIP.bind(*p_36_DRAM_0_STAT_CATTRIP);
        p_36_DRAM_0_STAT_CATTRIP->set_sv_netview_offsetfromdp(10712712);
        xsim_sc_channel<7, sc_dt::sc_bv<7> > *p_36_DRAM_0_STAT_TEMP = new xsim_sc_channel<7, sc_dt::sc_bv<7> >();
        sc_inst_36->DRAM_0_STAT_TEMP.bind(*p_36_DRAM_0_STAT_TEMP);
        p_36_DRAM_0_STAT_TEMP->set_sv_netview_offsetfromdp(10712768);
        sc_inst_37 = new bd_5dca_interconnect1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.interconnect1_0");
        sc_inst_37->xsim_set_dbg_index(4353);
        xsim_sc_channel<0, bool > *p_37_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk.bind(*p_37_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk);
        xsim_sc_channel<0, bool > *p_37_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_37->aclk1.bind(*p_37_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aclk1);
        xsim_sc_channel<0, bool > *p_37_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_37->aresetn.bind(*p_37_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_37_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arid.bind(*p_37_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_37_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_37->S00_AXI_araddr.bind(*p_37_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_37_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_37->S00_AXI_arlen.bind(*p_37_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arsize.bind(*p_37_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_arburst.bind(*p_37_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_arlock.bind(*p_37_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arcache.bind(*p_37_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->S00_AXI_arprot.bind(*p_37_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->S00_AXI_arqos.bind(*p_37_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arvalid.bind(*p_37_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_arready.bind(*p_37_S00_AXI_arready);
        p_37_S00_AXI_arready->set_sv_netview_offsetfromdp(10888432);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_37_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_37->S00_AXI_rid.bind(*p_37_S00_AXI_rid);
        p_37_S00_AXI_rid->set_sv_netview_offsetfromdp(10888488);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_37_S00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_37->S00_AXI_rdata.bind(*p_37_S00_AXI_rdata);
        p_37_S00_AXI_rdata->set_sv_netview_offsetfromdp(10888544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->S00_AXI_rresp.bind(*p_37_S00_AXI_rresp);
        p_37_S00_AXI_rresp->set_sv_netview_offsetfromdp(10888600);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rlast.bind(*p_37_S00_AXI_rlast);
        p_37_S00_AXI_rlast->set_sv_netview_offsetfromdp(10888656);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rvalid.bind(*p_37_S00_AXI_rvalid);
        p_37_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10888712);
        xsim_sc_channel<0, bool > *p_37_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->S00_AXI_rready.bind(*p_37_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_37_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_37->M00_AXI_araddr.bind(*p_37_M00_AXI_araddr);
        p_37_M00_AXI_araddr->set_sv_netview_offsetfromdp(10888824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arlen.bind(*p_37_M00_AXI_arlen);
        p_37_M00_AXI_arlen->set_sv_netview_offsetfromdp(10888880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arsize.bind(*p_37_M00_AXI_arsize);
        p_37_M00_AXI_arsize->set_sv_netview_offsetfromdp(10888936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arburst.bind(*p_37_M00_AXI_arburst);
        p_37_M00_AXI_arburst->set_sv_netview_offsetfromdp(10888992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_arlock.bind(*p_37_M00_AXI_arlock);
        p_37_M00_AXI_arlock->set_sv_netview_offsetfromdp(10889048);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arcache.bind(*p_37_M00_AXI_arcache);
        p_37_M00_AXI_arcache->set_sv_netview_offsetfromdp(10889104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_37_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_37->M00_AXI_arprot.bind(*p_37_M00_AXI_arprot);
        p_37_M00_AXI_arprot->set_sv_netview_offsetfromdp(10889160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_37_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_37->M00_AXI_arqos.bind(*p_37_M00_AXI_arqos);
        p_37_M00_AXI_arqos->set_sv_netview_offsetfromdp(10889216);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arvalid.bind(*p_37_M00_AXI_arvalid);
        p_37_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10889272);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_arready.bind(*p_37_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_37_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_37->M00_AXI_rdata.bind(*p_37_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_37_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_37->M00_AXI_rresp.bind(*p_37_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rlast.bind(*p_37_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rvalid.bind(*p_37_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_37_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_37_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_37->M00_AXI_rready.bind(*p_37_M00_AXI_rready);
        p_37_M00_AXI_rready->set_sv_netview_offsetfromdp(10889608);
        sc_inst_38 = new bd_5dca_slice1_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_0.slice1_0");
        sc_inst_38->xsim_set_dbg_index(4354);
        xsim_sc_channel<0, bool > *p_38_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_38->aclk.bind(*p_38_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aclk);
        xsim_sc_channel<0, bool > *p_38_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_38->aresetn.bind(*p_38_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_38_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_38_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_38->s_axi_awaddr.bind(*p_38_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awlen.bind(*p_38_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_awsize.bind(*p_38_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_awburst.bind(*p_38_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_awlock.bind(*p_38_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awcache.bind(*p_38_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_awprot.bind(*p_38_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_awqos.bind(*p_38_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_38_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awvalid.bind(*p_38_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_awready.bind(*p_38_s_axi_awready);
        p_38_s_axi_awready->set_sv_netview_offsetfromdp(10890328);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_38_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_38->s_axi_wdata.bind(*p_38_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->s_axi_wstrb.bind(*p_38_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_38_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wlast.bind(*p_38_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_38_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wvalid.bind(*p_38_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_wready.bind(*p_38_s_axi_wready);
        p_38_s_axi_wready->set_sv_netview_offsetfromdp(10890608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_bresp.bind(*p_38_s_axi_bresp);
        p_38_s_axi_bresp->set_sv_netview_offsetfromdp(10890664);
        xsim_sc_channel<0, bool > *p_38_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_bvalid.bind(*p_38_s_axi_bvalid);
        p_38_s_axi_bvalid->set_sv_netview_offsetfromdp(10890720);
        xsim_sc_channel<0, bool > *p_38_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_bready.bind(*p_38_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_38_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_38->s_axi_araddr.bind(*p_38_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arlen.bind(*p_38_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_arsize.bind(*p_38_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_arburst.bind(*p_38_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_arlock.bind(*p_38_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arcache.bind(*p_38_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->s_axi_arprot.bind(*p_38_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->s_axi_arqos.bind(*p_38_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_38_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arvalid.bind(*p_38_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_38_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_arready.bind(*p_38_s_axi_arready);
        p_38_s_axi_arready->set_sv_netview_offsetfromdp(10891336);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_38_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_38->s_axi_rdata.bind(*p_38_s_axi_rdata);
        p_38_s_axi_rdata->set_sv_netview_offsetfromdp(10891392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->s_axi_rresp.bind(*p_38_s_axi_rresp);
        p_38_s_axi_rresp->set_sv_netview_offsetfromdp(10891448);
        xsim_sc_channel<0, bool > *p_38_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rlast.bind(*p_38_s_axi_rlast);
        p_38_s_axi_rlast->set_sv_netview_offsetfromdp(10891504);
        xsim_sc_channel<0, bool > *p_38_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rvalid.bind(*p_38_s_axi_rvalid);
        p_38_s_axi_rvalid->set_sv_netview_offsetfromdp(10891560);
        xsim_sc_channel<0, bool > *p_38_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->s_axi_rready.bind(*p_38_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_38_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_38->m_axi_awaddr.bind(*p_38_m_axi_awaddr);
        p_38_m_axi_awaddr->set_sv_netview_offsetfromdp(10891672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_awlen.bind(*p_38_m_axi_awlen);
        p_38_m_axi_awlen->set_sv_netview_offsetfromdp(10891728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_awsize.bind(*p_38_m_axi_awsize);
        p_38_m_axi_awsize->set_sv_netview_offsetfromdp(10891784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_awburst.bind(*p_38_m_axi_awburst);
        p_38_m_axi_awburst->set_sv_netview_offsetfromdp(10891840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_awlock.bind(*p_38_m_axi_awlock);
        p_38_m_axi_awlock->set_sv_netview_offsetfromdp(10891896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_awcache.bind(*p_38_m_axi_awcache);
        p_38_m_axi_awcache->set_sv_netview_offsetfromdp(10891952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_awprot.bind(*p_38_m_axi_awprot);
        p_38_m_axi_awprot->set_sv_netview_offsetfromdp(10892008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_awqos.bind(*p_38_m_axi_awqos);
        p_38_m_axi_awqos->set_sv_netview_offsetfromdp(10892064);
        xsim_sc_channel<0, bool > *p_38_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_awvalid.bind(*p_38_m_axi_awvalid);
        p_38_m_axi_awvalid->set_sv_netview_offsetfromdp(10892120);
        xsim_sc_channel<0, bool > *p_38_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_awready.bind(*p_38_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_38_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_38->m_axi_wdata.bind(*p_38_m_axi_wdata);
        p_38_m_axi_wdata->set_sv_netview_offsetfromdp(10892232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_38_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_38->m_axi_wstrb.bind(*p_38_m_axi_wstrb);
        p_38_m_axi_wstrb->set_sv_netview_offsetfromdp(10892288);
        xsim_sc_channel<0, bool > *p_38_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_wlast.bind(*p_38_m_axi_wlast);
        p_38_m_axi_wlast->set_sv_netview_offsetfromdp(10892344);
        xsim_sc_channel<0, bool > *p_38_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_wvalid.bind(*p_38_m_axi_wvalid);
        p_38_m_axi_wvalid->set_sv_netview_offsetfromdp(10892400);
        xsim_sc_channel<0, bool > *p_38_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_wready.bind(*p_38_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_bresp.bind(*p_38_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_38_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_bvalid.bind(*p_38_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_38_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_bready.bind(*p_38_m_axi_bready);
        p_38_m_axi_bready->set_sv_netview_offsetfromdp(10892624);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_38_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_38->m_axi_araddr.bind(*p_38_m_axi_araddr);
        p_38_m_axi_araddr->set_sv_netview_offsetfromdp(10892680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_arlen.bind(*p_38_m_axi_arlen);
        p_38_m_axi_arlen->set_sv_netview_offsetfromdp(10892736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_arsize.bind(*p_38_m_axi_arsize);
        p_38_m_axi_arsize->set_sv_netview_offsetfromdp(10892792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_arburst.bind(*p_38_m_axi_arburst);
        p_38_m_axi_arburst->set_sv_netview_offsetfromdp(10892848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_arlock.bind(*p_38_m_axi_arlock);
        p_38_m_axi_arlock->set_sv_netview_offsetfromdp(10892904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_arcache.bind(*p_38_m_axi_arcache);
        p_38_m_axi_arcache->set_sv_netview_offsetfromdp(10892960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_38_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_38->m_axi_arprot.bind(*p_38_m_axi_arprot);
        p_38_m_axi_arprot->set_sv_netview_offsetfromdp(10893016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_38_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_38->m_axi_arqos.bind(*p_38_m_axi_arqos);
        p_38_m_axi_arqos->set_sv_netview_offsetfromdp(10893072);
        xsim_sc_channel<0, bool > *p_38_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_arvalid.bind(*p_38_m_axi_arvalid);
        p_38_m_axi_arvalid->set_sv_netview_offsetfromdp(10893128);
        xsim_sc_channel<0, bool > *p_38_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_arready.bind(*p_38_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_38_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_38->m_axi_rdata.bind(*p_38_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_38_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_38->m_axi_rresp.bind(*p_38_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_38_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_rlast.bind(*p_38_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_38_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_rvalid.bind(*p_38_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_38_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_38_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_38->m_axi_rready.bind(*p_38_m_axi_rready);
        p_38_m_axi_rready->set_sv_netview_offsetfromdp(10893464);
        sc_inst_39 = new bd_5dca_interconnect2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.interconnect2_1");
        sc_inst_39->xsim_set_dbg_index(4407);
        xsim_sc_channel<0, bool > *p_39_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk.bind(*p_39_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk);
        xsim_sc_channel<0, bool > *p_39_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_39->aclk1.bind(*p_39_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aclk1);
        xsim_sc_channel<0, bool > *p_39_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_39->aresetn.bind(*p_39_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_39_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awid.bind(*p_39_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_39_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_39->S00_AXI_awaddr.bind(*p_39_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_39_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_39->S00_AXI_awlen.bind(*p_39_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awsize.bind(*p_39_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_awburst.bind(*p_39_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_awlock.bind(*p_39_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awcache.bind(*p_39_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->S00_AXI_awprot.bind(*p_39_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->S00_AXI_awqos.bind(*p_39_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awvalid.bind(*p_39_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_awready.bind(*p_39_S00_AXI_awready);
        p_39_S00_AXI_awready->set_sv_netview_offsetfromdp(10940112);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_39_S00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_39->S00_AXI_wdata.bind(*p_39_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_S00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->S00_AXI_wstrb.bind(*p_39_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wlast.bind(*p_39_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wvalid.bind(*p_39_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_wready.bind(*p_39_S00_AXI_wready);
        p_39_S00_AXI_wready->set_sv_netview_offsetfromdp(10940392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_39_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_39->S00_AXI_bid.bind(*p_39_S00_AXI_bid);
        p_39_S00_AXI_bid->set_sv_netview_offsetfromdp(10940448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->S00_AXI_bresp.bind(*p_39_S00_AXI_bresp);
        p_39_S00_AXI_bresp->set_sv_netview_offsetfromdp(10940504);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bvalid.bind(*p_39_S00_AXI_bvalid);
        p_39_S00_AXI_bvalid->set_sv_netview_offsetfromdp(10940560);
        xsim_sc_channel<0, bool > *p_39_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->S00_AXI_bready.bind(*p_39_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_39_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_39->M00_AXI_awaddr.bind(*p_39_M00_AXI_awaddr);
        p_39_M00_AXI_awaddr->set_sv_netview_offsetfromdp(10940672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awlen.bind(*p_39_M00_AXI_awlen);
        p_39_M00_AXI_awlen->set_sv_netview_offsetfromdp(10940728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awsize.bind(*p_39_M00_AXI_awsize);
        p_39_M00_AXI_awsize->set_sv_netview_offsetfromdp(10940784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awburst.bind(*p_39_M00_AXI_awburst);
        p_39_M00_AXI_awburst->set_sv_netview_offsetfromdp(10940840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_awlock.bind(*p_39_M00_AXI_awlock);
        p_39_M00_AXI_awlock->set_sv_netview_offsetfromdp(10940896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awcache.bind(*p_39_M00_AXI_awcache);
        p_39_M00_AXI_awcache->set_sv_netview_offsetfromdp(10940952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_39_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_39->M00_AXI_awprot.bind(*p_39_M00_AXI_awprot);
        p_39_M00_AXI_awprot->set_sv_netview_offsetfromdp(10941008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_39_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_39->M00_AXI_awqos.bind(*p_39_M00_AXI_awqos);
        p_39_M00_AXI_awqos->set_sv_netview_offsetfromdp(10941064);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awvalid.bind(*p_39_M00_AXI_awvalid);
        p_39_M00_AXI_awvalid->set_sv_netview_offsetfromdp(10941120);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_awready.bind(*p_39_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_39_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_39->M00_AXI_wdata.bind(*p_39_M00_AXI_wdata);
        p_39_M00_AXI_wdata->set_sv_netview_offsetfromdp(10941232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_39_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_39->M00_AXI_wstrb.bind(*p_39_M00_AXI_wstrb);
        p_39_M00_AXI_wstrb->set_sv_netview_offsetfromdp(10941288);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wlast.bind(*p_39_M00_AXI_wlast);
        p_39_M00_AXI_wlast->set_sv_netview_offsetfromdp(10941344);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wvalid.bind(*p_39_M00_AXI_wvalid);
        p_39_M00_AXI_wvalid->set_sv_netview_offsetfromdp(10941400);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_wready.bind(*p_39_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_39_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_39->M00_AXI_bresp.bind(*p_39_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bvalid.bind(*p_39_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_39_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_39_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_39->M00_AXI_bready.bind(*p_39_M00_AXI_bready);
        p_39_M00_AXI_bready->set_sv_netview_offsetfromdp(10941624);
        sc_inst_40 = new bd_5dca_slice2_1_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_1.slice2_1");
        sc_inst_40->xsim_set_dbg_index(4408);
        xsim_sc_channel<0, bool > *p_40_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_40->aclk.bind(*p_40_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aclk);
        xsim_sc_channel<0, bool > *p_40_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_40->aresetn.bind(*p_40_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_40_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_40_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_40->s_axi_awaddr.bind(*p_40_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awlen.bind(*p_40_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awsize.bind(*p_40_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awburst.bind(*p_40_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_awlock.bind(*p_40_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awcache.bind(*p_40_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_awprot.bind(*p_40_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_awqos.bind(*p_40_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_40_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awvalid.bind(*p_40_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_awready.bind(*p_40_s_axi_awready);
        p_40_s_axi_awready->set_sv_netview_offsetfromdp(10942344);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_40_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_40->s_axi_wdata.bind(*p_40_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->s_axi_wstrb.bind(*p_40_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_40_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wlast.bind(*p_40_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_40_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wvalid.bind(*p_40_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_wready.bind(*p_40_s_axi_wready);
        p_40_s_axi_wready->set_sv_netview_offsetfromdp(10942624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_bresp.bind(*p_40_s_axi_bresp);
        p_40_s_axi_bresp->set_sv_netview_offsetfromdp(10942680);
        xsim_sc_channel<0, bool > *p_40_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bvalid.bind(*p_40_s_axi_bvalid);
        p_40_s_axi_bvalid->set_sv_netview_offsetfromdp(10942736);
        xsim_sc_channel<0, bool > *p_40_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_bready.bind(*p_40_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_40_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_40->s_axi_araddr.bind(*p_40_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arlen.bind(*p_40_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arsize.bind(*p_40_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arburst.bind(*p_40_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_arlock.bind(*p_40_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arcache.bind(*p_40_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->s_axi_arprot.bind(*p_40_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->s_axi_arqos.bind(*p_40_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_40_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arvalid.bind(*p_40_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_40_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_arready.bind(*p_40_s_axi_arready);
        p_40_s_axi_arready->set_sv_netview_offsetfromdp(10943352);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_40_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_40->s_axi_rdata.bind(*p_40_s_axi_rdata);
        p_40_s_axi_rdata->set_sv_netview_offsetfromdp(10943408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->s_axi_rresp.bind(*p_40_s_axi_rresp);
        p_40_s_axi_rresp->set_sv_netview_offsetfromdp(10943464);
        xsim_sc_channel<0, bool > *p_40_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rlast.bind(*p_40_s_axi_rlast);
        p_40_s_axi_rlast->set_sv_netview_offsetfromdp(10943520);
        xsim_sc_channel<0, bool > *p_40_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rvalid.bind(*p_40_s_axi_rvalid);
        p_40_s_axi_rvalid->set_sv_netview_offsetfromdp(10943576);
        xsim_sc_channel<0, bool > *p_40_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->s_axi_rready.bind(*p_40_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_40_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_40->m_axi_awaddr.bind(*p_40_m_axi_awaddr);
        p_40_m_axi_awaddr->set_sv_netview_offsetfromdp(10943688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awlen.bind(*p_40_m_axi_awlen);
        p_40_m_axi_awlen->set_sv_netview_offsetfromdp(10943744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_awsize.bind(*p_40_m_axi_awsize);
        p_40_m_axi_awsize->set_sv_netview_offsetfromdp(10943800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_awburst.bind(*p_40_m_axi_awburst);
        p_40_m_axi_awburst->set_sv_netview_offsetfromdp(10943856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_awlock.bind(*p_40_m_axi_awlock);
        p_40_m_axi_awlock->set_sv_netview_offsetfromdp(10943912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awcache.bind(*p_40_m_axi_awcache);
        p_40_m_axi_awcache->set_sv_netview_offsetfromdp(10943968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_awprot.bind(*p_40_m_axi_awprot);
        p_40_m_axi_awprot->set_sv_netview_offsetfromdp(10944024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_awqos.bind(*p_40_m_axi_awqos);
        p_40_m_axi_awqos->set_sv_netview_offsetfromdp(10944080);
        xsim_sc_channel<0, bool > *p_40_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_awvalid.bind(*p_40_m_axi_awvalid);
        p_40_m_axi_awvalid->set_sv_netview_offsetfromdp(10944136);
        xsim_sc_channel<0, bool > *p_40_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_awready.bind(*p_40_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_40_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_40->m_axi_wdata.bind(*p_40_m_axi_wdata);
        p_40_m_axi_wdata->set_sv_netview_offsetfromdp(10944248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_40_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_40->m_axi_wstrb.bind(*p_40_m_axi_wstrb);
        p_40_m_axi_wstrb->set_sv_netview_offsetfromdp(10944304);
        xsim_sc_channel<0, bool > *p_40_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wlast.bind(*p_40_m_axi_wlast);
        p_40_m_axi_wlast->set_sv_netview_offsetfromdp(10944360);
        xsim_sc_channel<0, bool > *p_40_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wvalid.bind(*p_40_m_axi_wvalid);
        p_40_m_axi_wvalid->set_sv_netview_offsetfromdp(10944416);
        xsim_sc_channel<0, bool > *p_40_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_wready.bind(*p_40_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_bresp.bind(*p_40_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_40_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_bvalid.bind(*p_40_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_40_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_bready.bind(*p_40_m_axi_bready);
        p_40_m_axi_bready->set_sv_netview_offsetfromdp(10944640);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_40_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_40->m_axi_araddr.bind(*p_40_m_axi_araddr);
        p_40_m_axi_araddr->set_sv_netview_offsetfromdp(10944696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arlen.bind(*p_40_m_axi_arlen);
        p_40_m_axi_arlen->set_sv_netview_offsetfromdp(10944752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_arsize.bind(*p_40_m_axi_arsize);
        p_40_m_axi_arsize->set_sv_netview_offsetfromdp(10944808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_arburst.bind(*p_40_m_axi_arburst);
        p_40_m_axi_arburst->set_sv_netview_offsetfromdp(10944864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_arlock.bind(*p_40_m_axi_arlock);
        p_40_m_axi_arlock->set_sv_netview_offsetfromdp(10944920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arcache.bind(*p_40_m_axi_arcache);
        p_40_m_axi_arcache->set_sv_netview_offsetfromdp(10944976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_40_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_40->m_axi_arprot.bind(*p_40_m_axi_arprot);
        p_40_m_axi_arprot->set_sv_netview_offsetfromdp(10945032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_40_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_40->m_axi_arqos.bind(*p_40_m_axi_arqos);
        p_40_m_axi_arqos->set_sv_netview_offsetfromdp(10945088);
        xsim_sc_channel<0, bool > *p_40_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_arvalid.bind(*p_40_m_axi_arvalid);
        p_40_m_axi_arvalid->set_sv_netview_offsetfromdp(10945144);
        xsim_sc_channel<0, bool > *p_40_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_arready.bind(*p_40_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_40_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_40->m_axi_rdata.bind(*p_40_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_40_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_40->m_axi_rresp.bind(*p_40_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_40_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rlast.bind(*p_40_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_40_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rvalid.bind(*p_40_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_40_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_40_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_40->m_axi_rready.bind(*p_40_m_axi_rready);
        p_40_m_axi_rready->set_sv_netview_offsetfromdp(10945480);
        sc_inst_41 = new bd_5dca_interconnect3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.interconnect3_2");
        sc_inst_41->xsim_set_dbg_index(4464);
        xsim_sc_channel<0, bool > *p_41_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk.bind(*p_41_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk);
        xsim_sc_channel<0, bool > *p_41_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_41->aclk1.bind(*p_41_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aclk1);
        xsim_sc_channel<0, bool > *p_41_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_41->aresetn.bind(*p_41_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_41_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arid.bind(*p_41_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_41_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_41->S00_AXI_araddr.bind(*p_41_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_41_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_41->S00_AXI_arlen.bind(*p_41_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arsize.bind(*p_41_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_arburst.bind(*p_41_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_arlock.bind(*p_41_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arcache.bind(*p_41_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->S00_AXI_arprot.bind(*p_41_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->S00_AXI_arqos.bind(*p_41_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arvalid.bind(*p_41_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_arready.bind(*p_41_S00_AXI_arready);
        p_41_S00_AXI_arready->set_sv_netview_offsetfromdp(10989272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_41_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_41->S00_AXI_rid.bind(*p_41_S00_AXI_rid);
        p_41_S00_AXI_rid->set_sv_netview_offsetfromdp(10989328);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_41_S00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_41->S00_AXI_rdata.bind(*p_41_S00_AXI_rdata);
        p_41_S00_AXI_rdata->set_sv_netview_offsetfromdp(10989384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->S00_AXI_rresp.bind(*p_41_S00_AXI_rresp);
        p_41_S00_AXI_rresp->set_sv_netview_offsetfromdp(10989440);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rlast.bind(*p_41_S00_AXI_rlast);
        p_41_S00_AXI_rlast->set_sv_netview_offsetfromdp(10989496);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rvalid.bind(*p_41_S00_AXI_rvalid);
        p_41_S00_AXI_rvalid->set_sv_netview_offsetfromdp(10989552);
        xsim_sc_channel<0, bool > *p_41_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->S00_AXI_rready.bind(*p_41_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_41_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_41->M00_AXI_araddr.bind(*p_41_M00_AXI_araddr);
        p_41_M00_AXI_araddr->set_sv_netview_offsetfromdp(10989664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arlen.bind(*p_41_M00_AXI_arlen);
        p_41_M00_AXI_arlen->set_sv_netview_offsetfromdp(10989720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arsize.bind(*p_41_M00_AXI_arsize);
        p_41_M00_AXI_arsize->set_sv_netview_offsetfromdp(10989776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arburst.bind(*p_41_M00_AXI_arburst);
        p_41_M00_AXI_arburst->set_sv_netview_offsetfromdp(10989832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_arlock.bind(*p_41_M00_AXI_arlock);
        p_41_M00_AXI_arlock->set_sv_netview_offsetfromdp(10989888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arcache.bind(*p_41_M00_AXI_arcache);
        p_41_M00_AXI_arcache->set_sv_netview_offsetfromdp(10989944);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_41_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_41->M00_AXI_arprot.bind(*p_41_M00_AXI_arprot);
        p_41_M00_AXI_arprot->set_sv_netview_offsetfromdp(10990000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_41_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_41->M00_AXI_arqos.bind(*p_41_M00_AXI_arqos);
        p_41_M00_AXI_arqos->set_sv_netview_offsetfromdp(10990056);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arvalid.bind(*p_41_M00_AXI_arvalid);
        p_41_M00_AXI_arvalid->set_sv_netview_offsetfromdp(10990112);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_arready.bind(*p_41_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_41_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_41->M00_AXI_rdata.bind(*p_41_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_41_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_41->M00_AXI_rresp.bind(*p_41_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rlast.bind(*p_41_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rvalid.bind(*p_41_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_41_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_41_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_41->M00_AXI_rready.bind(*p_41_M00_AXI_rready);
        p_41_M00_AXI_rready->set_sv_netview_offsetfromdp(10990448);
        sc_inst_42 = new bd_5dca_slice3_2_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_2.slice3_2");
        sc_inst_42->xsim_set_dbg_index(4465);
        xsim_sc_channel<0, bool > *p_42_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_42->aclk.bind(*p_42_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aclk);
        xsim_sc_channel<0, bool > *p_42_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_42->aresetn.bind(*p_42_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_42_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_42_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_42->s_axi_awaddr.bind(*p_42_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awlen.bind(*p_42_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awsize.bind(*p_42_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_awburst.bind(*p_42_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_awlock.bind(*p_42_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awcache.bind(*p_42_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_awprot.bind(*p_42_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_awqos.bind(*p_42_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_42_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awvalid.bind(*p_42_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_awready.bind(*p_42_s_axi_awready);
        p_42_s_axi_awready->set_sv_netview_offsetfromdp(10991168);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_42_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_42->s_axi_wdata.bind(*p_42_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->s_axi_wstrb.bind(*p_42_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_42_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wlast.bind(*p_42_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_42_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wvalid.bind(*p_42_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_wready.bind(*p_42_s_axi_wready);
        p_42_s_axi_wready->set_sv_netview_offsetfromdp(10991448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_bresp.bind(*p_42_s_axi_bresp);
        p_42_s_axi_bresp->set_sv_netview_offsetfromdp(10991504);
        xsim_sc_channel<0, bool > *p_42_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bvalid.bind(*p_42_s_axi_bvalid);
        p_42_s_axi_bvalid->set_sv_netview_offsetfromdp(10991560);
        xsim_sc_channel<0, bool > *p_42_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_bready.bind(*p_42_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_42_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_42->s_axi_araddr.bind(*p_42_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arlen.bind(*p_42_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arsize.bind(*p_42_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_arburst.bind(*p_42_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_arlock.bind(*p_42_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arcache.bind(*p_42_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->s_axi_arprot.bind(*p_42_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->s_axi_arqos.bind(*p_42_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_42_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arvalid.bind(*p_42_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_42_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_arready.bind(*p_42_s_axi_arready);
        p_42_s_axi_arready->set_sv_netview_offsetfromdp(10992176);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_42_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_42->s_axi_rdata.bind(*p_42_s_axi_rdata);
        p_42_s_axi_rdata->set_sv_netview_offsetfromdp(10992232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->s_axi_rresp.bind(*p_42_s_axi_rresp);
        p_42_s_axi_rresp->set_sv_netview_offsetfromdp(10992288);
        xsim_sc_channel<0, bool > *p_42_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rlast.bind(*p_42_s_axi_rlast);
        p_42_s_axi_rlast->set_sv_netview_offsetfromdp(10992344);
        xsim_sc_channel<0, bool > *p_42_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rvalid.bind(*p_42_s_axi_rvalid);
        p_42_s_axi_rvalid->set_sv_netview_offsetfromdp(10992400);
        xsim_sc_channel<0, bool > *p_42_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->s_axi_rready.bind(*p_42_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_42_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_42->m_axi_awaddr.bind(*p_42_m_axi_awaddr);
        p_42_m_axi_awaddr->set_sv_netview_offsetfromdp(10992512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awlen.bind(*p_42_m_axi_awlen);
        p_42_m_axi_awlen->set_sv_netview_offsetfromdp(10992568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awsize.bind(*p_42_m_axi_awsize);
        p_42_m_axi_awsize->set_sv_netview_offsetfromdp(10992624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_awburst.bind(*p_42_m_axi_awburst);
        p_42_m_axi_awburst->set_sv_netview_offsetfromdp(10992680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_awlock.bind(*p_42_m_axi_awlock);
        p_42_m_axi_awlock->set_sv_netview_offsetfromdp(10992736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awcache.bind(*p_42_m_axi_awcache);
        p_42_m_axi_awcache->set_sv_netview_offsetfromdp(10992792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_awprot.bind(*p_42_m_axi_awprot);
        p_42_m_axi_awprot->set_sv_netview_offsetfromdp(10992848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_awqos.bind(*p_42_m_axi_awqos);
        p_42_m_axi_awqos->set_sv_netview_offsetfromdp(10992904);
        xsim_sc_channel<0, bool > *p_42_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awvalid.bind(*p_42_m_axi_awvalid);
        p_42_m_axi_awvalid->set_sv_netview_offsetfromdp(10992960);
        xsim_sc_channel<0, bool > *p_42_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_awready.bind(*p_42_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_42_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_42->m_axi_wdata.bind(*p_42_m_axi_wdata);
        p_42_m_axi_wdata->set_sv_netview_offsetfromdp(10993072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_42_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_42->m_axi_wstrb.bind(*p_42_m_axi_wstrb);
        p_42_m_axi_wstrb->set_sv_netview_offsetfromdp(10993128);
        xsim_sc_channel<0, bool > *p_42_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wlast.bind(*p_42_m_axi_wlast);
        p_42_m_axi_wlast->set_sv_netview_offsetfromdp(10993184);
        xsim_sc_channel<0, bool > *p_42_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wvalid.bind(*p_42_m_axi_wvalid);
        p_42_m_axi_wvalid->set_sv_netview_offsetfromdp(10993240);
        xsim_sc_channel<0, bool > *p_42_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_wready.bind(*p_42_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_bresp.bind(*p_42_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bvalid.bind(*p_42_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_bready.bind(*p_42_m_axi_bready);
        p_42_m_axi_bready->set_sv_netview_offsetfromdp(10993464);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_42_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_42->m_axi_araddr.bind(*p_42_m_axi_araddr);
        p_42_m_axi_araddr->set_sv_netview_offsetfromdp(10993520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arlen.bind(*p_42_m_axi_arlen);
        p_42_m_axi_arlen->set_sv_netview_offsetfromdp(10993576);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arsize.bind(*p_42_m_axi_arsize);
        p_42_m_axi_arsize->set_sv_netview_offsetfromdp(10993632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_arburst.bind(*p_42_m_axi_arburst);
        p_42_m_axi_arburst->set_sv_netview_offsetfromdp(10993688);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_arlock.bind(*p_42_m_axi_arlock);
        p_42_m_axi_arlock->set_sv_netview_offsetfromdp(10993744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arcache.bind(*p_42_m_axi_arcache);
        p_42_m_axi_arcache->set_sv_netview_offsetfromdp(10993800);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_42_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_42->m_axi_arprot.bind(*p_42_m_axi_arprot);
        p_42_m_axi_arprot->set_sv_netview_offsetfromdp(10993856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_42_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_42->m_axi_arqos.bind(*p_42_m_axi_arqos);
        p_42_m_axi_arqos->set_sv_netview_offsetfromdp(10993912);
        xsim_sc_channel<0, bool > *p_42_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arvalid.bind(*p_42_m_axi_arvalid);
        p_42_m_axi_arvalid->set_sv_netview_offsetfromdp(10993968);
        xsim_sc_channel<0, bool > *p_42_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_arready.bind(*p_42_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_42_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_42->m_axi_rdata.bind(*p_42_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_42_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_42->m_axi_rresp.bind(*p_42_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_42_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rlast.bind(*p_42_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_42_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rvalid.bind(*p_42_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_42_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_42_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_42->m_axi_rready.bind(*p_42_m_axi_rready);
        p_42_m_axi_rready->set_sv_netview_offsetfromdp(10994304);
        sc_inst_43 = new bd_5dca_interconnect4_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.interconnect4_3");
        sc_inst_43->xsim_set_dbg_index(4518);
        xsim_sc_channel<0, bool > *p_43_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk.bind(*p_43_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk);
        xsim_sc_channel<0, bool > *p_43_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_43->aclk1.bind(*p_43_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aclk1);
        xsim_sc_channel<0, bool > *p_43_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_43->aresetn.bind(*p_43_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_43_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awid.bind(*p_43_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_43_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_43->S00_AXI_awaddr.bind(*p_43_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_43_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_43->S00_AXI_awlen.bind(*p_43_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awsize.bind(*p_43_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_awburst.bind(*p_43_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_awlock.bind(*p_43_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awcache.bind(*p_43_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->S00_AXI_awprot.bind(*p_43_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->S00_AXI_awqos.bind(*p_43_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awvalid.bind(*p_43_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_awready.bind(*p_43_S00_AXI_awready);
        p_43_S00_AXI_awready->set_sv_netview_offsetfromdp(11040952);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_43_S00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_43->S00_AXI_wdata.bind(*p_43_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_S00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->S00_AXI_wstrb.bind(*p_43_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wlast.bind(*p_43_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wvalid.bind(*p_43_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_wready.bind(*p_43_S00_AXI_wready);
        p_43_S00_AXI_wready->set_sv_netview_offsetfromdp(11041232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_43_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_43->S00_AXI_bid.bind(*p_43_S00_AXI_bid);
        p_43_S00_AXI_bid->set_sv_netview_offsetfromdp(11041288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->S00_AXI_bresp.bind(*p_43_S00_AXI_bresp);
        p_43_S00_AXI_bresp->set_sv_netview_offsetfromdp(11041344);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bvalid.bind(*p_43_S00_AXI_bvalid);
        p_43_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11041400);
        xsim_sc_channel<0, bool > *p_43_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->S00_AXI_bready.bind(*p_43_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_43_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_43->M00_AXI_awaddr.bind(*p_43_M00_AXI_awaddr);
        p_43_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11041512);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awlen.bind(*p_43_M00_AXI_awlen);
        p_43_M00_AXI_awlen->set_sv_netview_offsetfromdp(11041568);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awsize.bind(*p_43_M00_AXI_awsize);
        p_43_M00_AXI_awsize->set_sv_netview_offsetfromdp(11041624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_awburst.bind(*p_43_M00_AXI_awburst);
        p_43_M00_AXI_awburst->set_sv_netview_offsetfromdp(11041680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_awlock.bind(*p_43_M00_AXI_awlock);
        p_43_M00_AXI_awlock->set_sv_netview_offsetfromdp(11041736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awcache.bind(*p_43_M00_AXI_awcache);
        p_43_M00_AXI_awcache->set_sv_netview_offsetfromdp(11041792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_43_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_43->M00_AXI_awprot.bind(*p_43_M00_AXI_awprot);
        p_43_M00_AXI_awprot->set_sv_netview_offsetfromdp(11041848);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_43_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_43->M00_AXI_awqos.bind(*p_43_M00_AXI_awqos);
        p_43_M00_AXI_awqos->set_sv_netview_offsetfromdp(11041904);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awvalid.bind(*p_43_M00_AXI_awvalid);
        p_43_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11041960);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_awready.bind(*p_43_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_43_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_43->M00_AXI_wdata.bind(*p_43_M00_AXI_wdata);
        p_43_M00_AXI_wdata->set_sv_netview_offsetfromdp(11042072);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_43_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_43->M00_AXI_wstrb.bind(*p_43_M00_AXI_wstrb);
        p_43_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11042128);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wlast.bind(*p_43_M00_AXI_wlast);
        p_43_M00_AXI_wlast->set_sv_netview_offsetfromdp(11042184);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wvalid.bind(*p_43_M00_AXI_wvalid);
        p_43_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11042240);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_wready.bind(*p_43_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_43_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_43->M00_AXI_bresp.bind(*p_43_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bvalid.bind(*p_43_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_43_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_43_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_43->M00_AXI_bready.bind(*p_43_M00_AXI_bready);
        p_43_M00_AXI_bready->set_sv_netview_offsetfromdp(11042464);
        sc_inst_44 = new bd_5dca_slice4_3_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_3.slice4_3");
        sc_inst_44->xsim_set_dbg_index(4519);
        xsim_sc_channel<0, bool > *p_44_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_44->aclk.bind(*p_44_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aclk);
        xsim_sc_channel<0, bool > *p_44_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_44->aresetn.bind(*p_44_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_44_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_44_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_44->s_axi_awaddr.bind(*p_44_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_awlen.bind(*p_44_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awsize.bind(*p_44_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_awburst.bind(*p_44_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_awlock.bind(*p_44_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_awcache.bind(*p_44_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_awprot.bind(*p_44_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_awqos.bind(*p_44_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_44_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awvalid.bind(*p_44_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_awready.bind(*p_44_s_axi_awready);
        p_44_s_axi_awready->set_sv_netview_offsetfromdp(11043184);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_44_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_44->s_axi_wdata.bind(*p_44_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->s_axi_wstrb.bind(*p_44_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_44_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wlast.bind(*p_44_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_44_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wvalid.bind(*p_44_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_wready.bind(*p_44_s_axi_wready);
        p_44_s_axi_wready->set_sv_netview_offsetfromdp(11043464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_bresp.bind(*p_44_s_axi_bresp);
        p_44_s_axi_bresp->set_sv_netview_offsetfromdp(11043520);
        xsim_sc_channel<0, bool > *p_44_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bvalid.bind(*p_44_s_axi_bvalid);
        p_44_s_axi_bvalid->set_sv_netview_offsetfromdp(11043576);
        xsim_sc_channel<0, bool > *p_44_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_bready.bind(*p_44_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_44_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_44->s_axi_araddr.bind(*p_44_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_arlen.bind(*p_44_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arsize.bind(*p_44_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_arburst.bind(*p_44_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_arlock.bind(*p_44_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_arcache.bind(*p_44_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->s_axi_arprot.bind(*p_44_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->s_axi_arqos.bind(*p_44_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_44_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arvalid.bind(*p_44_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_44_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_arready.bind(*p_44_s_axi_arready);
        p_44_s_axi_arready->set_sv_netview_offsetfromdp(11044192);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_44_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_44->s_axi_rdata.bind(*p_44_s_axi_rdata);
        p_44_s_axi_rdata->set_sv_netview_offsetfromdp(11044248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->s_axi_rresp.bind(*p_44_s_axi_rresp);
        p_44_s_axi_rresp->set_sv_netview_offsetfromdp(11044304);
        xsim_sc_channel<0, bool > *p_44_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rlast.bind(*p_44_s_axi_rlast);
        p_44_s_axi_rlast->set_sv_netview_offsetfromdp(11044360);
        xsim_sc_channel<0, bool > *p_44_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rvalid.bind(*p_44_s_axi_rvalid);
        p_44_s_axi_rvalid->set_sv_netview_offsetfromdp(11044416);
        xsim_sc_channel<0, bool > *p_44_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->s_axi_rready.bind(*p_44_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_44_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_44->m_axi_awaddr.bind(*p_44_m_axi_awaddr);
        p_44_m_axi_awaddr->set_sv_netview_offsetfromdp(11044528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_awlen.bind(*p_44_m_axi_awlen);
        p_44_m_axi_awlen->set_sv_netview_offsetfromdp(11044584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_awsize.bind(*p_44_m_axi_awsize);
        p_44_m_axi_awsize->set_sv_netview_offsetfromdp(11044640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_awburst.bind(*p_44_m_axi_awburst);
        p_44_m_axi_awburst->set_sv_netview_offsetfromdp(11044696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_awlock.bind(*p_44_m_axi_awlock);
        p_44_m_axi_awlock->set_sv_netview_offsetfromdp(11044752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_awcache.bind(*p_44_m_axi_awcache);
        p_44_m_axi_awcache->set_sv_netview_offsetfromdp(11044808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_awprot.bind(*p_44_m_axi_awprot);
        p_44_m_axi_awprot->set_sv_netview_offsetfromdp(11044864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_awqos.bind(*p_44_m_axi_awqos);
        p_44_m_axi_awqos->set_sv_netview_offsetfromdp(11044920);
        xsim_sc_channel<0, bool > *p_44_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awvalid.bind(*p_44_m_axi_awvalid);
        p_44_m_axi_awvalid->set_sv_netview_offsetfromdp(11044976);
        xsim_sc_channel<0, bool > *p_44_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_awready.bind(*p_44_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_44_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_44->m_axi_wdata.bind(*p_44_m_axi_wdata);
        p_44_m_axi_wdata->set_sv_netview_offsetfromdp(11045088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_44_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_44->m_axi_wstrb.bind(*p_44_m_axi_wstrb);
        p_44_m_axi_wstrb->set_sv_netview_offsetfromdp(11045144);
        xsim_sc_channel<0, bool > *p_44_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wlast.bind(*p_44_m_axi_wlast);
        p_44_m_axi_wlast->set_sv_netview_offsetfromdp(11045200);
        xsim_sc_channel<0, bool > *p_44_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wvalid.bind(*p_44_m_axi_wvalid);
        p_44_m_axi_wvalid->set_sv_netview_offsetfromdp(11045256);
        xsim_sc_channel<0, bool > *p_44_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_wready.bind(*p_44_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_bresp.bind(*p_44_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bvalid.bind(*p_44_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_bready.bind(*p_44_m_axi_bready);
        p_44_m_axi_bready->set_sv_netview_offsetfromdp(11045480);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_44_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_44->m_axi_araddr.bind(*p_44_m_axi_araddr);
        p_44_m_axi_araddr->set_sv_netview_offsetfromdp(11045536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_arlen.bind(*p_44_m_axi_arlen);
        p_44_m_axi_arlen->set_sv_netview_offsetfromdp(11045592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_arsize.bind(*p_44_m_axi_arsize);
        p_44_m_axi_arsize->set_sv_netview_offsetfromdp(11045648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_arburst.bind(*p_44_m_axi_arburst);
        p_44_m_axi_arburst->set_sv_netview_offsetfromdp(11045704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_arlock.bind(*p_44_m_axi_arlock);
        p_44_m_axi_arlock->set_sv_netview_offsetfromdp(11045760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_arcache.bind(*p_44_m_axi_arcache);
        p_44_m_axi_arcache->set_sv_netview_offsetfromdp(11045816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_44_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_44->m_axi_arprot.bind(*p_44_m_axi_arprot);
        p_44_m_axi_arprot->set_sv_netview_offsetfromdp(11045872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_44_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_44->m_axi_arqos.bind(*p_44_m_axi_arqos);
        p_44_m_axi_arqos->set_sv_netview_offsetfromdp(11045928);
        xsim_sc_channel<0, bool > *p_44_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arvalid.bind(*p_44_m_axi_arvalid);
        p_44_m_axi_arvalid->set_sv_netview_offsetfromdp(11045984);
        xsim_sc_channel<0, bool > *p_44_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_arready.bind(*p_44_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_44_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_44->m_axi_rdata.bind(*p_44_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_44_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_44->m_axi_rresp.bind(*p_44_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_44_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rlast.bind(*p_44_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_44_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rvalid.bind(*p_44_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_44_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_44_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_44->m_axi_rready.bind(*p_44_m_axi_rready);
        p_44_m_axi_rready->set_sv_netview_offsetfromdp(11046320);
        sc_inst_45 = new bd_5dca_interconnect5_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.interconnect5_4");
        sc_inst_45->xsim_set_dbg_index(4575);
        xsim_sc_channel<0, bool > *p_45_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk.bind(*p_45_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk);
        xsim_sc_channel<0, bool > *p_45_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_45->aclk1.bind(*p_45_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aclk1);
        xsim_sc_channel<0, bool > *p_45_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_45->aresetn.bind(*p_45_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_45_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_arid.bind(*p_45_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_45_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_45->S00_AXI_araddr.bind(*p_45_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_45_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_45->S00_AXI_arlen.bind(*p_45_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arsize.bind(*p_45_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_arburst.bind(*p_45_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_arlock.bind(*p_45_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arcache.bind(*p_45_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->S00_AXI_arprot.bind(*p_45_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->S00_AXI_arqos.bind(*p_45_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arvalid.bind(*p_45_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_arready.bind(*p_45_S00_AXI_arready);
        p_45_S00_AXI_arready->set_sv_netview_offsetfromdp(11090112);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_45_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_45->S00_AXI_rid.bind(*p_45_S00_AXI_rid);
        p_45_S00_AXI_rid->set_sv_netview_offsetfromdp(11090168);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_45_S00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_45->S00_AXI_rdata.bind(*p_45_S00_AXI_rdata);
        p_45_S00_AXI_rdata->set_sv_netview_offsetfromdp(11090224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->S00_AXI_rresp.bind(*p_45_S00_AXI_rresp);
        p_45_S00_AXI_rresp->set_sv_netview_offsetfromdp(11090280);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rlast.bind(*p_45_S00_AXI_rlast);
        p_45_S00_AXI_rlast->set_sv_netview_offsetfromdp(11090336);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rvalid.bind(*p_45_S00_AXI_rvalid);
        p_45_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11090392);
        xsim_sc_channel<0, bool > *p_45_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->S00_AXI_rready.bind(*p_45_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_45_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_45->M00_AXI_araddr.bind(*p_45_M00_AXI_araddr);
        p_45_M00_AXI_araddr->set_sv_netview_offsetfromdp(11090504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arlen.bind(*p_45_M00_AXI_arlen);
        p_45_M00_AXI_arlen->set_sv_netview_offsetfromdp(11090560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arsize.bind(*p_45_M00_AXI_arsize);
        p_45_M00_AXI_arsize->set_sv_netview_offsetfromdp(11090616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_arburst.bind(*p_45_M00_AXI_arburst);
        p_45_M00_AXI_arburst->set_sv_netview_offsetfromdp(11090672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_arlock.bind(*p_45_M00_AXI_arlock);
        p_45_M00_AXI_arlock->set_sv_netview_offsetfromdp(11090728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arcache.bind(*p_45_M00_AXI_arcache);
        p_45_M00_AXI_arcache->set_sv_netview_offsetfromdp(11090784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_45_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_45->M00_AXI_arprot.bind(*p_45_M00_AXI_arprot);
        p_45_M00_AXI_arprot->set_sv_netview_offsetfromdp(11090840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_45_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_45->M00_AXI_arqos.bind(*p_45_M00_AXI_arqos);
        p_45_M00_AXI_arqos->set_sv_netview_offsetfromdp(11090896);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arvalid.bind(*p_45_M00_AXI_arvalid);
        p_45_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11090952);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_arready.bind(*p_45_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_45_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_45->M00_AXI_rdata.bind(*p_45_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_45_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_45->M00_AXI_rresp.bind(*p_45_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rlast.bind(*p_45_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rvalid.bind(*p_45_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_45_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_45_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_45->M00_AXI_rready.bind(*p_45_M00_AXI_rready);
        p_45_M00_AXI_rready->set_sv_netview_offsetfromdp(11091288);
        sc_inst_46 = new bd_5dca_slice5_4_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_4.slice5_4");
        sc_inst_46->xsim_set_dbg_index(4576);
        xsim_sc_channel<0, bool > *p_46_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_46->aclk.bind(*p_46_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aclk);
        xsim_sc_channel<0, bool > *p_46_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_46->aresetn.bind(*p_46_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_46_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_46_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_46->s_axi_awaddr.bind(*p_46_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awlen.bind(*p_46_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awsize.bind(*p_46_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awburst.bind(*p_46_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_awlock.bind(*p_46_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awcache.bind(*p_46_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_awprot.bind(*p_46_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_awqos.bind(*p_46_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awvalid.bind(*p_46_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_awready.bind(*p_46_s_axi_awready);
        p_46_s_axi_awready->set_sv_netview_offsetfromdp(11092008);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_46_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_46->s_axi_wdata.bind(*p_46_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->s_axi_wstrb.bind(*p_46_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_46_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wlast.bind(*p_46_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_46_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wvalid.bind(*p_46_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_wready.bind(*p_46_s_axi_wready);
        p_46_s_axi_wready->set_sv_netview_offsetfromdp(11092288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_bresp.bind(*p_46_s_axi_bresp);
        p_46_s_axi_bresp->set_sv_netview_offsetfromdp(11092344);
        xsim_sc_channel<0, bool > *p_46_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bvalid.bind(*p_46_s_axi_bvalid);
        p_46_s_axi_bvalid->set_sv_netview_offsetfromdp(11092400);
        xsim_sc_channel<0, bool > *p_46_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_bready.bind(*p_46_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_46_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_46->s_axi_araddr.bind(*p_46_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arlen.bind(*p_46_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arsize.bind(*p_46_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arburst.bind(*p_46_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_arlock.bind(*p_46_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arcache.bind(*p_46_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->s_axi_arprot.bind(*p_46_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->s_axi_arqos.bind(*p_46_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_46_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arvalid.bind(*p_46_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_46_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_arready.bind(*p_46_s_axi_arready);
        p_46_s_axi_arready->set_sv_netview_offsetfromdp(11093016);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_46_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_46->s_axi_rdata.bind(*p_46_s_axi_rdata);
        p_46_s_axi_rdata->set_sv_netview_offsetfromdp(11093072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->s_axi_rresp.bind(*p_46_s_axi_rresp);
        p_46_s_axi_rresp->set_sv_netview_offsetfromdp(11093128);
        xsim_sc_channel<0, bool > *p_46_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rlast.bind(*p_46_s_axi_rlast);
        p_46_s_axi_rlast->set_sv_netview_offsetfromdp(11093184);
        xsim_sc_channel<0, bool > *p_46_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rvalid.bind(*p_46_s_axi_rvalid);
        p_46_s_axi_rvalid->set_sv_netview_offsetfromdp(11093240);
        xsim_sc_channel<0, bool > *p_46_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->s_axi_rready.bind(*p_46_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_46_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_46->m_axi_awaddr.bind(*p_46_m_axi_awaddr);
        p_46_m_axi_awaddr->set_sv_netview_offsetfromdp(11093352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awlen.bind(*p_46_m_axi_awlen);
        p_46_m_axi_awlen->set_sv_netview_offsetfromdp(11093408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awsize.bind(*p_46_m_axi_awsize);
        p_46_m_axi_awsize->set_sv_netview_offsetfromdp(11093464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_awburst.bind(*p_46_m_axi_awburst);
        p_46_m_axi_awburst->set_sv_netview_offsetfromdp(11093520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_awlock.bind(*p_46_m_axi_awlock);
        p_46_m_axi_awlock->set_sv_netview_offsetfromdp(11093576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awcache.bind(*p_46_m_axi_awcache);
        p_46_m_axi_awcache->set_sv_netview_offsetfromdp(11093632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_awprot.bind(*p_46_m_axi_awprot);
        p_46_m_axi_awprot->set_sv_netview_offsetfromdp(11093688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_awqos.bind(*p_46_m_axi_awqos);
        p_46_m_axi_awqos->set_sv_netview_offsetfromdp(11093744);
        xsim_sc_channel<0, bool > *p_46_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awvalid.bind(*p_46_m_axi_awvalid);
        p_46_m_axi_awvalid->set_sv_netview_offsetfromdp(11093800);
        xsim_sc_channel<0, bool > *p_46_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_awready.bind(*p_46_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_46_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_46->m_axi_wdata.bind(*p_46_m_axi_wdata);
        p_46_m_axi_wdata->set_sv_netview_offsetfromdp(11093912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_46_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_46->m_axi_wstrb.bind(*p_46_m_axi_wstrb);
        p_46_m_axi_wstrb->set_sv_netview_offsetfromdp(11093968);
        xsim_sc_channel<0, bool > *p_46_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wlast.bind(*p_46_m_axi_wlast);
        p_46_m_axi_wlast->set_sv_netview_offsetfromdp(11094024);
        xsim_sc_channel<0, bool > *p_46_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wvalid.bind(*p_46_m_axi_wvalid);
        p_46_m_axi_wvalid->set_sv_netview_offsetfromdp(11094080);
        xsim_sc_channel<0, bool > *p_46_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_wready.bind(*p_46_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_bresp.bind(*p_46_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bvalid.bind(*p_46_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_bready.bind(*p_46_m_axi_bready);
        p_46_m_axi_bready->set_sv_netview_offsetfromdp(11094304);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_46_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_46->m_axi_araddr.bind(*p_46_m_axi_araddr);
        p_46_m_axi_araddr->set_sv_netview_offsetfromdp(11094360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arlen.bind(*p_46_m_axi_arlen);
        p_46_m_axi_arlen->set_sv_netview_offsetfromdp(11094416);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arsize.bind(*p_46_m_axi_arsize);
        p_46_m_axi_arsize->set_sv_netview_offsetfromdp(11094472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_arburst.bind(*p_46_m_axi_arburst);
        p_46_m_axi_arburst->set_sv_netview_offsetfromdp(11094528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_arlock.bind(*p_46_m_axi_arlock);
        p_46_m_axi_arlock->set_sv_netview_offsetfromdp(11094584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arcache.bind(*p_46_m_axi_arcache);
        p_46_m_axi_arcache->set_sv_netview_offsetfromdp(11094640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_46_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_46->m_axi_arprot.bind(*p_46_m_axi_arprot);
        p_46_m_axi_arprot->set_sv_netview_offsetfromdp(11094696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_46_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_46->m_axi_arqos.bind(*p_46_m_axi_arqos);
        p_46_m_axi_arqos->set_sv_netview_offsetfromdp(11094752);
        xsim_sc_channel<0, bool > *p_46_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arvalid.bind(*p_46_m_axi_arvalid);
        p_46_m_axi_arvalid->set_sv_netview_offsetfromdp(11094808);
        xsim_sc_channel<0, bool > *p_46_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_arready.bind(*p_46_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_46_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_46->m_axi_rdata.bind(*p_46_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_46_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_46->m_axi_rresp.bind(*p_46_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_46_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rlast.bind(*p_46_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_46_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rvalid.bind(*p_46_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_46_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_46_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_46->m_axi_rready.bind(*p_46_m_axi_rready);
        p_46_m_axi_rready->set_sv_netview_offsetfromdp(11095144);
        sc_inst_47 = new bd_5dca_interconnect6_5_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_5.interconnect6_5");
        sc_inst_47->xsim_set_dbg_index(4629);
        xsim_sc_channel<0, bool > *p_47_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_47->aclk.bind(*p_47_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aclk);
        xsim_sc_channel<0, bool > *p_47_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_47->aclk1.bind(*p_47_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aclk1);
        xsim_sc_channel<0, bool > *p_47_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_47->aresetn.bind(*p_47_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_47_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_awid.bind(*p_47_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_47_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_47->S00_AXI_awaddr.bind(*p_47_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_47_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_47->S00_AXI_awlen.bind(*p_47_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->S00_AXI_awsize.bind(*p_47_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->S00_AXI_awburst.bind(*p_47_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_awlock.bind(*p_47_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_awcache.bind(*p_47_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->S00_AXI_awprot.bind(*p_47_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->S00_AXI_awqos.bind(*p_47_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_awvalid.bind(*p_47_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_awready.bind(*p_47_S00_AXI_awready);
        p_47_S00_AXI_awready->set_sv_netview_offsetfromdp(11141792);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_47_S00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_47->S00_AXI_wdata.bind(*p_47_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_S00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->S00_AXI_wstrb.bind(*p_47_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_wlast.bind(*p_47_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_wvalid.bind(*p_47_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_wready.bind(*p_47_S00_AXI_wready);
        p_47_S00_AXI_wready->set_sv_netview_offsetfromdp(11142072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_47_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_47->S00_AXI_bid.bind(*p_47_S00_AXI_bid);
        p_47_S00_AXI_bid->set_sv_netview_offsetfromdp(11142128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->S00_AXI_bresp.bind(*p_47_S00_AXI_bresp);
        p_47_S00_AXI_bresp->set_sv_netview_offsetfromdp(11142184);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_bvalid.bind(*p_47_S00_AXI_bvalid);
        p_47_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11142240);
        xsim_sc_channel<0, bool > *p_47_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->S00_AXI_bready.bind(*p_47_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_47_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_47->M00_AXI_awaddr.bind(*p_47_M00_AXI_awaddr);
        p_47_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11142352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_awlen.bind(*p_47_M00_AXI_awlen);
        p_47_M00_AXI_awlen->set_sv_netview_offsetfromdp(11142408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M00_AXI_awsize.bind(*p_47_M00_AXI_awsize);
        p_47_M00_AXI_awsize->set_sv_netview_offsetfromdp(11142464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_awburst.bind(*p_47_M00_AXI_awburst);
        p_47_M00_AXI_awburst->set_sv_netview_offsetfromdp(11142520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_awlock.bind(*p_47_M00_AXI_awlock);
        p_47_M00_AXI_awlock->set_sv_netview_offsetfromdp(11142576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_awcache.bind(*p_47_M00_AXI_awcache);
        p_47_M00_AXI_awcache->set_sv_netview_offsetfromdp(11142632);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_47_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_47->M00_AXI_awprot.bind(*p_47_M00_AXI_awprot);
        p_47_M00_AXI_awprot->set_sv_netview_offsetfromdp(11142688);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_47_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_47->M00_AXI_awqos.bind(*p_47_M00_AXI_awqos);
        p_47_M00_AXI_awqos->set_sv_netview_offsetfromdp(11142744);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_awvalid.bind(*p_47_M00_AXI_awvalid);
        p_47_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11142800);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_awready.bind(*p_47_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_47_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_47->M00_AXI_wdata.bind(*p_47_M00_AXI_wdata);
        p_47_M00_AXI_wdata->set_sv_netview_offsetfromdp(11142912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_47_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_47->M00_AXI_wstrb.bind(*p_47_M00_AXI_wstrb);
        p_47_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11142968);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_wlast.bind(*p_47_M00_AXI_wlast);
        p_47_M00_AXI_wlast->set_sv_netview_offsetfromdp(11143024);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_wvalid.bind(*p_47_M00_AXI_wvalid);
        p_47_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11143080);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_wready.bind(*p_47_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_47_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_47->M00_AXI_bresp.bind(*p_47_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_bvalid.bind(*p_47_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_47_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_47_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_47->M00_AXI_bready.bind(*p_47_M00_AXI_bready);
        p_47_M00_AXI_bready->set_sv_netview_offsetfromdp(11143304);
        sc_inst_48 = new bd_5dca_slice6_5_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_5.slice6_5");
        sc_inst_48->xsim_set_dbg_index(4630);
        xsim_sc_channel<0, bool > *p_48_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_48->aclk.bind(*p_48_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_48_aclk);
        xsim_sc_channel<0, bool > *p_48_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_48->aresetn.bind(*p_48_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_48_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_48_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_48->s_axi_awaddr.bind(*p_48_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awlen.bind(*p_48_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awsize.bind(*p_48_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awburst.bind(*p_48_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_awlock.bind(*p_48_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awcache.bind(*p_48_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_awprot.bind(*p_48_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_awqos.bind(*p_48_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_48_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awvalid.bind(*p_48_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_awready.bind(*p_48_s_axi_awready);
        p_48_s_axi_awready->set_sv_netview_offsetfromdp(11144024);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_48_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_48->s_axi_wdata.bind(*p_48_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->s_axi_wstrb.bind(*p_48_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_48_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wlast.bind(*p_48_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_48_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wvalid.bind(*p_48_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_wready.bind(*p_48_s_axi_wready);
        p_48_s_axi_wready->set_sv_netview_offsetfromdp(11144304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_bresp.bind(*p_48_s_axi_bresp);
        p_48_s_axi_bresp->set_sv_netview_offsetfromdp(11144360);
        xsim_sc_channel<0, bool > *p_48_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bvalid.bind(*p_48_s_axi_bvalid);
        p_48_s_axi_bvalid->set_sv_netview_offsetfromdp(11144416);
        xsim_sc_channel<0, bool > *p_48_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_bready.bind(*p_48_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_48_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_48->s_axi_araddr.bind(*p_48_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arlen.bind(*p_48_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arsize.bind(*p_48_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arburst.bind(*p_48_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_arlock.bind(*p_48_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arcache.bind(*p_48_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->s_axi_arprot.bind(*p_48_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->s_axi_arqos.bind(*p_48_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_48_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arvalid.bind(*p_48_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_48_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_arready.bind(*p_48_s_axi_arready);
        p_48_s_axi_arready->set_sv_netview_offsetfromdp(11145032);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_48_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_48->s_axi_rdata.bind(*p_48_s_axi_rdata);
        p_48_s_axi_rdata->set_sv_netview_offsetfromdp(11145088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->s_axi_rresp.bind(*p_48_s_axi_rresp);
        p_48_s_axi_rresp->set_sv_netview_offsetfromdp(11145144);
        xsim_sc_channel<0, bool > *p_48_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rlast.bind(*p_48_s_axi_rlast);
        p_48_s_axi_rlast->set_sv_netview_offsetfromdp(11145200);
        xsim_sc_channel<0, bool > *p_48_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rvalid.bind(*p_48_s_axi_rvalid);
        p_48_s_axi_rvalid->set_sv_netview_offsetfromdp(11145256);
        xsim_sc_channel<0, bool > *p_48_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->s_axi_rready.bind(*p_48_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_48_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_48->m_axi_awaddr.bind(*p_48_m_axi_awaddr);
        p_48_m_axi_awaddr->set_sv_netview_offsetfromdp(11145368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_awlen.bind(*p_48_m_axi_awlen);
        p_48_m_axi_awlen->set_sv_netview_offsetfromdp(11145424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awsize.bind(*p_48_m_axi_awsize);
        p_48_m_axi_awsize->set_sv_netview_offsetfromdp(11145480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_awburst.bind(*p_48_m_axi_awburst);
        p_48_m_axi_awburst->set_sv_netview_offsetfromdp(11145536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_awlock.bind(*p_48_m_axi_awlock);
        p_48_m_axi_awlock->set_sv_netview_offsetfromdp(11145592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_awcache.bind(*p_48_m_axi_awcache);
        p_48_m_axi_awcache->set_sv_netview_offsetfromdp(11145648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_awprot.bind(*p_48_m_axi_awprot);
        p_48_m_axi_awprot->set_sv_netview_offsetfromdp(11145704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_awqos.bind(*p_48_m_axi_awqos);
        p_48_m_axi_awqos->set_sv_netview_offsetfromdp(11145760);
        xsim_sc_channel<0, bool > *p_48_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awvalid.bind(*p_48_m_axi_awvalid);
        p_48_m_axi_awvalid->set_sv_netview_offsetfromdp(11145816);
        xsim_sc_channel<0, bool > *p_48_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_awready.bind(*p_48_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_48_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_48->m_axi_wdata.bind(*p_48_m_axi_wdata);
        p_48_m_axi_wdata->set_sv_netview_offsetfromdp(11145928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_48_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_48->m_axi_wstrb.bind(*p_48_m_axi_wstrb);
        p_48_m_axi_wstrb->set_sv_netview_offsetfromdp(11145984);
        xsim_sc_channel<0, bool > *p_48_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wlast.bind(*p_48_m_axi_wlast);
        p_48_m_axi_wlast->set_sv_netview_offsetfromdp(11146040);
        xsim_sc_channel<0, bool > *p_48_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wvalid.bind(*p_48_m_axi_wvalid);
        p_48_m_axi_wvalid->set_sv_netview_offsetfromdp(11146096);
        xsim_sc_channel<0, bool > *p_48_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_wready.bind(*p_48_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_bresp.bind(*p_48_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bvalid.bind(*p_48_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_bready.bind(*p_48_m_axi_bready);
        p_48_m_axi_bready->set_sv_netview_offsetfromdp(11146320);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_48_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_48->m_axi_araddr.bind(*p_48_m_axi_araddr);
        p_48_m_axi_araddr->set_sv_netview_offsetfromdp(11146376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_arlen.bind(*p_48_m_axi_arlen);
        p_48_m_axi_arlen->set_sv_netview_offsetfromdp(11146432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arsize.bind(*p_48_m_axi_arsize);
        p_48_m_axi_arsize->set_sv_netview_offsetfromdp(11146488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_arburst.bind(*p_48_m_axi_arburst);
        p_48_m_axi_arburst->set_sv_netview_offsetfromdp(11146544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_arlock.bind(*p_48_m_axi_arlock);
        p_48_m_axi_arlock->set_sv_netview_offsetfromdp(11146600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_arcache.bind(*p_48_m_axi_arcache);
        p_48_m_axi_arcache->set_sv_netview_offsetfromdp(11146656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_48_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_48->m_axi_arprot.bind(*p_48_m_axi_arprot);
        p_48_m_axi_arprot->set_sv_netview_offsetfromdp(11146712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_48_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_48->m_axi_arqos.bind(*p_48_m_axi_arqos);
        p_48_m_axi_arqos->set_sv_netview_offsetfromdp(11146768);
        xsim_sc_channel<0, bool > *p_48_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arvalid.bind(*p_48_m_axi_arvalid);
        p_48_m_axi_arvalid->set_sv_netview_offsetfromdp(11146824);
        xsim_sc_channel<0, bool > *p_48_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_arready.bind(*p_48_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_48_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_48->m_axi_rdata.bind(*p_48_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_48_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_48->m_axi_rresp.bind(*p_48_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_48_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rlast.bind(*p_48_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_48_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rvalid.bind(*p_48_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_48_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_48_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_48->m_axi_rready.bind(*p_48_m_axi_rready);
        p_48_m_axi_rready->set_sv_netview_offsetfromdp(11147160);
        sc_inst_49 = new bd_5dca_interconnect0_6_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_6.interconnect0_6");
        sc_inst_49->xsim_set_dbg_index(4686);
        xsim_sc_channel<0, bool > *p_49_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_49->aclk.bind(*p_49_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aclk);
        xsim_sc_channel<0, bool > *p_49_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_49->aclk1.bind(*p_49_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aclk1);
        xsim_sc_channel<0, bool > *p_49_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_49->aresetn.bind(*p_49_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_49_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_49_S00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_49->S00_AXI_awaddr.bind(*p_49_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->S00_AXI_awlen.bind(*p_49_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->S00_AXI_awsize.bind(*p_49_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->S00_AXI_awburst.bind(*p_49_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->S00_AXI_awlock.bind(*p_49_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->S00_AXI_awcache.bind(*p_49_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->S00_AXI_awprot.bind(*p_49_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->S00_AXI_awqos.bind(*p_49_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_awvalid.bind(*p_49_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_awready.bind(*p_49_S00_AXI_awready);
        p_49_S00_AXI_awready->set_sv_netview_offsetfromdp(11209328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->S00_AXI_wdata.bind(*p_49_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_49_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_49->S00_AXI_wstrb.bind(*p_49_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_wlast.bind(*p_49_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_wvalid.bind(*p_49_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_wready.bind(*p_49_S00_AXI_wready);
        p_49_S00_AXI_wready->set_sv_netview_offsetfromdp(11209608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->S00_AXI_bresp.bind(*p_49_S00_AXI_bresp);
        p_49_S00_AXI_bresp->set_sv_netview_offsetfromdp(11209664);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_bvalid.bind(*p_49_S00_AXI_bvalid);
        p_49_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11209720);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_bready.bind(*p_49_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_49_S00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_49->S00_AXI_araddr.bind(*p_49_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_49_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_49->S00_AXI_arlen.bind(*p_49_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->S00_AXI_arsize.bind(*p_49_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->S00_AXI_arburst.bind(*p_49_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_49_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_49->S00_AXI_arlock.bind(*p_49_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->S00_AXI_arcache.bind(*p_49_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->S00_AXI_arprot.bind(*p_49_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->S00_AXI_arqos.bind(*p_49_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_arvalid.bind(*p_49_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_arready.bind(*p_49_S00_AXI_arready);
        p_49_S00_AXI_arready->set_sv_netview_offsetfromdp(11210336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_49_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_49->S00_AXI_rdata.bind(*p_49_S00_AXI_rdata);
        p_49_S00_AXI_rdata->set_sv_netview_offsetfromdp(11210392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->S00_AXI_rresp.bind(*p_49_S00_AXI_rresp);
        p_49_S00_AXI_rresp->set_sv_netview_offsetfromdp(11210448);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_rlast.bind(*p_49_S00_AXI_rlast);
        p_49_S00_AXI_rlast->set_sv_netview_offsetfromdp(11210504);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_rvalid.bind(*p_49_S00_AXI_rvalid);
        p_49_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11210560);
        xsim_sc_channel<0, bool > *p_49_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->S00_AXI_rready.bind(*p_49_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_S00_AXI_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_49_M00_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_49->M00_AXI_awaddr.bind(*p_49_M00_AXI_awaddr);
        p_49_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11210672);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_M00_AXI_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->M00_AXI_awlen.bind(*p_49_M00_AXI_awlen);
        p_49_M00_AXI_awlen->set_sv_netview_offsetfromdp(11210728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->M00_AXI_awsize.bind(*p_49_M00_AXI_awsize);
        p_49_M00_AXI_awsize->set_sv_netview_offsetfromdp(11210784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->M00_AXI_awburst.bind(*p_49_M00_AXI_awburst);
        p_49_M00_AXI_awburst->set_sv_netview_offsetfromdp(11210840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_M00_AXI_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->M00_AXI_awlock.bind(*p_49_M00_AXI_awlock);
        p_49_M00_AXI_awlock->set_sv_netview_offsetfromdp(11210896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->M00_AXI_awcache.bind(*p_49_M00_AXI_awcache);
        p_49_M00_AXI_awcache->set_sv_netview_offsetfromdp(11210952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->M00_AXI_awprot.bind(*p_49_M00_AXI_awprot);
        p_49_M00_AXI_awprot->set_sv_netview_offsetfromdp(11211008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->M00_AXI_awqos.bind(*p_49_M00_AXI_awqos);
        p_49_M00_AXI_awqos->set_sv_netview_offsetfromdp(11211064);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_awvalid.bind(*p_49_M00_AXI_awvalid);
        p_49_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11211120);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_awready.bind(*p_49_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_49_M00_AXI_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_49->M00_AXI_wdata.bind(*p_49_M00_AXI_wdata);
        p_49_M00_AXI_wdata->set_sv_netview_offsetfromdp(11211232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_49_M00_AXI_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_49->M00_AXI_wstrb.bind(*p_49_M00_AXI_wstrb);
        p_49_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11211288);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_wlast.bind(*p_49_M00_AXI_wlast);
        p_49_M00_AXI_wlast->set_sv_netview_offsetfromdp(11211344);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_wvalid.bind(*p_49_M00_AXI_wvalid);
        p_49_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11211400);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_wready.bind(*p_49_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->M00_AXI_bresp.bind(*p_49_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_bvalid.bind(*p_49_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_bready.bind(*p_49_M00_AXI_bready);
        p_49_M00_AXI_bready->set_sv_netview_offsetfromdp(11211624);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_49_M00_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_49->M00_AXI_araddr.bind(*p_49_M00_AXI_araddr);
        p_49_M00_AXI_araddr->set_sv_netview_offsetfromdp(11211680);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_M00_AXI_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->M00_AXI_arlen.bind(*p_49_M00_AXI_arlen);
        p_49_M00_AXI_arlen->set_sv_netview_offsetfromdp(11211736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->M00_AXI_arsize.bind(*p_49_M00_AXI_arsize);
        p_49_M00_AXI_arsize->set_sv_netview_offsetfromdp(11211792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->M00_AXI_arburst.bind(*p_49_M00_AXI_arburst);
        p_49_M00_AXI_arburst->set_sv_netview_offsetfromdp(11211848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_M00_AXI_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->M00_AXI_arlock.bind(*p_49_M00_AXI_arlock);
        p_49_M00_AXI_arlock->set_sv_netview_offsetfromdp(11211904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->M00_AXI_arcache.bind(*p_49_M00_AXI_arcache);
        p_49_M00_AXI_arcache->set_sv_netview_offsetfromdp(11211960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_49_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_49->M00_AXI_arprot.bind(*p_49_M00_AXI_arprot);
        p_49_M00_AXI_arprot->set_sv_netview_offsetfromdp(11212016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_49_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_49->M00_AXI_arqos.bind(*p_49_M00_AXI_arqos);
        p_49_M00_AXI_arqos->set_sv_netview_offsetfromdp(11212072);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_arvalid.bind(*p_49_M00_AXI_arvalid);
        p_49_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11212128);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_arready.bind(*p_49_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_49_M00_AXI_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_49->M00_AXI_rdata.bind(*p_49_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_49_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_49->M00_AXI_rresp.bind(*p_49_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_rlast.bind(*p_49_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_rvalid.bind(*p_49_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_49_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_49_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_49->M00_AXI_rready.bind(*p_49_M00_AXI_rready);
        p_49_M00_AXI_rready->set_sv_netview_offsetfromdp(11212464);
        sc_inst_50 = new bd_5dca_slice0_6_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.path_6.slice0_6");
        sc_inst_50->xsim_set_dbg_index(4687);
        xsim_sc_channel<0, bool > *p_50_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_50->aclk.bind(*p_50_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aclk);
        xsim_sc_channel<0, bool > *p_50_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_50->aresetn.bind(*p_50_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_50_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_50_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_50->s_axi_awaddr.bind(*p_50_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awlen.bind(*p_50_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awsize.bind(*p_50_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awburst.bind(*p_50_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_awlock.bind(*p_50_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awcache.bind(*p_50_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_awprot.bind(*p_50_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_awqos.bind(*p_50_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_50_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awvalid.bind(*p_50_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_awready.bind(*p_50_s_axi_awready);
        p_50_s_axi_awready->set_sv_netview_offsetfromdp(11213184);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_50_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_50->s_axi_wdata.bind(*p_50_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->s_axi_wstrb.bind(*p_50_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_50_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wlast.bind(*p_50_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_50_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wvalid.bind(*p_50_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_wready.bind(*p_50_s_axi_wready);
        p_50_s_axi_wready->set_sv_netview_offsetfromdp(11213464);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_bresp.bind(*p_50_s_axi_bresp);
        p_50_s_axi_bresp->set_sv_netview_offsetfromdp(11213520);
        xsim_sc_channel<0, bool > *p_50_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bvalid.bind(*p_50_s_axi_bvalid);
        p_50_s_axi_bvalid->set_sv_netview_offsetfromdp(11213576);
        xsim_sc_channel<0, bool > *p_50_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_bready.bind(*p_50_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_50_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_50->s_axi_araddr.bind(*p_50_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arlen.bind(*p_50_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arsize.bind(*p_50_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arburst.bind(*p_50_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_arlock.bind(*p_50_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arcache.bind(*p_50_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->s_axi_arprot.bind(*p_50_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->s_axi_arqos.bind(*p_50_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_50_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arvalid.bind(*p_50_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_50_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_arready.bind(*p_50_s_axi_arready);
        p_50_s_axi_arready->set_sv_netview_offsetfromdp(11214192);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_50_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_50->s_axi_rdata.bind(*p_50_s_axi_rdata);
        p_50_s_axi_rdata->set_sv_netview_offsetfromdp(11214248);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->s_axi_rresp.bind(*p_50_s_axi_rresp);
        p_50_s_axi_rresp->set_sv_netview_offsetfromdp(11214304);
        xsim_sc_channel<0, bool > *p_50_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rlast.bind(*p_50_s_axi_rlast);
        p_50_s_axi_rlast->set_sv_netview_offsetfromdp(11214360);
        xsim_sc_channel<0, bool > *p_50_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rvalid.bind(*p_50_s_axi_rvalid);
        p_50_s_axi_rvalid->set_sv_netview_offsetfromdp(11214416);
        xsim_sc_channel<0, bool > *p_50_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->s_axi_rready.bind(*p_50_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_50_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_50->m_axi_awaddr.bind(*p_50_m_axi_awaddr);
        p_50_m_axi_awaddr->set_sv_netview_offsetfromdp(11214528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_awlen.bind(*p_50_m_axi_awlen);
        p_50_m_axi_awlen->set_sv_netview_offsetfromdp(11214584);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awsize.bind(*p_50_m_axi_awsize);
        p_50_m_axi_awsize->set_sv_netview_offsetfromdp(11214640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_awburst.bind(*p_50_m_axi_awburst);
        p_50_m_axi_awburst->set_sv_netview_offsetfromdp(11214696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_awlock.bind(*p_50_m_axi_awlock);
        p_50_m_axi_awlock->set_sv_netview_offsetfromdp(11214752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_awcache.bind(*p_50_m_axi_awcache);
        p_50_m_axi_awcache->set_sv_netview_offsetfromdp(11214808);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_awprot.bind(*p_50_m_axi_awprot);
        p_50_m_axi_awprot->set_sv_netview_offsetfromdp(11214864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_awqos.bind(*p_50_m_axi_awqos);
        p_50_m_axi_awqos->set_sv_netview_offsetfromdp(11214920);
        xsim_sc_channel<0, bool > *p_50_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awvalid.bind(*p_50_m_axi_awvalid);
        p_50_m_axi_awvalid->set_sv_netview_offsetfromdp(11214976);
        xsim_sc_channel<0, bool > *p_50_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_awready.bind(*p_50_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_50_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_50->m_axi_wdata.bind(*p_50_m_axi_wdata);
        p_50_m_axi_wdata->set_sv_netview_offsetfromdp(11215088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_50_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_50->m_axi_wstrb.bind(*p_50_m_axi_wstrb);
        p_50_m_axi_wstrb->set_sv_netview_offsetfromdp(11215144);
        xsim_sc_channel<0, bool > *p_50_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wlast.bind(*p_50_m_axi_wlast);
        p_50_m_axi_wlast->set_sv_netview_offsetfromdp(11215200);
        xsim_sc_channel<0, bool > *p_50_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wvalid.bind(*p_50_m_axi_wvalid);
        p_50_m_axi_wvalid->set_sv_netview_offsetfromdp(11215256);
        xsim_sc_channel<0, bool > *p_50_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_wready.bind(*p_50_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_bresp.bind(*p_50_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bvalid.bind(*p_50_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_bready.bind(*p_50_m_axi_bready);
        p_50_m_axi_bready->set_sv_netview_offsetfromdp(11215480);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_50_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_50->m_axi_araddr.bind(*p_50_m_axi_araddr);
        p_50_m_axi_araddr->set_sv_netview_offsetfromdp(11215536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_arlen.bind(*p_50_m_axi_arlen);
        p_50_m_axi_arlen->set_sv_netview_offsetfromdp(11215592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arsize.bind(*p_50_m_axi_arsize);
        p_50_m_axi_arsize->set_sv_netview_offsetfromdp(11215648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_arburst.bind(*p_50_m_axi_arburst);
        p_50_m_axi_arburst->set_sv_netview_offsetfromdp(11215704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_arlock.bind(*p_50_m_axi_arlock);
        p_50_m_axi_arlock->set_sv_netview_offsetfromdp(11215760);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_arcache.bind(*p_50_m_axi_arcache);
        p_50_m_axi_arcache->set_sv_netview_offsetfromdp(11215816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_50_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_50->m_axi_arprot.bind(*p_50_m_axi_arprot);
        p_50_m_axi_arprot->set_sv_netview_offsetfromdp(11215872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_50_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_50->m_axi_arqos.bind(*p_50_m_axi_arqos);
        p_50_m_axi_arqos->set_sv_netview_offsetfromdp(11215928);
        xsim_sc_channel<0, bool > *p_50_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arvalid.bind(*p_50_m_axi_arvalid);
        p_50_m_axi_arvalid->set_sv_netview_offsetfromdp(11215984);
        xsim_sc_channel<0, bool > *p_50_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_arready.bind(*p_50_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_50_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_50->m_axi_rdata.bind(*p_50_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_50_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_50->m_axi_rresp.bind(*p_50_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_50_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rlast.bind(*p_50_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_50_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rvalid.bind(*p_50_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_50_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_50_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_50->m_axi_rready.bind(*p_50_m_axi_rready);
        p_50_m_axi_rready->set_sv_netview_offsetfromdp(11216320);
        sc_inst_51 = new bd_5dca_vip_S00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S00");
        sc_inst_51->xsim_set_dbg_index(1862);
        xsim_sc_channel<0, bool > *p_51_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_51->aclk.bind(*p_51_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aclk);
        xsim_sc_channel<0, bool > *p_51_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_51->aresetn.bind(*p_51_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_51_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_51_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_51->s_axi_awaddr.bind(*p_51_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awlen.bind(*p_51_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_awburst.bind(*p_51_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_awlock.bind(*p_51_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awcache.bind(*p_51_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_awprot.bind(*p_51_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_awqos.bind(*p_51_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_51_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awvalid.bind(*p_51_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_awready.bind(*p_51_s_axi_awready);
        p_51_s_axi_awready->set_sv_netview_offsetfromdp(11216984);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_51_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_51->s_axi_wdata.bind(*p_51_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->s_axi_wstrb.bind(*p_51_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_51_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wlast.bind(*p_51_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_51_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wvalid.bind(*p_51_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_wready.bind(*p_51_s_axi_wready);
        p_51_s_axi_wready->set_sv_netview_offsetfromdp(11217264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_bresp.bind(*p_51_s_axi_bresp);
        p_51_s_axi_bresp->set_sv_netview_offsetfromdp(11217320);
        xsim_sc_channel<0, bool > *p_51_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bvalid.bind(*p_51_s_axi_bvalid);
        p_51_s_axi_bvalid->set_sv_netview_offsetfromdp(11217376);
        xsim_sc_channel<0, bool > *p_51_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_bready.bind(*p_51_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_51_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_51->s_axi_araddr.bind(*p_51_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arlen.bind(*p_51_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_arburst.bind(*p_51_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_arlock.bind(*p_51_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arcache.bind(*p_51_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->s_axi_arprot.bind(*p_51_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->s_axi_arqos.bind(*p_51_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_51_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arvalid.bind(*p_51_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_51_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_arready.bind(*p_51_s_axi_arready);
        p_51_s_axi_arready->set_sv_netview_offsetfromdp(11217936);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_51_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_51->s_axi_rdata.bind(*p_51_s_axi_rdata);
        p_51_s_axi_rdata->set_sv_netview_offsetfromdp(11217992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->s_axi_rresp.bind(*p_51_s_axi_rresp);
        p_51_s_axi_rresp->set_sv_netview_offsetfromdp(11218048);
        xsim_sc_channel<0, bool > *p_51_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rlast.bind(*p_51_s_axi_rlast);
        p_51_s_axi_rlast->set_sv_netview_offsetfromdp(11218104);
        xsim_sc_channel<0, bool > *p_51_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rvalid.bind(*p_51_s_axi_rvalid);
        p_51_s_axi_rvalid->set_sv_netview_offsetfromdp(11218160);
        xsim_sc_channel<0, bool > *p_51_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->s_axi_rready.bind(*p_51_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_51_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_51->m_axi_awaddr.bind(*p_51_m_axi_awaddr);
        p_51_m_axi_awaddr->set_sv_netview_offsetfromdp(11218272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awlen.bind(*p_51_m_axi_awlen);
        p_51_m_axi_awlen->set_sv_netview_offsetfromdp(11218328);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awburst.bind(*p_51_m_axi_awburst);
        p_51_m_axi_awburst->set_sv_netview_offsetfromdp(11218384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_awlock.bind(*p_51_m_axi_awlock);
        p_51_m_axi_awlock->set_sv_netview_offsetfromdp(11218440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awcache.bind(*p_51_m_axi_awcache);
        p_51_m_axi_awcache->set_sv_netview_offsetfromdp(11218496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_awprot.bind(*p_51_m_axi_awprot);
        p_51_m_axi_awprot->set_sv_netview_offsetfromdp(11218552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_awqos.bind(*p_51_m_axi_awqos);
        p_51_m_axi_awqos->set_sv_netview_offsetfromdp(11218608);
        xsim_sc_channel<0, bool > *p_51_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awvalid.bind(*p_51_m_axi_awvalid);
        p_51_m_axi_awvalid->set_sv_netview_offsetfromdp(11218664);
        xsim_sc_channel<0, bool > *p_51_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_awready.bind(*p_51_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_51_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_51->m_axi_wdata.bind(*p_51_m_axi_wdata);
        p_51_m_axi_wdata->set_sv_netview_offsetfromdp(11218776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_51_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_51->m_axi_wstrb.bind(*p_51_m_axi_wstrb);
        p_51_m_axi_wstrb->set_sv_netview_offsetfromdp(11218832);
        xsim_sc_channel<0, bool > *p_51_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wlast.bind(*p_51_m_axi_wlast);
        p_51_m_axi_wlast->set_sv_netview_offsetfromdp(11218888);
        xsim_sc_channel<0, bool > *p_51_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wvalid.bind(*p_51_m_axi_wvalid);
        p_51_m_axi_wvalid->set_sv_netview_offsetfromdp(11218944);
        xsim_sc_channel<0, bool > *p_51_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_wready.bind(*p_51_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_bresp.bind(*p_51_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bvalid.bind(*p_51_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_bready.bind(*p_51_m_axi_bready);
        p_51_m_axi_bready->set_sv_netview_offsetfromdp(11219168);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_51_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_51->m_axi_araddr.bind(*p_51_m_axi_araddr);
        p_51_m_axi_araddr->set_sv_netview_offsetfromdp(11219224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arlen.bind(*p_51_m_axi_arlen);
        p_51_m_axi_arlen->set_sv_netview_offsetfromdp(11219280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arburst.bind(*p_51_m_axi_arburst);
        p_51_m_axi_arburst->set_sv_netview_offsetfromdp(11219336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_arlock.bind(*p_51_m_axi_arlock);
        p_51_m_axi_arlock->set_sv_netview_offsetfromdp(11219392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arcache.bind(*p_51_m_axi_arcache);
        p_51_m_axi_arcache->set_sv_netview_offsetfromdp(11219448);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_51_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_51->m_axi_arprot.bind(*p_51_m_axi_arprot);
        p_51_m_axi_arprot->set_sv_netview_offsetfromdp(11219504);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_51_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_51->m_axi_arqos.bind(*p_51_m_axi_arqos);
        p_51_m_axi_arqos->set_sv_netview_offsetfromdp(11219560);
        xsim_sc_channel<0, bool > *p_51_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arvalid.bind(*p_51_m_axi_arvalid);
        p_51_m_axi_arvalid->set_sv_netview_offsetfromdp(11219616);
        xsim_sc_channel<0, bool > *p_51_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_arready.bind(*p_51_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_51_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_51->m_axi_rdata.bind(*p_51_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_51_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_51->m_axi_rresp.bind(*p_51_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_51_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rlast.bind(*p_51_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_51_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rvalid.bind(*p_51_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_51_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_51_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_51->m_axi_rready.bind(*p_51_m_axi_rready);
        p_51_m_axi_rready->set_sv_netview_offsetfromdp(11219952);
        sc_inst_52 = new bd_5dca_vip_S01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S01");
        sc_inst_52->xsim_set_dbg_index(1863);
        xsim_sc_channel<0, bool > *p_52_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_52->aclk.bind(*p_52_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_52_aclk);
        xsim_sc_channel<0, bool > *p_52_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_52->aresetn.bind(*p_52_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_52_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_52_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_52->s_axi_awaddr.bind(*p_52_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awlen.bind(*p_52_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_awburst.bind(*p_52_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_awlock.bind(*p_52_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awcache.bind(*p_52_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_awprot.bind(*p_52_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_awqos.bind(*p_52_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_52_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awvalid.bind(*p_52_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_awready.bind(*p_52_s_axi_awready);
        p_52_s_axi_awready->set_sv_netview_offsetfromdp(11220616);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_52_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_52->s_axi_wdata.bind(*p_52_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->s_axi_wstrb.bind(*p_52_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_52_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wlast.bind(*p_52_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_52_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wvalid.bind(*p_52_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_wready.bind(*p_52_s_axi_wready);
        p_52_s_axi_wready->set_sv_netview_offsetfromdp(11220896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_bresp.bind(*p_52_s_axi_bresp);
        p_52_s_axi_bresp->set_sv_netview_offsetfromdp(11220952);
        xsim_sc_channel<0, bool > *p_52_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bvalid.bind(*p_52_s_axi_bvalid);
        p_52_s_axi_bvalid->set_sv_netview_offsetfromdp(11221008);
        xsim_sc_channel<0, bool > *p_52_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_bready.bind(*p_52_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_52_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_52->s_axi_araddr.bind(*p_52_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arlen.bind(*p_52_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_arburst.bind(*p_52_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_arlock.bind(*p_52_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arcache.bind(*p_52_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->s_axi_arprot.bind(*p_52_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->s_axi_arqos.bind(*p_52_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_52_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arvalid.bind(*p_52_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_52_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_arready.bind(*p_52_s_axi_arready);
        p_52_s_axi_arready->set_sv_netview_offsetfromdp(11221568);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_52_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_52->s_axi_rdata.bind(*p_52_s_axi_rdata);
        p_52_s_axi_rdata->set_sv_netview_offsetfromdp(11221624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->s_axi_rresp.bind(*p_52_s_axi_rresp);
        p_52_s_axi_rresp->set_sv_netview_offsetfromdp(11221680);
        xsim_sc_channel<0, bool > *p_52_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rlast.bind(*p_52_s_axi_rlast);
        p_52_s_axi_rlast->set_sv_netview_offsetfromdp(11221736);
        xsim_sc_channel<0, bool > *p_52_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rvalid.bind(*p_52_s_axi_rvalid);
        p_52_s_axi_rvalid->set_sv_netview_offsetfromdp(11221792);
        xsim_sc_channel<0, bool > *p_52_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->s_axi_rready.bind(*p_52_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_52_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_52->m_axi_awaddr.bind(*p_52_m_axi_awaddr);
        p_52_m_axi_awaddr->set_sv_netview_offsetfromdp(11221904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_awlen.bind(*p_52_m_axi_awlen);
        p_52_m_axi_awlen->set_sv_netview_offsetfromdp(11221960);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_awburst.bind(*p_52_m_axi_awburst);
        p_52_m_axi_awburst->set_sv_netview_offsetfromdp(11222016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_awlock.bind(*p_52_m_axi_awlock);
        p_52_m_axi_awlock->set_sv_netview_offsetfromdp(11222072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_awcache.bind(*p_52_m_axi_awcache);
        p_52_m_axi_awcache->set_sv_netview_offsetfromdp(11222128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_awprot.bind(*p_52_m_axi_awprot);
        p_52_m_axi_awprot->set_sv_netview_offsetfromdp(11222184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_awqos.bind(*p_52_m_axi_awqos);
        p_52_m_axi_awqos->set_sv_netview_offsetfromdp(11222240);
        xsim_sc_channel<0, bool > *p_52_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awvalid.bind(*p_52_m_axi_awvalid);
        p_52_m_axi_awvalid->set_sv_netview_offsetfromdp(11222296);
        xsim_sc_channel<0, bool > *p_52_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_awready.bind(*p_52_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_52_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_52->m_axi_wdata.bind(*p_52_m_axi_wdata);
        p_52_m_axi_wdata->set_sv_netview_offsetfromdp(11222408);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_52_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_52->m_axi_wstrb.bind(*p_52_m_axi_wstrb);
        p_52_m_axi_wstrb->set_sv_netview_offsetfromdp(11222464);
        xsim_sc_channel<0, bool > *p_52_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wlast.bind(*p_52_m_axi_wlast);
        p_52_m_axi_wlast->set_sv_netview_offsetfromdp(11222520);
        xsim_sc_channel<0, bool > *p_52_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wvalid.bind(*p_52_m_axi_wvalid);
        p_52_m_axi_wvalid->set_sv_netview_offsetfromdp(11222576);
        xsim_sc_channel<0, bool > *p_52_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_wready.bind(*p_52_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_bresp.bind(*p_52_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bvalid.bind(*p_52_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_bready.bind(*p_52_m_axi_bready);
        p_52_m_axi_bready->set_sv_netview_offsetfromdp(11222800);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_52_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_52->m_axi_araddr.bind(*p_52_m_axi_araddr);
        p_52_m_axi_araddr->set_sv_netview_offsetfromdp(11222856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_arlen.bind(*p_52_m_axi_arlen);
        p_52_m_axi_arlen->set_sv_netview_offsetfromdp(11222912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_arburst.bind(*p_52_m_axi_arburst);
        p_52_m_axi_arburst->set_sv_netview_offsetfromdp(11222968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_arlock.bind(*p_52_m_axi_arlock);
        p_52_m_axi_arlock->set_sv_netview_offsetfromdp(11223024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_arcache.bind(*p_52_m_axi_arcache);
        p_52_m_axi_arcache->set_sv_netview_offsetfromdp(11223080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_52_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_52->m_axi_arprot.bind(*p_52_m_axi_arprot);
        p_52_m_axi_arprot->set_sv_netview_offsetfromdp(11223136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_52_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_52->m_axi_arqos.bind(*p_52_m_axi_arqos);
        p_52_m_axi_arqos->set_sv_netview_offsetfromdp(11223192);
        xsim_sc_channel<0, bool > *p_52_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arvalid.bind(*p_52_m_axi_arvalid);
        p_52_m_axi_arvalid->set_sv_netview_offsetfromdp(11223248);
        xsim_sc_channel<0, bool > *p_52_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_arready.bind(*p_52_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_52_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_52->m_axi_rdata.bind(*p_52_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_52_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_52->m_axi_rresp.bind(*p_52_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_52_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rlast.bind(*p_52_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_52_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rvalid.bind(*p_52_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_52_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_52_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_52->m_axi_rready.bind(*p_52_m_axi_rready);
        p_52_m_axi_rready->set_sv_netview_offsetfromdp(11223584);
        sc_inst_53 = new bd_5dca_vip_S02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S02");
        sc_inst_53->xsim_set_dbg_index(1864);
        xsim_sc_channel<0, bool > *p_53_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_53->aclk.bind(*p_53_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aclk);
        xsim_sc_channel<0, bool > *p_53_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_53->aresetn.bind(*p_53_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_53_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_53_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_53->s_axi_awaddr.bind(*p_53_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awlen.bind(*p_53_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awburst.bind(*p_53_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_awlock.bind(*p_53_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awcache.bind(*p_53_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_awprot.bind(*p_53_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_awqos.bind(*p_53_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awvalid.bind(*p_53_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_awready.bind(*p_53_s_axi_awready);
        p_53_s_axi_awready->set_sv_netview_offsetfromdp(11224248);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_53_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_53->s_axi_wdata.bind(*p_53_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->s_axi_wstrb.bind(*p_53_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_53_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wlast.bind(*p_53_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_53_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wvalid.bind(*p_53_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_wready.bind(*p_53_s_axi_wready);
        p_53_s_axi_wready->set_sv_netview_offsetfromdp(11224528);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_bresp.bind(*p_53_s_axi_bresp);
        p_53_s_axi_bresp->set_sv_netview_offsetfromdp(11224584);
        xsim_sc_channel<0, bool > *p_53_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bvalid.bind(*p_53_s_axi_bvalid);
        p_53_s_axi_bvalid->set_sv_netview_offsetfromdp(11224640);
        xsim_sc_channel<0, bool > *p_53_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_bready.bind(*p_53_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_53_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_53->s_axi_araddr.bind(*p_53_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arlen.bind(*p_53_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arburst.bind(*p_53_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_arlock.bind(*p_53_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arcache.bind(*p_53_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->s_axi_arprot.bind(*p_53_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->s_axi_arqos.bind(*p_53_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_53_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arvalid.bind(*p_53_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_53_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_arready.bind(*p_53_s_axi_arready);
        p_53_s_axi_arready->set_sv_netview_offsetfromdp(11225200);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_53_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_53->s_axi_rdata.bind(*p_53_s_axi_rdata);
        p_53_s_axi_rdata->set_sv_netview_offsetfromdp(11225256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->s_axi_rresp.bind(*p_53_s_axi_rresp);
        p_53_s_axi_rresp->set_sv_netview_offsetfromdp(11225312);
        xsim_sc_channel<0, bool > *p_53_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rlast.bind(*p_53_s_axi_rlast);
        p_53_s_axi_rlast->set_sv_netview_offsetfromdp(11225368);
        xsim_sc_channel<0, bool > *p_53_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rvalid.bind(*p_53_s_axi_rvalid);
        p_53_s_axi_rvalid->set_sv_netview_offsetfromdp(11225424);
        xsim_sc_channel<0, bool > *p_53_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->s_axi_rready.bind(*p_53_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_53_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_53->m_axi_awaddr.bind(*p_53_m_axi_awaddr);
        p_53_m_axi_awaddr->set_sv_netview_offsetfromdp(11225536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awlen.bind(*p_53_m_axi_awlen);
        p_53_m_axi_awlen->set_sv_netview_offsetfromdp(11225592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_awburst.bind(*p_53_m_axi_awburst);
        p_53_m_axi_awburst->set_sv_netview_offsetfromdp(11225648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_awlock.bind(*p_53_m_axi_awlock);
        p_53_m_axi_awlock->set_sv_netview_offsetfromdp(11225704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awcache.bind(*p_53_m_axi_awcache);
        p_53_m_axi_awcache->set_sv_netview_offsetfromdp(11225760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_awprot.bind(*p_53_m_axi_awprot);
        p_53_m_axi_awprot->set_sv_netview_offsetfromdp(11225816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_awqos.bind(*p_53_m_axi_awqos);
        p_53_m_axi_awqos->set_sv_netview_offsetfromdp(11225872);
        xsim_sc_channel<0, bool > *p_53_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awvalid.bind(*p_53_m_axi_awvalid);
        p_53_m_axi_awvalid->set_sv_netview_offsetfromdp(11225928);
        xsim_sc_channel<0, bool > *p_53_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_awready.bind(*p_53_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_53_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_53->m_axi_wdata.bind(*p_53_m_axi_wdata);
        p_53_m_axi_wdata->set_sv_netview_offsetfromdp(11226040);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_53_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_53->m_axi_wstrb.bind(*p_53_m_axi_wstrb);
        p_53_m_axi_wstrb->set_sv_netview_offsetfromdp(11226096);
        xsim_sc_channel<0, bool > *p_53_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wlast.bind(*p_53_m_axi_wlast);
        p_53_m_axi_wlast->set_sv_netview_offsetfromdp(11226152);
        xsim_sc_channel<0, bool > *p_53_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wvalid.bind(*p_53_m_axi_wvalid);
        p_53_m_axi_wvalid->set_sv_netview_offsetfromdp(11226208);
        xsim_sc_channel<0, bool > *p_53_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_wready.bind(*p_53_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_bresp.bind(*p_53_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bvalid.bind(*p_53_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_bready.bind(*p_53_m_axi_bready);
        p_53_m_axi_bready->set_sv_netview_offsetfromdp(11226432);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_53_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_53->m_axi_araddr.bind(*p_53_m_axi_araddr);
        p_53_m_axi_araddr->set_sv_netview_offsetfromdp(11226488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arlen.bind(*p_53_m_axi_arlen);
        p_53_m_axi_arlen->set_sv_netview_offsetfromdp(11226544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_arburst.bind(*p_53_m_axi_arburst);
        p_53_m_axi_arburst->set_sv_netview_offsetfromdp(11226600);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_arlock.bind(*p_53_m_axi_arlock);
        p_53_m_axi_arlock->set_sv_netview_offsetfromdp(11226656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arcache.bind(*p_53_m_axi_arcache);
        p_53_m_axi_arcache->set_sv_netview_offsetfromdp(11226712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_53_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_53->m_axi_arprot.bind(*p_53_m_axi_arprot);
        p_53_m_axi_arprot->set_sv_netview_offsetfromdp(11226768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_53_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_53->m_axi_arqos.bind(*p_53_m_axi_arqos);
        p_53_m_axi_arqos->set_sv_netview_offsetfromdp(11226824);
        xsim_sc_channel<0, bool > *p_53_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arvalid.bind(*p_53_m_axi_arvalid);
        p_53_m_axi_arvalid->set_sv_netview_offsetfromdp(11226880);
        xsim_sc_channel<0, bool > *p_53_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_arready.bind(*p_53_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_53_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_53->m_axi_rdata.bind(*p_53_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_53_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_53->m_axi_rresp.bind(*p_53_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_53_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rlast.bind(*p_53_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_53_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rvalid.bind(*p_53_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_53_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_53_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_53->m_axi_rready.bind(*p_53_m_axi_rready);
        p_53_m_axi_rready->set_sv_netview_offsetfromdp(11227216);
        sc_inst_54 = new bd_5dca_vip_S03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S03");
        sc_inst_54->xsim_set_dbg_index(1865);
        xsim_sc_channel<0, bool > *p_54_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_54->aclk.bind(*p_54_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aclk);
        xsim_sc_channel<0, bool > *p_54_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_54->aresetn.bind(*p_54_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_54_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_54_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_54->s_axi_awaddr.bind(*p_54_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awlen.bind(*p_54_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awburst.bind(*p_54_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_awlock.bind(*p_54_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awcache.bind(*p_54_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_awprot.bind(*p_54_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_awqos.bind(*p_54_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_54_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awvalid.bind(*p_54_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_awready.bind(*p_54_s_axi_awready);
        p_54_s_axi_awready->set_sv_netview_offsetfromdp(11227880);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->s_axi_wdata.bind(*p_54_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->s_axi_wstrb.bind(*p_54_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_54_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wlast.bind(*p_54_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_54_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wvalid.bind(*p_54_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_wready.bind(*p_54_s_axi_wready);
        p_54_s_axi_wready->set_sv_netview_offsetfromdp(11228160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_bresp.bind(*p_54_s_axi_bresp);
        p_54_s_axi_bresp->set_sv_netview_offsetfromdp(11228216);
        xsim_sc_channel<0, bool > *p_54_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bvalid.bind(*p_54_s_axi_bvalid);
        p_54_s_axi_bvalid->set_sv_netview_offsetfromdp(11228272);
        xsim_sc_channel<0, bool > *p_54_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_bready.bind(*p_54_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_54_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_54->s_axi_araddr.bind(*p_54_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arlen.bind(*p_54_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arburst.bind(*p_54_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_arlock.bind(*p_54_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arcache.bind(*p_54_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->s_axi_arprot.bind(*p_54_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->s_axi_arqos.bind(*p_54_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_54_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arvalid.bind(*p_54_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_54_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_arready.bind(*p_54_s_axi_arready);
        p_54_s_axi_arready->set_sv_netview_offsetfromdp(11228832);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->s_axi_rdata.bind(*p_54_s_axi_rdata);
        p_54_s_axi_rdata->set_sv_netview_offsetfromdp(11228888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->s_axi_rresp.bind(*p_54_s_axi_rresp);
        p_54_s_axi_rresp->set_sv_netview_offsetfromdp(11228944);
        xsim_sc_channel<0, bool > *p_54_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rlast.bind(*p_54_s_axi_rlast);
        p_54_s_axi_rlast->set_sv_netview_offsetfromdp(11229000);
        xsim_sc_channel<0, bool > *p_54_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rvalid.bind(*p_54_s_axi_rvalid);
        p_54_s_axi_rvalid->set_sv_netview_offsetfromdp(11229056);
        xsim_sc_channel<0, bool > *p_54_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->s_axi_rready.bind(*p_54_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_54_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_54->m_axi_awaddr.bind(*p_54_m_axi_awaddr);
        p_54_m_axi_awaddr->set_sv_netview_offsetfromdp(11229168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awlen.bind(*p_54_m_axi_awlen);
        p_54_m_axi_awlen->set_sv_netview_offsetfromdp(11229224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_awburst.bind(*p_54_m_axi_awburst);
        p_54_m_axi_awburst->set_sv_netview_offsetfromdp(11229280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_awlock.bind(*p_54_m_axi_awlock);
        p_54_m_axi_awlock->set_sv_netview_offsetfromdp(11229336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awcache.bind(*p_54_m_axi_awcache);
        p_54_m_axi_awcache->set_sv_netview_offsetfromdp(11229392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_awprot.bind(*p_54_m_axi_awprot);
        p_54_m_axi_awprot->set_sv_netview_offsetfromdp(11229448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_awqos.bind(*p_54_m_axi_awqos);
        p_54_m_axi_awqos->set_sv_netview_offsetfromdp(11229504);
        xsim_sc_channel<0, bool > *p_54_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awvalid.bind(*p_54_m_axi_awvalid);
        p_54_m_axi_awvalid->set_sv_netview_offsetfromdp(11229560);
        xsim_sc_channel<0, bool > *p_54_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_awready.bind(*p_54_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->m_axi_wdata.bind(*p_54_m_axi_wdata);
        p_54_m_axi_wdata->set_sv_netview_offsetfromdp(11229672);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_54_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_54->m_axi_wstrb.bind(*p_54_m_axi_wstrb);
        p_54_m_axi_wstrb->set_sv_netview_offsetfromdp(11229728);
        xsim_sc_channel<0, bool > *p_54_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wlast.bind(*p_54_m_axi_wlast);
        p_54_m_axi_wlast->set_sv_netview_offsetfromdp(11229784);
        xsim_sc_channel<0, bool > *p_54_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wvalid.bind(*p_54_m_axi_wvalid);
        p_54_m_axi_wvalid->set_sv_netview_offsetfromdp(11229840);
        xsim_sc_channel<0, bool > *p_54_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_wready.bind(*p_54_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_bresp.bind(*p_54_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bvalid.bind(*p_54_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_bready.bind(*p_54_m_axi_bready);
        p_54_m_axi_bready->set_sv_netview_offsetfromdp(11230064);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_54_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_54->m_axi_araddr.bind(*p_54_m_axi_araddr);
        p_54_m_axi_araddr->set_sv_netview_offsetfromdp(11230120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arlen.bind(*p_54_m_axi_arlen);
        p_54_m_axi_arlen->set_sv_netview_offsetfromdp(11230176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_arburst.bind(*p_54_m_axi_arburst);
        p_54_m_axi_arburst->set_sv_netview_offsetfromdp(11230232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_arlock.bind(*p_54_m_axi_arlock);
        p_54_m_axi_arlock->set_sv_netview_offsetfromdp(11230288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arcache.bind(*p_54_m_axi_arcache);
        p_54_m_axi_arcache->set_sv_netview_offsetfromdp(11230344);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_54_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_54->m_axi_arprot.bind(*p_54_m_axi_arprot);
        p_54_m_axi_arprot->set_sv_netview_offsetfromdp(11230400);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_54_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_54->m_axi_arqos.bind(*p_54_m_axi_arqos);
        p_54_m_axi_arqos->set_sv_netview_offsetfromdp(11230456);
        xsim_sc_channel<0, bool > *p_54_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arvalid.bind(*p_54_m_axi_arvalid);
        p_54_m_axi_arvalid->set_sv_netview_offsetfromdp(11230512);
        xsim_sc_channel<0, bool > *p_54_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_arready.bind(*p_54_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_54_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_54->m_axi_rdata.bind(*p_54_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_54_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_54->m_axi_rresp.bind(*p_54_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_54_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rlast.bind(*p_54_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_54_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rvalid.bind(*p_54_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_54_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_54_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_54->m_axi_rready.bind(*p_54_m_axi_rready);
        p_54_m_axi_rready->set_sv_netview_offsetfromdp(11230848);
        sc_inst_55 = new bd_5dca_vip_S04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S04");
        sc_inst_55->xsim_set_dbg_index(1866);
        xsim_sc_channel<0, bool > *p_55_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_55->aclk.bind(*p_55_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aclk);
        xsim_sc_channel<0, bool > *p_55_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_55->aresetn.bind(*p_55_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_55_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->s_axi_awaddr.bind(*p_55_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_awlen.bind(*p_55_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awburst.bind(*p_55_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_awlock.bind(*p_55_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_awcache.bind(*p_55_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_awprot.bind(*p_55_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_awqos.bind(*p_55_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_55_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awvalid.bind(*p_55_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_awready.bind(*p_55_s_axi_awready);
        p_55_s_axi_awready->set_sv_netview_offsetfromdp(11231512);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_55_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_55->s_axi_wdata.bind(*p_55_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->s_axi_wstrb.bind(*p_55_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_55_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wlast.bind(*p_55_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_55_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wvalid.bind(*p_55_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_wready.bind(*p_55_s_axi_wready);
        p_55_s_axi_wready->set_sv_netview_offsetfromdp(11231792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_bresp.bind(*p_55_s_axi_bresp);
        p_55_s_axi_bresp->set_sv_netview_offsetfromdp(11231848);
        xsim_sc_channel<0, bool > *p_55_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bvalid.bind(*p_55_s_axi_bvalid);
        p_55_s_axi_bvalid->set_sv_netview_offsetfromdp(11231904);
        xsim_sc_channel<0, bool > *p_55_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_bready.bind(*p_55_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->s_axi_araddr.bind(*p_55_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_arlen.bind(*p_55_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arburst.bind(*p_55_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_arlock.bind(*p_55_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_arcache.bind(*p_55_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->s_axi_arprot.bind(*p_55_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->s_axi_arqos.bind(*p_55_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_55_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arvalid.bind(*p_55_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_55_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_arready.bind(*p_55_s_axi_arready);
        p_55_s_axi_arready->set_sv_netview_offsetfromdp(11232464);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_55_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_55->s_axi_rdata.bind(*p_55_s_axi_rdata);
        p_55_s_axi_rdata->set_sv_netview_offsetfromdp(11232520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->s_axi_rresp.bind(*p_55_s_axi_rresp);
        p_55_s_axi_rresp->set_sv_netview_offsetfromdp(11232576);
        xsim_sc_channel<0, bool > *p_55_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rlast.bind(*p_55_s_axi_rlast);
        p_55_s_axi_rlast->set_sv_netview_offsetfromdp(11232632);
        xsim_sc_channel<0, bool > *p_55_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rvalid.bind(*p_55_s_axi_rvalid);
        p_55_s_axi_rvalid->set_sv_netview_offsetfromdp(11232688);
        xsim_sc_channel<0, bool > *p_55_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->s_axi_rready.bind(*p_55_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->m_axi_awaddr.bind(*p_55_m_axi_awaddr);
        p_55_m_axi_awaddr->set_sv_netview_offsetfromdp(11232800);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_awlen.bind(*p_55_m_axi_awlen);
        p_55_m_axi_awlen->set_sv_netview_offsetfromdp(11232856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_awburst.bind(*p_55_m_axi_awburst);
        p_55_m_axi_awburst->set_sv_netview_offsetfromdp(11232912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_awlock.bind(*p_55_m_axi_awlock);
        p_55_m_axi_awlock->set_sv_netview_offsetfromdp(11232968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_awcache.bind(*p_55_m_axi_awcache);
        p_55_m_axi_awcache->set_sv_netview_offsetfromdp(11233024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_awprot.bind(*p_55_m_axi_awprot);
        p_55_m_axi_awprot->set_sv_netview_offsetfromdp(11233080);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_awqos.bind(*p_55_m_axi_awqos);
        p_55_m_axi_awqos->set_sv_netview_offsetfromdp(11233136);
        xsim_sc_channel<0, bool > *p_55_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awvalid.bind(*p_55_m_axi_awvalid);
        p_55_m_axi_awvalid->set_sv_netview_offsetfromdp(11233192);
        xsim_sc_channel<0, bool > *p_55_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_awready.bind(*p_55_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_55_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_55->m_axi_wdata.bind(*p_55_m_axi_wdata);
        p_55_m_axi_wdata->set_sv_netview_offsetfromdp(11233304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_55_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_55->m_axi_wstrb.bind(*p_55_m_axi_wstrb);
        p_55_m_axi_wstrb->set_sv_netview_offsetfromdp(11233360);
        xsim_sc_channel<0, bool > *p_55_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wlast.bind(*p_55_m_axi_wlast);
        p_55_m_axi_wlast->set_sv_netview_offsetfromdp(11233416);
        xsim_sc_channel<0, bool > *p_55_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wvalid.bind(*p_55_m_axi_wvalid);
        p_55_m_axi_wvalid->set_sv_netview_offsetfromdp(11233472);
        xsim_sc_channel<0, bool > *p_55_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_wready.bind(*p_55_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_bresp.bind(*p_55_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bvalid.bind(*p_55_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_bready.bind(*p_55_m_axi_bready);
        p_55_m_axi_bready->set_sv_netview_offsetfromdp(11233696);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_55_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_55->m_axi_araddr.bind(*p_55_m_axi_araddr);
        p_55_m_axi_araddr->set_sv_netview_offsetfromdp(11233752);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_arlen.bind(*p_55_m_axi_arlen);
        p_55_m_axi_arlen->set_sv_netview_offsetfromdp(11233808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_arburst.bind(*p_55_m_axi_arburst);
        p_55_m_axi_arburst->set_sv_netview_offsetfromdp(11233864);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_arlock.bind(*p_55_m_axi_arlock);
        p_55_m_axi_arlock->set_sv_netview_offsetfromdp(11233920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_arcache.bind(*p_55_m_axi_arcache);
        p_55_m_axi_arcache->set_sv_netview_offsetfromdp(11233976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_55_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_55->m_axi_arprot.bind(*p_55_m_axi_arprot);
        p_55_m_axi_arprot->set_sv_netview_offsetfromdp(11234032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_55_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_55->m_axi_arqos.bind(*p_55_m_axi_arqos);
        p_55_m_axi_arqos->set_sv_netview_offsetfromdp(11234088);
        xsim_sc_channel<0, bool > *p_55_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arvalid.bind(*p_55_m_axi_arvalid);
        p_55_m_axi_arvalid->set_sv_netview_offsetfromdp(11234144);
        xsim_sc_channel<0, bool > *p_55_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_arready.bind(*p_55_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_55_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_55->m_axi_rdata.bind(*p_55_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_55_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_55->m_axi_rresp.bind(*p_55_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_55_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rlast.bind(*p_55_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_55_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rvalid.bind(*p_55_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_55_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_55_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_55->m_axi_rready.bind(*p_55_m_axi_rready);
        p_55_m_axi_rready->set_sv_netview_offsetfromdp(11234480);
        sc_inst_56 = new bd_5dca_vip_S05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S05");
        sc_inst_56->xsim_set_dbg_index(1867);
        xsim_sc_channel<0, bool > *p_56_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_56->aclk.bind(*p_56_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aclk);
        xsim_sc_channel<0, bool > *p_56_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_56->aresetn.bind(*p_56_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_56_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_56_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_56->s_axi_awaddr.bind(*p_56_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awlen.bind(*p_56_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_awburst.bind(*p_56_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_awlock.bind(*p_56_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awcache.bind(*p_56_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_awprot.bind(*p_56_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_awqos.bind(*p_56_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_56_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awvalid.bind(*p_56_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_awready.bind(*p_56_s_axi_awready);
        p_56_s_axi_awready->set_sv_netview_offsetfromdp(11235144);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_56_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_56->s_axi_wdata.bind(*p_56_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->s_axi_wstrb.bind(*p_56_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_56_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wlast.bind(*p_56_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_56_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wvalid.bind(*p_56_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_wready.bind(*p_56_s_axi_wready);
        p_56_s_axi_wready->set_sv_netview_offsetfromdp(11235424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_bresp.bind(*p_56_s_axi_bresp);
        p_56_s_axi_bresp->set_sv_netview_offsetfromdp(11235480);
        xsim_sc_channel<0, bool > *p_56_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bvalid.bind(*p_56_s_axi_bvalid);
        p_56_s_axi_bvalid->set_sv_netview_offsetfromdp(11235536);
        xsim_sc_channel<0, bool > *p_56_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_bready.bind(*p_56_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_56_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_56->s_axi_araddr.bind(*p_56_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arlen.bind(*p_56_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_arburst.bind(*p_56_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_arlock.bind(*p_56_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arcache.bind(*p_56_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->s_axi_arprot.bind(*p_56_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->s_axi_arqos.bind(*p_56_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_56_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arvalid.bind(*p_56_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_56_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_arready.bind(*p_56_s_axi_arready);
        p_56_s_axi_arready->set_sv_netview_offsetfromdp(11236096);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_56_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_56->s_axi_rdata.bind(*p_56_s_axi_rdata);
        p_56_s_axi_rdata->set_sv_netview_offsetfromdp(11236152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->s_axi_rresp.bind(*p_56_s_axi_rresp);
        p_56_s_axi_rresp->set_sv_netview_offsetfromdp(11236208);
        xsim_sc_channel<0, bool > *p_56_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rlast.bind(*p_56_s_axi_rlast);
        p_56_s_axi_rlast->set_sv_netview_offsetfromdp(11236264);
        xsim_sc_channel<0, bool > *p_56_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rvalid.bind(*p_56_s_axi_rvalid);
        p_56_s_axi_rvalid->set_sv_netview_offsetfromdp(11236320);
        xsim_sc_channel<0, bool > *p_56_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->s_axi_rready.bind(*p_56_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_56_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_56->m_axi_awaddr.bind(*p_56_m_axi_awaddr);
        p_56_m_axi_awaddr->set_sv_netview_offsetfromdp(11236432);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_awlen.bind(*p_56_m_axi_awlen);
        p_56_m_axi_awlen->set_sv_netview_offsetfromdp(11236488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_awburst.bind(*p_56_m_axi_awburst);
        p_56_m_axi_awburst->set_sv_netview_offsetfromdp(11236544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_awlock.bind(*p_56_m_axi_awlock);
        p_56_m_axi_awlock->set_sv_netview_offsetfromdp(11236600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_awcache.bind(*p_56_m_axi_awcache);
        p_56_m_axi_awcache->set_sv_netview_offsetfromdp(11236656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_awprot.bind(*p_56_m_axi_awprot);
        p_56_m_axi_awprot->set_sv_netview_offsetfromdp(11236712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_awqos.bind(*p_56_m_axi_awqos);
        p_56_m_axi_awqos->set_sv_netview_offsetfromdp(11236768);
        xsim_sc_channel<0, bool > *p_56_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awvalid.bind(*p_56_m_axi_awvalid);
        p_56_m_axi_awvalid->set_sv_netview_offsetfromdp(11236824);
        xsim_sc_channel<0, bool > *p_56_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_awready.bind(*p_56_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_56_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_56->m_axi_wdata.bind(*p_56_m_axi_wdata);
        p_56_m_axi_wdata->set_sv_netview_offsetfromdp(11236936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_56_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_56->m_axi_wstrb.bind(*p_56_m_axi_wstrb);
        p_56_m_axi_wstrb->set_sv_netview_offsetfromdp(11236992);
        xsim_sc_channel<0, bool > *p_56_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wlast.bind(*p_56_m_axi_wlast);
        p_56_m_axi_wlast->set_sv_netview_offsetfromdp(11237048);
        xsim_sc_channel<0, bool > *p_56_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wvalid.bind(*p_56_m_axi_wvalid);
        p_56_m_axi_wvalid->set_sv_netview_offsetfromdp(11237104);
        xsim_sc_channel<0, bool > *p_56_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_wready.bind(*p_56_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_bresp.bind(*p_56_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bvalid.bind(*p_56_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_bready.bind(*p_56_m_axi_bready);
        p_56_m_axi_bready->set_sv_netview_offsetfromdp(11237328);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_56_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_56->m_axi_araddr.bind(*p_56_m_axi_araddr);
        p_56_m_axi_araddr->set_sv_netview_offsetfromdp(11237384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_arlen.bind(*p_56_m_axi_arlen);
        p_56_m_axi_arlen->set_sv_netview_offsetfromdp(11237440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_arburst.bind(*p_56_m_axi_arburst);
        p_56_m_axi_arburst->set_sv_netview_offsetfromdp(11237496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_arlock.bind(*p_56_m_axi_arlock);
        p_56_m_axi_arlock->set_sv_netview_offsetfromdp(11237552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_arcache.bind(*p_56_m_axi_arcache);
        p_56_m_axi_arcache->set_sv_netview_offsetfromdp(11237608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_56_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_56->m_axi_arprot.bind(*p_56_m_axi_arprot);
        p_56_m_axi_arprot->set_sv_netview_offsetfromdp(11237664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_56_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_56->m_axi_arqos.bind(*p_56_m_axi_arqos);
        p_56_m_axi_arqos->set_sv_netview_offsetfromdp(11237720);
        xsim_sc_channel<0, bool > *p_56_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arvalid.bind(*p_56_m_axi_arvalid);
        p_56_m_axi_arvalid->set_sv_netview_offsetfromdp(11237776);
        xsim_sc_channel<0, bool > *p_56_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_arready.bind(*p_56_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_56_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_56->m_axi_rdata.bind(*p_56_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_56_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_56->m_axi_rresp.bind(*p_56_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_56_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rlast.bind(*p_56_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_56_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rvalid.bind(*p_56_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_56_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_56_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_56->m_axi_rready.bind(*p_56_m_axi_rready);
        p_56_m_axi_rready->set_sv_netview_offsetfromdp(11238112);
        sc_inst_57 = new bd_5dca_vip_S06_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.hmss_0.inst.vip_S06");
        sc_inst_57->xsim_set_dbg_index(1868);
        xsim_sc_channel<0, bool > *p_57_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_57->aclk.bind(*p_57_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aclk);
        xsim_sc_channel<0, bool > *p_57_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_57->aresetn.bind(*p_57_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_57_aresetn);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_57_s_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_57->s_axi_awaddr.bind(*p_57_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awaddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awlen.bind(*p_57_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awburst.bind(*p_57_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_awlock.bind(*p_57_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awcache.bind(*p_57_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_awprot.bind(*p_57_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_awqos.bind(*p_57_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_57_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awvalid.bind(*p_57_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_awready.bind(*p_57_s_axi_awready);
        p_57_s_axi_awready->set_sv_netview_offsetfromdp(11238776);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_57_s_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_57->s_axi_wdata.bind(*p_57_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wdata);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_s_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->s_axi_wstrb.bind(*p_57_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_57_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wlast.bind(*p_57_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_57_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wvalid.bind(*p_57_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_wready.bind(*p_57_s_axi_wready);
        p_57_s_axi_wready->set_sv_netview_offsetfromdp(11239056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_bresp.bind(*p_57_s_axi_bresp);
        p_57_s_axi_bresp->set_sv_netview_offsetfromdp(11239112);
        xsim_sc_channel<0, bool > *p_57_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bvalid.bind(*p_57_s_axi_bvalid);
        p_57_s_axi_bvalid->set_sv_netview_offsetfromdp(11239168);
        xsim_sc_channel<0, bool > *p_57_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_bready.bind(*p_57_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_bready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_57_s_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_57->s_axi_araddr.bind(*p_57_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_araddr);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arlen.bind(*p_57_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arburst.bind(*p_57_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arburst);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_arlock.bind(*p_57_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arcache.bind(*p_57_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->s_axi_arprot.bind(*p_57_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->s_axi_arqos.bind(*p_57_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_57_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arvalid.bind(*p_57_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_57_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_arready.bind(*p_57_s_axi_arready);
        p_57_s_axi_arready->set_sv_netview_offsetfromdp(11239728);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_57_s_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_57->s_axi_rdata.bind(*p_57_s_axi_rdata);
        p_57_s_axi_rdata->set_sv_netview_offsetfromdp(11239784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->s_axi_rresp.bind(*p_57_s_axi_rresp);
        p_57_s_axi_rresp->set_sv_netview_offsetfromdp(11239840);
        xsim_sc_channel<0, bool > *p_57_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rlast.bind(*p_57_s_axi_rlast);
        p_57_s_axi_rlast->set_sv_netview_offsetfromdp(11239896);
        xsim_sc_channel<0, bool > *p_57_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rvalid.bind(*p_57_s_axi_rvalid);
        p_57_s_axi_rvalid->set_sv_netview_offsetfromdp(11239952);
        xsim_sc_channel<0, bool > *p_57_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->s_axi_rready.bind(*p_57_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_s_axi_rready);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_57_m_axi_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_57->m_axi_awaddr.bind(*p_57_m_axi_awaddr);
        p_57_m_axi_awaddr->set_sv_netview_offsetfromdp(11240064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awlen.bind(*p_57_m_axi_awlen);
        p_57_m_axi_awlen->set_sv_netview_offsetfromdp(11240120);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_awburst.bind(*p_57_m_axi_awburst);
        p_57_m_axi_awburst->set_sv_netview_offsetfromdp(11240176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_awlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_awlock.bind(*p_57_m_axi_awlock);
        p_57_m_axi_awlock->set_sv_netview_offsetfromdp(11240232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awcache.bind(*p_57_m_axi_awcache);
        p_57_m_axi_awcache->set_sv_netview_offsetfromdp(11240288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_awprot.bind(*p_57_m_axi_awprot);
        p_57_m_axi_awprot->set_sv_netview_offsetfromdp(11240344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_awqos.bind(*p_57_m_axi_awqos);
        p_57_m_axi_awqos->set_sv_netview_offsetfromdp(11240400);
        xsim_sc_channel<0, bool > *p_57_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_awvalid.bind(*p_57_m_axi_awvalid);
        p_57_m_axi_awvalid->set_sv_netview_offsetfromdp(11240456);
        xsim_sc_channel<0, bool > *p_57_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_awready.bind(*p_57_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_awready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_57_m_axi_wdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_57->m_axi_wdata.bind(*p_57_m_axi_wdata);
        p_57_m_axi_wdata->set_sv_netview_offsetfromdp(11240568);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_57_m_axi_wstrb = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_57->m_axi_wstrb.bind(*p_57_m_axi_wstrb);
        p_57_m_axi_wstrb->set_sv_netview_offsetfromdp(11240624);
        xsim_sc_channel<0, bool > *p_57_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wlast.bind(*p_57_m_axi_wlast);
        p_57_m_axi_wlast->set_sv_netview_offsetfromdp(11240680);
        xsim_sc_channel<0, bool > *p_57_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wvalid.bind(*p_57_m_axi_wvalid);
        p_57_m_axi_wvalid->set_sv_netview_offsetfromdp(11240736);
        xsim_sc_channel<0, bool > *p_57_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_wready.bind(*p_57_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_bresp.bind(*p_57_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_57_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_bvalid.bind(*p_57_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_57_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_bready.bind(*p_57_m_axi_bready);
        p_57_m_axi_bready->set_sv_netview_offsetfromdp(11240960);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_57_m_axi_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_57->m_axi_araddr.bind(*p_57_m_axi_araddr);
        p_57_m_axi_araddr->set_sv_netview_offsetfromdp(11241016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arlen = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arlen.bind(*p_57_m_axi_arlen);
        p_57_m_axi_arlen->set_sv_netview_offsetfromdp(11241072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_arburst.bind(*p_57_m_axi_arburst);
        p_57_m_axi_arburst->set_sv_netview_offsetfromdp(11241128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_arlock = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_arlock.bind(*p_57_m_axi_arlock);
        p_57_m_axi_arlock->set_sv_netview_offsetfromdp(11241184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arcache.bind(*p_57_m_axi_arcache);
        p_57_m_axi_arcache->set_sv_netview_offsetfromdp(11241240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_57_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_57->m_axi_arprot.bind(*p_57_m_axi_arprot);
        p_57_m_axi_arprot->set_sv_netview_offsetfromdp(11241296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_57_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_57->m_axi_arqos.bind(*p_57_m_axi_arqos);
        p_57_m_axi_arqos->set_sv_netview_offsetfromdp(11241352);
        xsim_sc_channel<0, bool > *p_57_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_arvalid.bind(*p_57_m_axi_arvalid);
        p_57_m_axi_arvalid->set_sv_netview_offsetfromdp(11241408);
        xsim_sc_channel<0, bool > *p_57_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_arready.bind(*p_57_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_arready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_57_m_axi_rdata = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_57->m_axi_rdata.bind(*p_57_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_57_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_57->m_axi_rresp.bind(*p_57_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_57_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rlast.bind(*p_57_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_57_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rvalid.bind(*p_57_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_57_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_57_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_57->m_axi_rready.bind(*p_57_m_axi_rready);
        p_57_m_axi_rready->set_sv_netview_offsetfromdp(11241744);
        sc_inst_58 = new pfm_dynamic_irq_const_tieoff_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.irq_const_tieoff");
        sc_inst_58->xsim_set_dbg_index(53);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_58_dout = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_58->dout.bind(*p_58_dout);
        p_58_dout->set_sv_netview_offsetfromdp(11411472);
        sc_inst_59 = new bd_d216_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.bd_d216_sci_inst");
        sc_inst_59->xsim_set_dbg_index(2055);
        sc_inst_60 = new bd_d216_interconnect_DDR4_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem00");
        sc_inst_60->xsim_set_dbg_index(4761);
        xsim_sc_channel<0, bool > *p_60_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk.bind(*p_60_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk);
        xsim_sc_channel<0, bool > *p_60_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_60->aclk1.bind(*p_60_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aclk1);
        xsim_sc_channel<0, bool > *p_60_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_60->aresetn.bind(*p_60_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_60_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->S00_AXI_awid.bind(*p_60_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_60_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_60->S00_AXI_awaddr.bind(*p_60_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->S00_AXI_awlen.bind(*p_60_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->S00_AXI_awsize.bind(*p_60_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->S00_AXI_awburst.bind(*p_60_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->S00_AXI_awlock.bind(*p_60_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->S00_AXI_awcache.bind(*p_60_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->S00_AXI_awprot.bind(*p_60_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->S00_AXI_awqos.bind(*p_60_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_60_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_60->S00_AXI_awuser.bind(*p_60_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_awvalid.bind(*p_60_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_awready.bind(*p_60_S00_AXI_awready);
        p_60_S00_AXI_awready->set_sv_netview_offsetfromdp(11938952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_60_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_60->S00_AXI_wdata.bind(*p_60_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->S00_AXI_wstrb.bind(*p_60_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_wlast.bind(*p_60_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_60_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_60->S00_AXI_wuser.bind(*p_60_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_wvalid.bind(*p_60_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_wready.bind(*p_60_S00_AXI_wready);
        p_60_S00_AXI_wready->set_sv_netview_offsetfromdp(11939288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->S00_AXI_bid.bind(*p_60_S00_AXI_bid);
        p_60_S00_AXI_bid->set_sv_netview_offsetfromdp(11939344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->S00_AXI_bresp.bind(*p_60_S00_AXI_bresp);
        p_60_S00_AXI_bresp->set_sv_netview_offsetfromdp(11939400);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_60_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_60->S00_AXI_buser.bind(*p_60_S00_AXI_buser);
        p_60_S00_AXI_buser->set_sv_netview_offsetfromdp(11939456);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_bvalid.bind(*p_60_S00_AXI_bvalid);
        p_60_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11939512);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_bready.bind(*p_60_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->S00_AXI_arid.bind(*p_60_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_60_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_60->S00_AXI_araddr.bind(*p_60_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->S00_AXI_arlen.bind(*p_60_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->S00_AXI_arsize.bind(*p_60_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->S00_AXI_arburst.bind(*p_60_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->S00_AXI_arlock.bind(*p_60_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->S00_AXI_arcache.bind(*p_60_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->S00_AXI_arprot.bind(*p_60_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->S00_AXI_arqos.bind(*p_60_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_60_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_60->S00_AXI_aruser.bind(*p_60_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_arvalid.bind(*p_60_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_arready.bind(*p_60_S00_AXI_arready);
        p_60_S00_AXI_arready->set_sv_netview_offsetfromdp(11940240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->S00_AXI_rid.bind(*p_60_S00_AXI_rid);
        p_60_S00_AXI_rid->set_sv_netview_offsetfromdp(11940296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_60_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_60->S00_AXI_rdata.bind(*p_60_S00_AXI_rdata);
        p_60_S00_AXI_rdata->set_sv_netview_offsetfromdp(11940352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->S00_AXI_rresp.bind(*p_60_S00_AXI_rresp);
        p_60_S00_AXI_rresp->set_sv_netview_offsetfromdp(11940408);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_rlast.bind(*p_60_S00_AXI_rlast);
        p_60_S00_AXI_rlast->set_sv_netview_offsetfromdp(11940464);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_60_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_60->S00_AXI_ruser.bind(*p_60_S00_AXI_ruser);
        p_60_S00_AXI_ruser->set_sv_netview_offsetfromdp(11940520);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_rvalid.bind(*p_60_S00_AXI_rvalid);
        p_60_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11940576);
        xsim_sc_channel<0, bool > *p_60_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->S00_AXI_rready.bind(*p_60_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_60_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_60->M00_AXI_awaddr.bind(*p_60_M00_AXI_awaddr);
        p_60_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11940688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->M00_AXI_awlen.bind(*p_60_M00_AXI_awlen);
        p_60_M00_AXI_awlen->set_sv_netview_offsetfromdp(11940744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->M00_AXI_awsize.bind(*p_60_M00_AXI_awsize);
        p_60_M00_AXI_awsize->set_sv_netview_offsetfromdp(11940800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->M00_AXI_awburst.bind(*p_60_M00_AXI_awburst);
        p_60_M00_AXI_awburst->set_sv_netview_offsetfromdp(11940856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->M00_AXI_awlock.bind(*p_60_M00_AXI_awlock);
        p_60_M00_AXI_awlock->set_sv_netview_offsetfromdp(11940912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->M00_AXI_awcache.bind(*p_60_M00_AXI_awcache);
        p_60_M00_AXI_awcache->set_sv_netview_offsetfromdp(11940968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->M00_AXI_awprot.bind(*p_60_M00_AXI_awprot);
        p_60_M00_AXI_awprot->set_sv_netview_offsetfromdp(11941024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->M00_AXI_awqos.bind(*p_60_M00_AXI_awqos);
        p_60_M00_AXI_awqos->set_sv_netview_offsetfromdp(11941080);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_awvalid.bind(*p_60_M00_AXI_awvalid);
        p_60_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11941136);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_awready.bind(*p_60_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_60_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_60->M00_AXI_wdata.bind(*p_60_M00_AXI_wdata);
        p_60_M00_AXI_wdata->set_sv_netview_offsetfromdp(11941248);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_60_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_60->M00_AXI_wstrb.bind(*p_60_M00_AXI_wstrb);
        p_60_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11941304);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_wlast.bind(*p_60_M00_AXI_wlast);
        p_60_M00_AXI_wlast->set_sv_netview_offsetfromdp(11941360);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_wvalid.bind(*p_60_M00_AXI_wvalid);
        p_60_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11941416);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_wready.bind(*p_60_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->M00_AXI_bresp.bind(*p_60_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_bvalid.bind(*p_60_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_bready.bind(*p_60_M00_AXI_bready);
        p_60_M00_AXI_bready->set_sv_netview_offsetfromdp(11941640);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_60_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_60->M00_AXI_araddr.bind(*p_60_M00_AXI_araddr);
        p_60_M00_AXI_araddr->set_sv_netview_offsetfromdp(11941696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_60_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_60->M00_AXI_arlen.bind(*p_60_M00_AXI_arlen);
        p_60_M00_AXI_arlen->set_sv_netview_offsetfromdp(11941752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->M00_AXI_arsize.bind(*p_60_M00_AXI_arsize);
        p_60_M00_AXI_arsize->set_sv_netview_offsetfromdp(11941808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->M00_AXI_arburst.bind(*p_60_M00_AXI_arburst);
        p_60_M00_AXI_arburst->set_sv_netview_offsetfromdp(11941864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_60_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_60->M00_AXI_arlock.bind(*p_60_M00_AXI_arlock);
        p_60_M00_AXI_arlock->set_sv_netview_offsetfromdp(11941920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->M00_AXI_arcache.bind(*p_60_M00_AXI_arcache);
        p_60_M00_AXI_arcache->set_sv_netview_offsetfromdp(11941976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_60_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_60->M00_AXI_arprot.bind(*p_60_M00_AXI_arprot);
        p_60_M00_AXI_arprot->set_sv_netview_offsetfromdp(11942032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_60_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_60->M00_AXI_arqos.bind(*p_60_M00_AXI_arqos);
        p_60_M00_AXI_arqos->set_sv_netview_offsetfromdp(11942088);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_arvalid.bind(*p_60_M00_AXI_arvalid);
        p_60_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11942144);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_arready.bind(*p_60_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_60_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_60->M00_AXI_rdata.bind(*p_60_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_60_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_60->M00_AXI_rresp.bind(*p_60_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_rlast.bind(*p_60_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_rvalid.bind(*p_60_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_60_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_60_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_60->M00_AXI_rready.bind(*p_60_M00_AXI_rready);
        p_60_M00_AXI_rready->set_sv_netview_offsetfromdp(11942480);
        sc_inst_61 = new bd_d216_interconnect_DDR4_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_ddr4_mem01");
        sc_inst_61->xsim_set_dbg_index(4762);
        xsim_sc_channel<0, bool > *p_61_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_61->aclk.bind(*p_61_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aclk);
        xsim_sc_channel<0, bool > *p_61_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_61->aclk1.bind(*p_61_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aclk1);
        xsim_sc_channel<0, bool > *p_61_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_61->aresetn.bind(*p_61_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_61_aresetn);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_61_S00_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_61->S00_AXI_awaddr.bind(*p_61_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->S00_AXI_awlen.bind(*p_61_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->S00_AXI_awsize.bind(*p_61_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->S00_AXI_awburst.bind(*p_61_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->S00_AXI_awlock.bind(*p_61_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->S00_AXI_awcache.bind(*p_61_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->S00_AXI_awprot.bind(*p_61_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->S00_AXI_awqos.bind(*p_61_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_awvalid.bind(*p_61_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_awready.bind(*p_61_S00_AXI_awready);
        p_61_S00_AXI_awready->set_sv_netview_offsetfromdp(11943256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->S00_AXI_wdata.bind(*p_61_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->S00_AXI_wstrb.bind(*p_61_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_wlast.bind(*p_61_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_wvalid.bind(*p_61_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_wready.bind(*p_61_S00_AXI_wready);
        p_61_S00_AXI_wready->set_sv_netview_offsetfromdp(11943536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->S00_AXI_bresp.bind(*p_61_S00_AXI_bresp);
        p_61_S00_AXI_bresp->set_sv_netview_offsetfromdp(11943592);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_bvalid.bind(*p_61_S00_AXI_bvalid);
        p_61_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11943648);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_bready.bind(*p_61_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_bready);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_61_S00_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_61->S00_AXI_araddr.bind(*p_61_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->S00_AXI_arlen.bind(*p_61_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->S00_AXI_arsize.bind(*p_61_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->S00_AXI_arburst.bind(*p_61_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->S00_AXI_arlock.bind(*p_61_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->S00_AXI_arcache.bind(*p_61_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->S00_AXI_arprot.bind(*p_61_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->S00_AXI_arqos.bind(*p_61_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_arvalid.bind(*p_61_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_arready.bind(*p_61_S00_AXI_arready);
        p_61_S00_AXI_arready->set_sv_netview_offsetfromdp(11944264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_61_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_61->S00_AXI_rdata.bind(*p_61_S00_AXI_rdata);
        p_61_S00_AXI_rdata->set_sv_netview_offsetfromdp(11944320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->S00_AXI_rresp.bind(*p_61_S00_AXI_rresp);
        p_61_S00_AXI_rresp->set_sv_netview_offsetfromdp(11944376);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_rlast.bind(*p_61_S00_AXI_rlast);
        p_61_S00_AXI_rlast->set_sv_netview_offsetfromdp(11944432);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_rvalid.bind(*p_61_S00_AXI_rvalid);
        p_61_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11944488);
        xsim_sc_channel<0, bool > *p_61_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->S00_AXI_rready.bind(*p_61_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_S00_AXI_rready);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_61_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_61->M00_AXI_awaddr.bind(*p_61_M00_AXI_awaddr);
        p_61_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11944600);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->M00_AXI_awlen.bind(*p_61_M00_AXI_awlen);
        p_61_M00_AXI_awlen->set_sv_netview_offsetfromdp(11944656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->M00_AXI_awsize.bind(*p_61_M00_AXI_awsize);
        p_61_M00_AXI_awsize->set_sv_netview_offsetfromdp(11944712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->M00_AXI_awburst.bind(*p_61_M00_AXI_awburst);
        p_61_M00_AXI_awburst->set_sv_netview_offsetfromdp(11944768);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->M00_AXI_awlock.bind(*p_61_M00_AXI_awlock);
        p_61_M00_AXI_awlock->set_sv_netview_offsetfromdp(11944824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->M00_AXI_awcache.bind(*p_61_M00_AXI_awcache);
        p_61_M00_AXI_awcache->set_sv_netview_offsetfromdp(11944880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->M00_AXI_awprot.bind(*p_61_M00_AXI_awprot);
        p_61_M00_AXI_awprot->set_sv_netview_offsetfromdp(11944936);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->M00_AXI_awqos.bind(*p_61_M00_AXI_awqos);
        p_61_M00_AXI_awqos->set_sv_netview_offsetfromdp(11944992);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_awvalid.bind(*p_61_M00_AXI_awvalid);
        p_61_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11945048);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_awready.bind(*p_61_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_61_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_61->M00_AXI_wdata.bind(*p_61_M00_AXI_wdata);
        p_61_M00_AXI_wdata->set_sv_netview_offsetfromdp(11945160);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_61_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_61->M00_AXI_wstrb.bind(*p_61_M00_AXI_wstrb);
        p_61_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11945216);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_wlast.bind(*p_61_M00_AXI_wlast);
        p_61_M00_AXI_wlast->set_sv_netview_offsetfromdp(11945272);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_wvalid.bind(*p_61_M00_AXI_wvalid);
        p_61_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11945328);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_wready.bind(*p_61_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->M00_AXI_bresp.bind(*p_61_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_bvalid.bind(*p_61_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_bready.bind(*p_61_M00_AXI_bready);
        p_61_M00_AXI_bready->set_sv_netview_offsetfromdp(11945552);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_61_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_61->M00_AXI_araddr.bind(*p_61_M00_AXI_araddr);
        p_61_M00_AXI_araddr->set_sv_netview_offsetfromdp(11945608);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_61_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_61->M00_AXI_arlen.bind(*p_61_M00_AXI_arlen);
        p_61_M00_AXI_arlen->set_sv_netview_offsetfromdp(11945664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->M00_AXI_arsize.bind(*p_61_M00_AXI_arsize);
        p_61_M00_AXI_arsize->set_sv_netview_offsetfromdp(11945720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->M00_AXI_arburst.bind(*p_61_M00_AXI_arburst);
        p_61_M00_AXI_arburst->set_sv_netview_offsetfromdp(11945776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_61_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_61->M00_AXI_arlock.bind(*p_61_M00_AXI_arlock);
        p_61_M00_AXI_arlock->set_sv_netview_offsetfromdp(11945832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->M00_AXI_arcache.bind(*p_61_M00_AXI_arcache);
        p_61_M00_AXI_arcache->set_sv_netview_offsetfromdp(11945888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_61_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_61->M00_AXI_arprot.bind(*p_61_M00_AXI_arprot);
        p_61_M00_AXI_arprot->set_sv_netview_offsetfromdp(11945944);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_61_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_61->M00_AXI_arqos.bind(*p_61_M00_AXI_arqos);
        p_61_M00_AXI_arqos->set_sv_netview_offsetfromdp(11946000);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_arvalid.bind(*p_61_M00_AXI_arvalid);
        p_61_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11946056);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_arready.bind(*p_61_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_61_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_61->M00_AXI_rdata.bind(*p_61_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_61_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_61->M00_AXI_rresp.bind(*p_61_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_rlast.bind(*p_61_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_rvalid.bind(*p_61_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_61_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_61_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_61->M00_AXI_rready.bind(*p_61_M00_AXI_rready);
        p_61_M00_AXI_rready->set_sv_netview_offsetfromdp(11946392);
        sc_inst_62 = new bd_d216_interconnect_M00_AXI_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_m00_axi_mem00");
        sc_inst_62->xsim_set_dbg_index(4763);
        xsim_sc_channel<0, bool > *p_62_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_62->aclk.bind(*p_62_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aclk);
        xsim_sc_channel<0, bool > *p_62_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_62->aresetn.bind(*p_62_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_62_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_awid.bind(*p_62_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_62_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_62->S00_AXI_awaddr.bind(*p_62_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->S00_AXI_awlen.bind(*p_62_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_awsize.bind(*p_62_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_awburst.bind(*p_62_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_awlock.bind(*p_62_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_awcache.bind(*p_62_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_awprot.bind(*p_62_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_awqos.bind(*p_62_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_62_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_62->S00_AXI_awuser.bind(*p_62_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_awvalid.bind(*p_62_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_awready.bind(*p_62_S00_AXI_awready);
        p_62_S00_AXI_awready->set_sv_netview_offsetfromdp(11947224);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_62_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_62->S00_AXI_wdata.bind(*p_62_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_62_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_62->S00_AXI_wstrb.bind(*p_62_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wlast.bind(*p_62_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_62_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_62->S00_AXI_wuser.bind(*p_62_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wvalid.bind(*p_62_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_wready.bind(*p_62_S00_AXI_wready);
        p_62_S00_AXI_wready->set_sv_netview_offsetfromdp(11947560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_bid.bind(*p_62_S00_AXI_bid);
        p_62_S00_AXI_bid->set_sv_netview_offsetfromdp(11947616);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_bresp.bind(*p_62_S00_AXI_bresp);
        p_62_S00_AXI_bresp->set_sv_netview_offsetfromdp(11947672);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_62_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_62->S00_AXI_buser.bind(*p_62_S00_AXI_buser);
        p_62_S00_AXI_buser->set_sv_netview_offsetfromdp(11947728);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_bvalid.bind(*p_62_S00_AXI_bvalid);
        p_62_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11947784);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_bready.bind(*p_62_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_arid.bind(*p_62_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_62_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_62->S00_AXI_araddr.bind(*p_62_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->S00_AXI_arlen.bind(*p_62_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_arsize.bind(*p_62_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_arburst.bind(*p_62_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_arlock.bind(*p_62_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_arcache.bind(*p_62_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->S00_AXI_arprot.bind(*p_62_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->S00_AXI_arqos.bind(*p_62_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_62_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_62->S00_AXI_aruser.bind(*p_62_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_arvalid.bind(*p_62_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_arready.bind(*p_62_S00_AXI_arready);
        p_62_S00_AXI_arready->set_sv_netview_offsetfromdp(11948512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->S00_AXI_rid.bind(*p_62_S00_AXI_rid);
        p_62_S00_AXI_rid->set_sv_netview_offsetfromdp(11948568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_62_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_62->S00_AXI_rdata.bind(*p_62_S00_AXI_rdata);
        p_62_S00_AXI_rdata->set_sv_netview_offsetfromdp(11948624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->S00_AXI_rresp.bind(*p_62_S00_AXI_rresp);
        p_62_S00_AXI_rresp->set_sv_netview_offsetfromdp(11948680);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rlast.bind(*p_62_S00_AXI_rlast);
        p_62_S00_AXI_rlast->set_sv_netview_offsetfromdp(11948736);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_62_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_62->S00_AXI_ruser.bind(*p_62_S00_AXI_ruser);
        p_62_S00_AXI_ruser->set_sv_netview_offsetfromdp(11948792);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rvalid.bind(*p_62_S00_AXI_rvalid);
        p_62_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11948848);
        xsim_sc_channel<0, bool > *p_62_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->S00_AXI_rready.bind(*p_62_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_62_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_62->M00_AXI_awaddr.bind(*p_62_M00_AXI_awaddr);
        p_62_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11948960);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M00_AXI_awlen.bind(*p_62_M00_AXI_awlen);
        p_62_M00_AXI_awlen->set_sv_netview_offsetfromdp(11949016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_awsize.bind(*p_62_M00_AXI_awsize);
        p_62_M00_AXI_awsize->set_sv_netview_offsetfromdp(11949072);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_awburst.bind(*p_62_M00_AXI_awburst);
        p_62_M00_AXI_awburst->set_sv_netview_offsetfromdp(11949128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_awlock.bind(*p_62_M00_AXI_awlock);
        p_62_M00_AXI_awlock->set_sv_netview_offsetfromdp(11949184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_awcache.bind(*p_62_M00_AXI_awcache);
        p_62_M00_AXI_awcache->set_sv_netview_offsetfromdp(11949240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_awprot.bind(*p_62_M00_AXI_awprot);
        p_62_M00_AXI_awprot->set_sv_netview_offsetfromdp(11949296);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_awqos.bind(*p_62_M00_AXI_awqos);
        p_62_M00_AXI_awqos->set_sv_netview_offsetfromdp(11949352);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_awvalid.bind(*p_62_M00_AXI_awvalid);
        p_62_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11949408);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_awready.bind(*p_62_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_wdata.bind(*p_62_M00_AXI_wdata);
        p_62_M00_AXI_wdata->set_sv_netview_offsetfromdp(11949520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_wstrb.bind(*p_62_M00_AXI_wstrb);
        p_62_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11949576);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wlast.bind(*p_62_M00_AXI_wlast);
        p_62_M00_AXI_wlast->set_sv_netview_offsetfromdp(11949632);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wvalid.bind(*p_62_M00_AXI_wvalid);
        p_62_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11949688);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_wready.bind(*p_62_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_bresp.bind(*p_62_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_bvalid.bind(*p_62_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_bready.bind(*p_62_M00_AXI_bready);
        p_62_M00_AXI_bready->set_sv_netview_offsetfromdp(11949912);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_62_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_62->M00_AXI_araddr.bind(*p_62_M00_AXI_araddr);
        p_62_M00_AXI_araddr->set_sv_netview_offsetfromdp(11949968);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_62_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_62->M00_AXI_arlen.bind(*p_62_M00_AXI_arlen);
        p_62_M00_AXI_arlen->set_sv_netview_offsetfromdp(11950024);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_arsize.bind(*p_62_M00_AXI_arsize);
        p_62_M00_AXI_arsize->set_sv_netview_offsetfromdp(11950080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_arburst.bind(*p_62_M00_AXI_arburst);
        p_62_M00_AXI_arburst->set_sv_netview_offsetfromdp(11950136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_62_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_62->M00_AXI_arlock.bind(*p_62_M00_AXI_arlock);
        p_62_M00_AXI_arlock->set_sv_netview_offsetfromdp(11950192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_arcache.bind(*p_62_M00_AXI_arcache);
        p_62_M00_AXI_arcache->set_sv_netview_offsetfromdp(11950248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_62_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_62->M00_AXI_arprot.bind(*p_62_M00_AXI_arprot);
        p_62_M00_AXI_arprot->set_sv_netview_offsetfromdp(11950304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_62_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_62->M00_AXI_arqos.bind(*p_62_M00_AXI_arqos);
        p_62_M00_AXI_arqos->set_sv_netview_offsetfromdp(11950360);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_arvalid.bind(*p_62_M00_AXI_arvalid);
        p_62_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11950416);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_arready.bind(*p_62_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_62_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_62->M00_AXI_rdata.bind(*p_62_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_62_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_62->M00_AXI_rresp.bind(*p_62_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rlast.bind(*p_62_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rvalid.bind(*p_62_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_62_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_62_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_62->M00_AXI_rready.bind(*p_62_M00_AXI_rready);
        p_62_M00_AXI_rready->set_sv_netview_offsetfromdp(11950752);
        sc_inst_63 = new bd_d216_interconnect_PLRAM_MEM00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem00");
        sc_inst_63->xsim_set_dbg_index(4764);
        xsim_sc_channel<0, bool > *p_63_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_63->aclk.bind(*p_63_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aclk);
        xsim_sc_channel<0, bool > *p_63_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_63->aresetn.bind(*p_63_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_63_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->S00_AXI_awid.bind(*p_63_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_63_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_63->S00_AXI_awaddr.bind(*p_63_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->S00_AXI_awlen.bind(*p_63_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->S00_AXI_awsize.bind(*p_63_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->S00_AXI_awburst.bind(*p_63_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->S00_AXI_awlock.bind(*p_63_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->S00_AXI_awcache.bind(*p_63_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->S00_AXI_awprot.bind(*p_63_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->S00_AXI_awqos.bind(*p_63_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_63_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_63->S00_AXI_awuser.bind(*p_63_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_awvalid.bind(*p_63_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_awready.bind(*p_63_S00_AXI_awready);
        p_63_S00_AXI_awready->set_sv_netview_offsetfromdp(11951584);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_63_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_63->S00_AXI_wdata.bind(*p_63_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->S00_AXI_wstrb.bind(*p_63_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_wlast.bind(*p_63_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_63_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_63->S00_AXI_wuser.bind(*p_63_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_wvalid.bind(*p_63_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_wready.bind(*p_63_S00_AXI_wready);
        p_63_S00_AXI_wready->set_sv_netview_offsetfromdp(11951920);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->S00_AXI_bid.bind(*p_63_S00_AXI_bid);
        p_63_S00_AXI_bid->set_sv_netview_offsetfromdp(11951976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->S00_AXI_bresp.bind(*p_63_S00_AXI_bresp);
        p_63_S00_AXI_bresp->set_sv_netview_offsetfromdp(11952032);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_63_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_63->S00_AXI_buser.bind(*p_63_S00_AXI_buser);
        p_63_S00_AXI_buser->set_sv_netview_offsetfromdp(11952088);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_bvalid.bind(*p_63_S00_AXI_bvalid);
        p_63_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11952144);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_bready.bind(*p_63_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->S00_AXI_arid.bind(*p_63_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_63_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_63->S00_AXI_araddr.bind(*p_63_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->S00_AXI_arlen.bind(*p_63_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->S00_AXI_arsize.bind(*p_63_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->S00_AXI_arburst.bind(*p_63_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->S00_AXI_arlock.bind(*p_63_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->S00_AXI_arcache.bind(*p_63_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->S00_AXI_arprot.bind(*p_63_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->S00_AXI_arqos.bind(*p_63_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_63_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_63->S00_AXI_aruser.bind(*p_63_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_arvalid.bind(*p_63_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_arready.bind(*p_63_S00_AXI_arready);
        p_63_S00_AXI_arready->set_sv_netview_offsetfromdp(11952872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->S00_AXI_rid.bind(*p_63_S00_AXI_rid);
        p_63_S00_AXI_rid->set_sv_netview_offsetfromdp(11952928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_63_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_63->S00_AXI_rdata.bind(*p_63_S00_AXI_rdata);
        p_63_S00_AXI_rdata->set_sv_netview_offsetfromdp(11952984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->S00_AXI_rresp.bind(*p_63_S00_AXI_rresp);
        p_63_S00_AXI_rresp->set_sv_netview_offsetfromdp(11953040);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_rlast.bind(*p_63_S00_AXI_rlast);
        p_63_S00_AXI_rlast->set_sv_netview_offsetfromdp(11953096);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_63_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_63->S00_AXI_ruser.bind(*p_63_S00_AXI_ruser);
        p_63_S00_AXI_ruser->set_sv_netview_offsetfromdp(11953152);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_rvalid.bind(*p_63_S00_AXI_rvalid);
        p_63_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11953208);
        xsim_sc_channel<0, bool > *p_63_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_63->S00_AXI_rready.bind(*p_63_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_63_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_63->M00_AXI_awaddr.bind(*p_63_M00_AXI_awaddr);
        p_63_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11953320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->M00_AXI_awlen.bind(*p_63_M00_AXI_awlen);
        p_63_M00_AXI_awlen->set_sv_netview_offsetfromdp(11953376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->M00_AXI_awsize.bind(*p_63_M00_AXI_awsize);
        p_63_M00_AXI_awsize->set_sv_netview_offsetfromdp(11953432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->M00_AXI_awburst.bind(*p_63_M00_AXI_awburst);
        p_63_M00_AXI_awburst->set_sv_netview_offsetfromdp(11953488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->M00_AXI_awlock.bind(*p_63_M00_AXI_awlock);
        p_63_M00_AXI_awlock->set_sv_netview_offsetfromdp(11953544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->M00_AXI_awcache.bind(*p_63_M00_AXI_awcache);
        p_63_M00_AXI_awcache->set_sv_netview_offsetfromdp(11953600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->M00_AXI_awprot.bind(*p_63_M00_AXI_awprot);
        p_63_M00_AXI_awprot->set_sv_netview_offsetfromdp(11953656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->M00_AXI_awqos.bind(*p_63_M00_AXI_awqos);
        p_63_M00_AXI_awqos->set_sv_netview_offsetfromdp(11953712);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_awvalid.bind(*p_63_M00_AXI_awvalid);
        p_63_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11953768);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_awready.bind(*p_63_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_63_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_63->M00_AXI_wdata.bind(*p_63_M00_AXI_wdata);
        p_63_M00_AXI_wdata->set_sv_netview_offsetfromdp(11953880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_63_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_63->M00_AXI_wstrb.bind(*p_63_M00_AXI_wstrb);
        p_63_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11953936);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_wlast.bind(*p_63_M00_AXI_wlast);
        p_63_M00_AXI_wlast->set_sv_netview_offsetfromdp(11953992);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_wvalid.bind(*p_63_M00_AXI_wvalid);
        p_63_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11954048);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_wready.bind(*p_63_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->M00_AXI_bresp.bind(*p_63_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_bvalid.bind(*p_63_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_bready.bind(*p_63_M00_AXI_bready);
        p_63_M00_AXI_bready->set_sv_netview_offsetfromdp(11954272);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_63_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_63->M00_AXI_araddr.bind(*p_63_M00_AXI_araddr);
        p_63_M00_AXI_araddr->set_sv_netview_offsetfromdp(11954328);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_63_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_63->M00_AXI_arlen.bind(*p_63_M00_AXI_arlen);
        p_63_M00_AXI_arlen->set_sv_netview_offsetfromdp(11954384);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->M00_AXI_arsize.bind(*p_63_M00_AXI_arsize);
        p_63_M00_AXI_arsize->set_sv_netview_offsetfromdp(11954440);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->M00_AXI_arburst.bind(*p_63_M00_AXI_arburst);
        p_63_M00_AXI_arburst->set_sv_netview_offsetfromdp(11954496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_63_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_63->M00_AXI_arlock.bind(*p_63_M00_AXI_arlock);
        p_63_M00_AXI_arlock->set_sv_netview_offsetfromdp(11954552);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->M00_AXI_arcache.bind(*p_63_M00_AXI_arcache);
        p_63_M00_AXI_arcache->set_sv_netview_offsetfromdp(11954608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_63_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_63->M00_AXI_arprot.bind(*p_63_M00_AXI_arprot);
        p_63_M00_AXI_arprot->set_sv_netview_offsetfromdp(11954664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_63_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_63->M00_AXI_arqos.bind(*p_63_M00_AXI_arqos);
        p_63_M00_AXI_arqos->set_sv_netview_offsetfromdp(11954720);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_arvalid.bind(*p_63_M00_AXI_arvalid);
        p_63_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11954776);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_arready.bind(*p_63_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_63_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_63->M00_AXI_rdata.bind(*p_63_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_63_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_63->M00_AXI_rresp.bind(*p_63_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_rlast.bind(*p_63_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_rvalid.bind(*p_63_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_63_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_63_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_63->M00_AXI_rready.bind(*p_63_M00_AXI_rready);
        p_63_M00_AXI_rready->set_sv_netview_offsetfromdp(11955112);
        sc_inst_64 = new bd_d216_interconnect_PLRAM_MEM01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem01");
        sc_inst_64->xsim_set_dbg_index(4765);
        xsim_sc_channel<0, bool > *p_64_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_64->aclk.bind(*p_64_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aclk);
        xsim_sc_channel<0, bool > *p_64_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_64->aresetn.bind(*p_64_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_64_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awid.bind(*p_64_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->S00_AXI_awaddr.bind(*p_64_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_awlen.bind(*p_64_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awsize.bind(*p_64_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_awburst.bind(*p_64_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_awlock.bind(*p_64_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awcache.bind(*p_64_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_awprot.bind(*p_64_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_awqos.bind(*p_64_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_64_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_64->S00_AXI_awuser.bind(*p_64_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awvalid.bind(*p_64_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_awready.bind(*p_64_S00_AXI_awready);
        p_64_S00_AXI_awready->set_sv_netview_offsetfromdp(11955944);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->S00_AXI_wdata.bind(*p_64_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->S00_AXI_wstrb.bind(*p_64_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wlast.bind(*p_64_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_64_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_64->S00_AXI_wuser.bind(*p_64_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wvalid.bind(*p_64_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_wready.bind(*p_64_S00_AXI_wready);
        p_64_S00_AXI_wready->set_sv_netview_offsetfromdp(11956280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_bid.bind(*p_64_S00_AXI_bid);
        p_64_S00_AXI_bid->set_sv_netview_offsetfromdp(11956336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_bresp.bind(*p_64_S00_AXI_bresp);
        p_64_S00_AXI_bresp->set_sv_netview_offsetfromdp(11956392);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_64_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_64->S00_AXI_buser.bind(*p_64_S00_AXI_buser);
        p_64_S00_AXI_buser->set_sv_netview_offsetfromdp(11956448);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bvalid.bind(*p_64_S00_AXI_bvalid);
        p_64_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11956504);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_bready.bind(*p_64_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arid.bind(*p_64_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_64_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_64->S00_AXI_araddr.bind(*p_64_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->S00_AXI_arlen.bind(*p_64_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arsize.bind(*p_64_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_arburst.bind(*p_64_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_arlock.bind(*p_64_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arcache.bind(*p_64_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->S00_AXI_arprot.bind(*p_64_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->S00_AXI_arqos.bind(*p_64_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_64_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_64->S00_AXI_aruser.bind(*p_64_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arvalid.bind(*p_64_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_arready.bind(*p_64_S00_AXI_arready);
        p_64_S00_AXI_arready->set_sv_netview_offsetfromdp(11957232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->S00_AXI_rid.bind(*p_64_S00_AXI_rid);
        p_64_S00_AXI_rid->set_sv_netview_offsetfromdp(11957288);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->S00_AXI_rdata.bind(*p_64_S00_AXI_rdata);
        p_64_S00_AXI_rdata->set_sv_netview_offsetfromdp(11957344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->S00_AXI_rresp.bind(*p_64_S00_AXI_rresp);
        p_64_S00_AXI_rresp->set_sv_netview_offsetfromdp(11957400);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rlast.bind(*p_64_S00_AXI_rlast);
        p_64_S00_AXI_rlast->set_sv_netview_offsetfromdp(11957456);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_64_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_64->S00_AXI_ruser.bind(*p_64_S00_AXI_ruser);
        p_64_S00_AXI_ruser->set_sv_netview_offsetfromdp(11957512);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rvalid.bind(*p_64_S00_AXI_rvalid);
        p_64_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11957568);
        xsim_sc_channel<0, bool > *p_64_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->S00_AXI_rready.bind(*p_64_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_64_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_64->M00_AXI_awaddr.bind(*p_64_M00_AXI_awaddr);
        p_64_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11957680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_awlen.bind(*p_64_M00_AXI_awlen);
        p_64_M00_AXI_awlen->set_sv_netview_offsetfromdp(11957736);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awsize.bind(*p_64_M00_AXI_awsize);
        p_64_M00_AXI_awsize->set_sv_netview_offsetfromdp(11957792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_awburst.bind(*p_64_M00_AXI_awburst);
        p_64_M00_AXI_awburst->set_sv_netview_offsetfromdp(11957848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_awlock.bind(*p_64_M00_AXI_awlock);
        p_64_M00_AXI_awlock->set_sv_netview_offsetfromdp(11957904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awcache.bind(*p_64_M00_AXI_awcache);
        p_64_M00_AXI_awcache->set_sv_netview_offsetfromdp(11957960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_awprot.bind(*p_64_M00_AXI_awprot);
        p_64_M00_AXI_awprot->set_sv_netview_offsetfromdp(11958016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_awqos.bind(*p_64_M00_AXI_awqos);
        p_64_M00_AXI_awqos->set_sv_netview_offsetfromdp(11958072);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awvalid.bind(*p_64_M00_AXI_awvalid);
        p_64_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11958128);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_awready.bind(*p_64_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M00_AXI_wdata.bind(*p_64_M00_AXI_wdata);
        p_64_M00_AXI_wdata->set_sv_netview_offsetfromdp(11958240);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_64_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_64->M00_AXI_wstrb.bind(*p_64_M00_AXI_wstrb);
        p_64_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11958296);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wlast.bind(*p_64_M00_AXI_wlast);
        p_64_M00_AXI_wlast->set_sv_netview_offsetfromdp(11958352);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wvalid.bind(*p_64_M00_AXI_wvalid);
        p_64_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11958408);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_wready.bind(*p_64_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_bresp.bind(*p_64_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bvalid.bind(*p_64_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_bready.bind(*p_64_M00_AXI_bready);
        p_64_M00_AXI_bready->set_sv_netview_offsetfromdp(11958632);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_64_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_64->M00_AXI_araddr.bind(*p_64_M00_AXI_araddr);
        p_64_M00_AXI_araddr->set_sv_netview_offsetfromdp(11958688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_64_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_64->M00_AXI_arlen.bind(*p_64_M00_AXI_arlen);
        p_64_M00_AXI_arlen->set_sv_netview_offsetfromdp(11958744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arsize.bind(*p_64_M00_AXI_arsize);
        p_64_M00_AXI_arsize->set_sv_netview_offsetfromdp(11958800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_arburst.bind(*p_64_M00_AXI_arburst);
        p_64_M00_AXI_arburst->set_sv_netview_offsetfromdp(11958856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_64_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_64->M00_AXI_arlock.bind(*p_64_M00_AXI_arlock);
        p_64_M00_AXI_arlock->set_sv_netview_offsetfromdp(11958912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arcache.bind(*p_64_M00_AXI_arcache);
        p_64_M00_AXI_arcache->set_sv_netview_offsetfromdp(11958968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_64_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_64->M00_AXI_arprot.bind(*p_64_M00_AXI_arprot);
        p_64_M00_AXI_arprot->set_sv_netview_offsetfromdp(11959024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_64_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_64->M00_AXI_arqos.bind(*p_64_M00_AXI_arqos);
        p_64_M00_AXI_arqos->set_sv_netview_offsetfromdp(11959080);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arvalid.bind(*p_64_M00_AXI_arvalid);
        p_64_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11959136);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_arready.bind(*p_64_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_64_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_64->M00_AXI_rdata.bind(*p_64_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_64_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_64->M00_AXI_rresp.bind(*p_64_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rlast.bind(*p_64_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rvalid.bind(*p_64_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_64_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_64_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_64->M00_AXI_rready.bind(*p_64_M00_AXI_rready);
        p_64_M00_AXI_rready->set_sv_netview_offsetfromdp(11959472);
        sc_inst_65 = new bd_d216_interconnect_PLRAM_MEM02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem02");
        sc_inst_65->xsim_set_dbg_index(4766);
        xsim_sc_channel<0, bool > *p_65_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_65->aclk.bind(*p_65_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aclk);
        xsim_sc_channel<0, bool > *p_65_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_65->aresetn.bind(*p_65_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_65_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awid.bind(*p_65_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_65_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_65->S00_AXI_awaddr.bind(*p_65_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_awlen.bind(*p_65_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awsize.bind(*p_65_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_awburst.bind(*p_65_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_awlock.bind(*p_65_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awcache.bind(*p_65_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_awprot.bind(*p_65_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_awqos.bind(*p_65_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_65_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_65->S00_AXI_awuser.bind(*p_65_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awvalid.bind(*p_65_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_awready.bind(*p_65_S00_AXI_awready);
        p_65_S00_AXI_awready->set_sv_netview_offsetfromdp(11960304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_65_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_65->S00_AXI_wdata.bind(*p_65_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->S00_AXI_wstrb.bind(*p_65_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wlast.bind(*p_65_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_65_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_65->S00_AXI_wuser.bind(*p_65_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wvalid.bind(*p_65_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_wready.bind(*p_65_S00_AXI_wready);
        p_65_S00_AXI_wready->set_sv_netview_offsetfromdp(11960640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_bid.bind(*p_65_S00_AXI_bid);
        p_65_S00_AXI_bid->set_sv_netview_offsetfromdp(11960696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_bresp.bind(*p_65_S00_AXI_bresp);
        p_65_S00_AXI_bresp->set_sv_netview_offsetfromdp(11960752);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_65_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_65->S00_AXI_buser.bind(*p_65_S00_AXI_buser);
        p_65_S00_AXI_buser->set_sv_netview_offsetfromdp(11960808);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bvalid.bind(*p_65_S00_AXI_bvalid);
        p_65_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11960864);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_bready.bind(*p_65_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arid.bind(*p_65_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_65_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_65->S00_AXI_araddr.bind(*p_65_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->S00_AXI_arlen.bind(*p_65_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arsize.bind(*p_65_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_arburst.bind(*p_65_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_arlock.bind(*p_65_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arcache.bind(*p_65_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->S00_AXI_arprot.bind(*p_65_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->S00_AXI_arqos.bind(*p_65_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_65_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_65->S00_AXI_aruser.bind(*p_65_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arvalid.bind(*p_65_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_arready.bind(*p_65_S00_AXI_arready);
        p_65_S00_AXI_arready->set_sv_netview_offsetfromdp(11961592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->S00_AXI_rid.bind(*p_65_S00_AXI_rid);
        p_65_S00_AXI_rid->set_sv_netview_offsetfromdp(11961648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_65_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_65->S00_AXI_rdata.bind(*p_65_S00_AXI_rdata);
        p_65_S00_AXI_rdata->set_sv_netview_offsetfromdp(11961704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->S00_AXI_rresp.bind(*p_65_S00_AXI_rresp);
        p_65_S00_AXI_rresp->set_sv_netview_offsetfromdp(11961760);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rlast.bind(*p_65_S00_AXI_rlast);
        p_65_S00_AXI_rlast->set_sv_netview_offsetfromdp(11961816);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_65_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_65->S00_AXI_ruser.bind(*p_65_S00_AXI_ruser);
        p_65_S00_AXI_ruser->set_sv_netview_offsetfromdp(11961872);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rvalid.bind(*p_65_S00_AXI_rvalid);
        p_65_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11961928);
        xsim_sc_channel<0, bool > *p_65_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->S00_AXI_rready.bind(*p_65_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_65_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_65->M00_AXI_awaddr.bind(*p_65_M00_AXI_awaddr);
        p_65_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11962040);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_awlen.bind(*p_65_M00_AXI_awlen);
        p_65_M00_AXI_awlen->set_sv_netview_offsetfromdp(11962096);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awsize.bind(*p_65_M00_AXI_awsize);
        p_65_M00_AXI_awsize->set_sv_netview_offsetfromdp(11962152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_awburst.bind(*p_65_M00_AXI_awburst);
        p_65_M00_AXI_awburst->set_sv_netview_offsetfromdp(11962208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_awlock.bind(*p_65_M00_AXI_awlock);
        p_65_M00_AXI_awlock->set_sv_netview_offsetfromdp(11962264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awcache.bind(*p_65_M00_AXI_awcache);
        p_65_M00_AXI_awcache->set_sv_netview_offsetfromdp(11962320);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_awprot.bind(*p_65_M00_AXI_awprot);
        p_65_M00_AXI_awprot->set_sv_netview_offsetfromdp(11962376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_awqos.bind(*p_65_M00_AXI_awqos);
        p_65_M00_AXI_awqos->set_sv_netview_offsetfromdp(11962432);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awvalid.bind(*p_65_M00_AXI_awvalid);
        p_65_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11962488);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_awready.bind(*p_65_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_65_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_65->M00_AXI_wdata.bind(*p_65_M00_AXI_wdata);
        p_65_M00_AXI_wdata->set_sv_netview_offsetfromdp(11962600);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_65_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_65->M00_AXI_wstrb.bind(*p_65_M00_AXI_wstrb);
        p_65_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11962656);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wlast.bind(*p_65_M00_AXI_wlast);
        p_65_M00_AXI_wlast->set_sv_netview_offsetfromdp(11962712);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wvalid.bind(*p_65_M00_AXI_wvalid);
        p_65_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11962768);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_wready.bind(*p_65_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_bresp.bind(*p_65_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bvalid.bind(*p_65_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_bready.bind(*p_65_M00_AXI_bready);
        p_65_M00_AXI_bready->set_sv_netview_offsetfromdp(11962992);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_65_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_65->M00_AXI_araddr.bind(*p_65_M00_AXI_araddr);
        p_65_M00_AXI_araddr->set_sv_netview_offsetfromdp(11963048);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_65_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_65->M00_AXI_arlen.bind(*p_65_M00_AXI_arlen);
        p_65_M00_AXI_arlen->set_sv_netview_offsetfromdp(11963104);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arsize.bind(*p_65_M00_AXI_arsize);
        p_65_M00_AXI_arsize->set_sv_netview_offsetfromdp(11963160);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_arburst.bind(*p_65_M00_AXI_arburst);
        p_65_M00_AXI_arburst->set_sv_netview_offsetfromdp(11963216);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_65_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_65->M00_AXI_arlock.bind(*p_65_M00_AXI_arlock);
        p_65_M00_AXI_arlock->set_sv_netview_offsetfromdp(11963272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arcache.bind(*p_65_M00_AXI_arcache);
        p_65_M00_AXI_arcache->set_sv_netview_offsetfromdp(11963328);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_65_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_65->M00_AXI_arprot.bind(*p_65_M00_AXI_arprot);
        p_65_M00_AXI_arprot->set_sv_netview_offsetfromdp(11963384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_65_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_65->M00_AXI_arqos.bind(*p_65_M00_AXI_arqos);
        p_65_M00_AXI_arqos->set_sv_netview_offsetfromdp(11963440);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arvalid.bind(*p_65_M00_AXI_arvalid);
        p_65_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11963496);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_arready.bind(*p_65_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_65_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_65->M00_AXI_rdata.bind(*p_65_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_65_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_65->M00_AXI_rresp.bind(*p_65_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rlast.bind(*p_65_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rvalid.bind(*p_65_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_65_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_65_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_65->M00_AXI_rready.bind(*p_65_M00_AXI_rready);
        p_65_M00_AXI_rready->set_sv_netview_offsetfromdp(11963832);
        sc_inst_66 = new bd_d216_interconnect_PLRAM_MEM03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem03");
        sc_inst_66->xsim_set_dbg_index(4767);
        xsim_sc_channel<0, bool > *p_66_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_66->aclk.bind(*p_66_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aclk);
        xsim_sc_channel<0, bool > *p_66_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_66->aresetn.bind(*p_66_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_66_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->S00_AXI_awid.bind(*p_66_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_66_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_66->S00_AXI_awaddr.bind(*p_66_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->S00_AXI_awlen.bind(*p_66_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->S00_AXI_awsize.bind(*p_66_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->S00_AXI_awburst.bind(*p_66_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->S00_AXI_awlock.bind(*p_66_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->S00_AXI_awcache.bind(*p_66_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->S00_AXI_awprot.bind(*p_66_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->S00_AXI_awqos.bind(*p_66_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_66_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_66->S00_AXI_awuser.bind(*p_66_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_awvalid.bind(*p_66_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_awready.bind(*p_66_S00_AXI_awready);
        p_66_S00_AXI_awready->set_sv_netview_offsetfromdp(11964664);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_66_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_66->S00_AXI_wdata.bind(*p_66_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_66_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_66->S00_AXI_wstrb.bind(*p_66_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_wlast.bind(*p_66_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_66_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_66->S00_AXI_wuser.bind(*p_66_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_wvalid.bind(*p_66_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_wready.bind(*p_66_S00_AXI_wready);
        p_66_S00_AXI_wready->set_sv_netview_offsetfromdp(11965000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->S00_AXI_bid.bind(*p_66_S00_AXI_bid);
        p_66_S00_AXI_bid->set_sv_netview_offsetfromdp(11965056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->S00_AXI_bresp.bind(*p_66_S00_AXI_bresp);
        p_66_S00_AXI_bresp->set_sv_netview_offsetfromdp(11965112);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_66_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_66->S00_AXI_buser.bind(*p_66_S00_AXI_buser);
        p_66_S00_AXI_buser->set_sv_netview_offsetfromdp(11965168);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_bvalid.bind(*p_66_S00_AXI_bvalid);
        p_66_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11965224);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_bready.bind(*p_66_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->S00_AXI_arid.bind(*p_66_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_66_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_66->S00_AXI_araddr.bind(*p_66_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->S00_AXI_arlen.bind(*p_66_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->S00_AXI_arsize.bind(*p_66_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->S00_AXI_arburst.bind(*p_66_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->S00_AXI_arlock.bind(*p_66_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->S00_AXI_arcache.bind(*p_66_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->S00_AXI_arprot.bind(*p_66_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->S00_AXI_arqos.bind(*p_66_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_66_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_66->S00_AXI_aruser.bind(*p_66_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_arvalid.bind(*p_66_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_arready.bind(*p_66_S00_AXI_arready);
        p_66_S00_AXI_arready->set_sv_netview_offsetfromdp(11965952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->S00_AXI_rid.bind(*p_66_S00_AXI_rid);
        p_66_S00_AXI_rid->set_sv_netview_offsetfromdp(11966008);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_66_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_66->S00_AXI_rdata.bind(*p_66_S00_AXI_rdata);
        p_66_S00_AXI_rdata->set_sv_netview_offsetfromdp(11966064);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->S00_AXI_rresp.bind(*p_66_S00_AXI_rresp);
        p_66_S00_AXI_rresp->set_sv_netview_offsetfromdp(11966120);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_rlast.bind(*p_66_S00_AXI_rlast);
        p_66_S00_AXI_rlast->set_sv_netview_offsetfromdp(11966176);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_66_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_66->S00_AXI_ruser.bind(*p_66_S00_AXI_ruser);
        p_66_S00_AXI_ruser->set_sv_netview_offsetfromdp(11966232);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_rvalid.bind(*p_66_S00_AXI_rvalid);
        p_66_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11966288);
        xsim_sc_channel<0, bool > *p_66_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->S00_AXI_rready.bind(*p_66_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_66_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_66->M00_AXI_awaddr.bind(*p_66_M00_AXI_awaddr);
        p_66_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11966400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->M00_AXI_awlen.bind(*p_66_M00_AXI_awlen);
        p_66_M00_AXI_awlen->set_sv_netview_offsetfromdp(11966456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->M00_AXI_awsize.bind(*p_66_M00_AXI_awsize);
        p_66_M00_AXI_awsize->set_sv_netview_offsetfromdp(11966512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->M00_AXI_awburst.bind(*p_66_M00_AXI_awburst);
        p_66_M00_AXI_awburst->set_sv_netview_offsetfromdp(11966568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->M00_AXI_awlock.bind(*p_66_M00_AXI_awlock);
        p_66_M00_AXI_awlock->set_sv_netview_offsetfromdp(11966624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->M00_AXI_awcache.bind(*p_66_M00_AXI_awcache);
        p_66_M00_AXI_awcache->set_sv_netview_offsetfromdp(11966680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->M00_AXI_awprot.bind(*p_66_M00_AXI_awprot);
        p_66_M00_AXI_awprot->set_sv_netview_offsetfromdp(11966736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->M00_AXI_awqos.bind(*p_66_M00_AXI_awqos);
        p_66_M00_AXI_awqos->set_sv_netview_offsetfromdp(11966792);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_awvalid.bind(*p_66_M00_AXI_awvalid);
        p_66_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11966848);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_awready.bind(*p_66_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_66_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_66->M00_AXI_wdata.bind(*p_66_M00_AXI_wdata);
        p_66_M00_AXI_wdata->set_sv_netview_offsetfromdp(11966960);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_66_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_66->M00_AXI_wstrb.bind(*p_66_M00_AXI_wstrb);
        p_66_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11967016);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_wlast.bind(*p_66_M00_AXI_wlast);
        p_66_M00_AXI_wlast->set_sv_netview_offsetfromdp(11967072);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_wvalid.bind(*p_66_M00_AXI_wvalid);
        p_66_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11967128);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_wready.bind(*p_66_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->M00_AXI_bresp.bind(*p_66_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_bvalid.bind(*p_66_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_bready.bind(*p_66_M00_AXI_bready);
        p_66_M00_AXI_bready->set_sv_netview_offsetfromdp(11967352);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_66_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_66->M00_AXI_araddr.bind(*p_66_M00_AXI_araddr);
        p_66_M00_AXI_araddr->set_sv_netview_offsetfromdp(11967408);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_66_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_66->M00_AXI_arlen.bind(*p_66_M00_AXI_arlen);
        p_66_M00_AXI_arlen->set_sv_netview_offsetfromdp(11967464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->M00_AXI_arsize.bind(*p_66_M00_AXI_arsize);
        p_66_M00_AXI_arsize->set_sv_netview_offsetfromdp(11967520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->M00_AXI_arburst.bind(*p_66_M00_AXI_arburst);
        p_66_M00_AXI_arburst->set_sv_netview_offsetfromdp(11967576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_66_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_66->M00_AXI_arlock.bind(*p_66_M00_AXI_arlock);
        p_66_M00_AXI_arlock->set_sv_netview_offsetfromdp(11967632);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->M00_AXI_arcache.bind(*p_66_M00_AXI_arcache);
        p_66_M00_AXI_arcache->set_sv_netview_offsetfromdp(11967688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_66_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_66->M00_AXI_arprot.bind(*p_66_M00_AXI_arprot);
        p_66_M00_AXI_arprot->set_sv_netview_offsetfromdp(11967744);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_66_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_66->M00_AXI_arqos.bind(*p_66_M00_AXI_arqos);
        p_66_M00_AXI_arqos->set_sv_netview_offsetfromdp(11967800);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_arvalid.bind(*p_66_M00_AXI_arvalid);
        p_66_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11967856);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_arready.bind(*p_66_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_66_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_66->M00_AXI_rdata.bind(*p_66_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_66_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_66->M00_AXI_rresp.bind(*p_66_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_rlast.bind(*p_66_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_rvalid.bind(*p_66_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_66_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_66_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_66->M00_AXI_rready.bind(*p_66_M00_AXI_rready);
        p_66_M00_AXI_rready->set_sv_netview_offsetfromdp(11968192);
        sc_inst_67 = new bd_d216_interconnect_PLRAM_MEM04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem04");
        sc_inst_67->xsim_set_dbg_index(4768);
        xsim_sc_channel<0, bool > *p_67_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_67->aclk.bind(*p_67_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aclk);
        xsim_sc_channel<0, bool > *p_67_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_67->aresetn.bind(*p_67_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_67_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->S00_AXI_awid.bind(*p_67_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_67_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_67->S00_AXI_awaddr.bind(*p_67_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->S00_AXI_awlen.bind(*p_67_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->S00_AXI_awsize.bind(*p_67_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->S00_AXI_awburst.bind(*p_67_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->S00_AXI_awlock.bind(*p_67_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->S00_AXI_awcache.bind(*p_67_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->S00_AXI_awprot.bind(*p_67_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->S00_AXI_awqos.bind(*p_67_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_67_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_67->S00_AXI_awuser.bind(*p_67_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_awvalid.bind(*p_67_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_awready.bind(*p_67_S00_AXI_awready);
        p_67_S00_AXI_awready->set_sv_netview_offsetfromdp(11969024);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_67_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_67->S00_AXI_wdata.bind(*p_67_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->S00_AXI_wstrb.bind(*p_67_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_wlast.bind(*p_67_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_67_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_67->S00_AXI_wuser.bind(*p_67_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_wvalid.bind(*p_67_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_wready.bind(*p_67_S00_AXI_wready);
        p_67_S00_AXI_wready->set_sv_netview_offsetfromdp(11969360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->S00_AXI_bid.bind(*p_67_S00_AXI_bid);
        p_67_S00_AXI_bid->set_sv_netview_offsetfromdp(11969416);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->S00_AXI_bresp.bind(*p_67_S00_AXI_bresp);
        p_67_S00_AXI_bresp->set_sv_netview_offsetfromdp(11969472);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_67_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_67->S00_AXI_buser.bind(*p_67_S00_AXI_buser);
        p_67_S00_AXI_buser->set_sv_netview_offsetfromdp(11969528);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_bvalid.bind(*p_67_S00_AXI_bvalid);
        p_67_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11969584);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_bready.bind(*p_67_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->S00_AXI_arid.bind(*p_67_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_67_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_67->S00_AXI_araddr.bind(*p_67_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->S00_AXI_arlen.bind(*p_67_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->S00_AXI_arsize.bind(*p_67_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->S00_AXI_arburst.bind(*p_67_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->S00_AXI_arlock.bind(*p_67_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->S00_AXI_arcache.bind(*p_67_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->S00_AXI_arprot.bind(*p_67_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->S00_AXI_arqos.bind(*p_67_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_67_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_67->S00_AXI_aruser.bind(*p_67_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_arvalid.bind(*p_67_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_arready.bind(*p_67_S00_AXI_arready);
        p_67_S00_AXI_arready->set_sv_netview_offsetfromdp(11970312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->S00_AXI_rid.bind(*p_67_S00_AXI_rid);
        p_67_S00_AXI_rid->set_sv_netview_offsetfromdp(11970368);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_67_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_67->S00_AXI_rdata.bind(*p_67_S00_AXI_rdata);
        p_67_S00_AXI_rdata->set_sv_netview_offsetfromdp(11970424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->S00_AXI_rresp.bind(*p_67_S00_AXI_rresp);
        p_67_S00_AXI_rresp->set_sv_netview_offsetfromdp(11970480);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_rlast.bind(*p_67_S00_AXI_rlast);
        p_67_S00_AXI_rlast->set_sv_netview_offsetfromdp(11970536);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_67_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_67->S00_AXI_ruser.bind(*p_67_S00_AXI_ruser);
        p_67_S00_AXI_ruser->set_sv_netview_offsetfromdp(11970592);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_rvalid.bind(*p_67_S00_AXI_rvalid);
        p_67_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11970648);
        xsim_sc_channel<0, bool > *p_67_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_67->S00_AXI_rready.bind(*p_67_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_67_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_67->M00_AXI_awaddr.bind(*p_67_M00_AXI_awaddr);
        p_67_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11970760);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->M00_AXI_awlen.bind(*p_67_M00_AXI_awlen);
        p_67_M00_AXI_awlen->set_sv_netview_offsetfromdp(11970816);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->M00_AXI_awsize.bind(*p_67_M00_AXI_awsize);
        p_67_M00_AXI_awsize->set_sv_netview_offsetfromdp(11970872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->M00_AXI_awburst.bind(*p_67_M00_AXI_awburst);
        p_67_M00_AXI_awburst->set_sv_netview_offsetfromdp(11970928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->M00_AXI_awlock.bind(*p_67_M00_AXI_awlock);
        p_67_M00_AXI_awlock->set_sv_netview_offsetfromdp(11970984);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->M00_AXI_awcache.bind(*p_67_M00_AXI_awcache);
        p_67_M00_AXI_awcache->set_sv_netview_offsetfromdp(11971040);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->M00_AXI_awprot.bind(*p_67_M00_AXI_awprot);
        p_67_M00_AXI_awprot->set_sv_netview_offsetfromdp(11971096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->M00_AXI_awqos.bind(*p_67_M00_AXI_awqos);
        p_67_M00_AXI_awqos->set_sv_netview_offsetfromdp(11971152);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_awvalid.bind(*p_67_M00_AXI_awvalid);
        p_67_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11971208);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_awready.bind(*p_67_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_67_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_67->M00_AXI_wdata.bind(*p_67_M00_AXI_wdata);
        p_67_M00_AXI_wdata->set_sv_netview_offsetfromdp(11971320);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_67_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_67->M00_AXI_wstrb.bind(*p_67_M00_AXI_wstrb);
        p_67_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11971376);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_wlast.bind(*p_67_M00_AXI_wlast);
        p_67_M00_AXI_wlast->set_sv_netview_offsetfromdp(11971432);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_wvalid.bind(*p_67_M00_AXI_wvalid);
        p_67_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11971488);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_wready.bind(*p_67_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->M00_AXI_bresp.bind(*p_67_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_bvalid.bind(*p_67_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_bready.bind(*p_67_M00_AXI_bready);
        p_67_M00_AXI_bready->set_sv_netview_offsetfromdp(11971712);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_67_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_67->M00_AXI_araddr.bind(*p_67_M00_AXI_araddr);
        p_67_M00_AXI_araddr->set_sv_netview_offsetfromdp(11971768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_67_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_67->M00_AXI_arlen.bind(*p_67_M00_AXI_arlen);
        p_67_M00_AXI_arlen->set_sv_netview_offsetfromdp(11971824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->M00_AXI_arsize.bind(*p_67_M00_AXI_arsize);
        p_67_M00_AXI_arsize->set_sv_netview_offsetfromdp(11971880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->M00_AXI_arburst.bind(*p_67_M00_AXI_arburst);
        p_67_M00_AXI_arburst->set_sv_netview_offsetfromdp(11971936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_67_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_67->M00_AXI_arlock.bind(*p_67_M00_AXI_arlock);
        p_67_M00_AXI_arlock->set_sv_netview_offsetfromdp(11971992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->M00_AXI_arcache.bind(*p_67_M00_AXI_arcache);
        p_67_M00_AXI_arcache->set_sv_netview_offsetfromdp(11972048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_67_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_67->M00_AXI_arprot.bind(*p_67_M00_AXI_arprot);
        p_67_M00_AXI_arprot->set_sv_netview_offsetfromdp(11972104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_67_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_67->M00_AXI_arqos.bind(*p_67_M00_AXI_arqos);
        p_67_M00_AXI_arqos->set_sv_netview_offsetfromdp(11972160);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_arvalid.bind(*p_67_M00_AXI_arvalid);
        p_67_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11972216);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_arready.bind(*p_67_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_67_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_67->M00_AXI_rdata.bind(*p_67_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_67_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_67->M00_AXI_rresp.bind(*p_67_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_rlast.bind(*p_67_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_rvalid.bind(*p_67_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_67_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_67_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_67->M00_AXI_rready.bind(*p_67_M00_AXI_rready);
        p_67_M00_AXI_rready->set_sv_netview_offsetfromdp(11972552);
        sc_inst_68 = new bd_d216_interconnect_PLRAM_MEM05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_plram_mem05");
        sc_inst_68->xsim_set_dbg_index(4769);
        xsim_sc_channel<0, bool > *p_68_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_68->aclk.bind(*p_68_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_68_aclk);
        xsim_sc_channel<0, bool > *p_68_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_68->aresetn.bind(*p_68_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_68_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->S00_AXI_awid.bind(*p_68_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_68_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_68->S00_AXI_awaddr.bind(*p_68_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->S00_AXI_awlen.bind(*p_68_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->S00_AXI_awsize.bind(*p_68_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->S00_AXI_awburst.bind(*p_68_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->S00_AXI_awlock.bind(*p_68_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->S00_AXI_awcache.bind(*p_68_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->S00_AXI_awprot.bind(*p_68_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->S00_AXI_awqos.bind(*p_68_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_68_S00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_68->S00_AXI_awuser.bind(*p_68_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_awvalid.bind(*p_68_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_awready.bind(*p_68_S00_AXI_awready);
        p_68_S00_AXI_awready->set_sv_netview_offsetfromdp(11973384);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_68_S00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_68->S00_AXI_wdata.bind(*p_68_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_S00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->S00_AXI_wstrb.bind(*p_68_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_wlast.bind(*p_68_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_wlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_68_S00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_68->S00_AXI_wuser.bind(*p_68_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_wvalid.bind(*p_68_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_wready.bind(*p_68_S00_AXI_wready);
        p_68_S00_AXI_wready->set_sv_netview_offsetfromdp(11973720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->S00_AXI_bid.bind(*p_68_S00_AXI_bid);
        p_68_S00_AXI_bid->set_sv_netview_offsetfromdp(11973776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->S00_AXI_bresp.bind(*p_68_S00_AXI_bresp);
        p_68_S00_AXI_bresp->set_sv_netview_offsetfromdp(11973832);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_68_S00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_68->S00_AXI_buser.bind(*p_68_S00_AXI_buser);
        p_68_S00_AXI_buser->set_sv_netview_offsetfromdp(11973888);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_bvalid.bind(*p_68_S00_AXI_bvalid);
        p_68_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11973944);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_bready.bind(*p_68_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->S00_AXI_arid.bind(*p_68_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arid);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_68_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_68->S00_AXI_araddr.bind(*p_68_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->S00_AXI_arlen.bind(*p_68_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->S00_AXI_arsize.bind(*p_68_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->S00_AXI_arburst.bind(*p_68_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->S00_AXI_arlock.bind(*p_68_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->S00_AXI_arcache.bind(*p_68_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->S00_AXI_arprot.bind(*p_68_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->S00_AXI_arqos.bind(*p_68_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arqos);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_68_S00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_68->S00_AXI_aruser.bind(*p_68_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_arvalid.bind(*p_68_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_arready.bind(*p_68_S00_AXI_arready);
        p_68_S00_AXI_arready->set_sv_netview_offsetfromdp(11974672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->S00_AXI_rid.bind(*p_68_S00_AXI_rid);
        p_68_S00_AXI_rid->set_sv_netview_offsetfromdp(11974728);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_68_S00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_68->S00_AXI_rdata.bind(*p_68_S00_AXI_rdata);
        p_68_S00_AXI_rdata->set_sv_netview_offsetfromdp(11974784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->S00_AXI_rresp.bind(*p_68_S00_AXI_rresp);
        p_68_S00_AXI_rresp->set_sv_netview_offsetfromdp(11974840);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_rlast.bind(*p_68_S00_AXI_rlast);
        p_68_S00_AXI_rlast->set_sv_netview_offsetfromdp(11974896);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_68_S00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_68->S00_AXI_ruser.bind(*p_68_S00_AXI_ruser);
        p_68_S00_AXI_ruser->set_sv_netview_offsetfromdp(11974952);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_rvalid.bind(*p_68_S00_AXI_rvalid);
        p_68_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11975008);
        xsim_sc_channel<0, bool > *p_68_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->S00_AXI_rready.bind(*p_68_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_S00_AXI_rready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_68_M00_AXI_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_68->M00_AXI_awaddr.bind(*p_68_M00_AXI_awaddr);
        p_68_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11975120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->M00_AXI_awlen.bind(*p_68_M00_AXI_awlen);
        p_68_M00_AXI_awlen->set_sv_netview_offsetfromdp(11975176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->M00_AXI_awsize.bind(*p_68_M00_AXI_awsize);
        p_68_M00_AXI_awsize->set_sv_netview_offsetfromdp(11975232);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->M00_AXI_awburst.bind(*p_68_M00_AXI_awburst);
        p_68_M00_AXI_awburst->set_sv_netview_offsetfromdp(11975288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->M00_AXI_awlock.bind(*p_68_M00_AXI_awlock);
        p_68_M00_AXI_awlock->set_sv_netview_offsetfromdp(11975344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->M00_AXI_awcache.bind(*p_68_M00_AXI_awcache);
        p_68_M00_AXI_awcache->set_sv_netview_offsetfromdp(11975400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->M00_AXI_awprot.bind(*p_68_M00_AXI_awprot);
        p_68_M00_AXI_awprot->set_sv_netview_offsetfromdp(11975456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->M00_AXI_awqos.bind(*p_68_M00_AXI_awqos);
        p_68_M00_AXI_awqos->set_sv_netview_offsetfromdp(11975512);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_awvalid.bind(*p_68_M00_AXI_awvalid);
        p_68_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11975568);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_awready.bind(*p_68_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_68_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_68->M00_AXI_wdata.bind(*p_68_M00_AXI_wdata);
        p_68_M00_AXI_wdata->set_sv_netview_offsetfromdp(11975680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_68_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_68->M00_AXI_wstrb.bind(*p_68_M00_AXI_wstrb);
        p_68_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11975736);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_wlast.bind(*p_68_M00_AXI_wlast);
        p_68_M00_AXI_wlast->set_sv_netview_offsetfromdp(11975792);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_wvalid.bind(*p_68_M00_AXI_wvalid);
        p_68_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11975848);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_wready.bind(*p_68_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->M00_AXI_bresp.bind(*p_68_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_bvalid.bind(*p_68_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_bready.bind(*p_68_M00_AXI_bready);
        p_68_M00_AXI_bready->set_sv_netview_offsetfromdp(11976072);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_68_M00_AXI_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_68->M00_AXI_araddr.bind(*p_68_M00_AXI_araddr);
        p_68_M00_AXI_araddr->set_sv_netview_offsetfromdp(11976128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_68_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_68->M00_AXI_arlen.bind(*p_68_M00_AXI_arlen);
        p_68_M00_AXI_arlen->set_sv_netview_offsetfromdp(11976184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->M00_AXI_arsize.bind(*p_68_M00_AXI_arsize);
        p_68_M00_AXI_arsize->set_sv_netview_offsetfromdp(11976240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->M00_AXI_arburst.bind(*p_68_M00_AXI_arburst);
        p_68_M00_AXI_arburst->set_sv_netview_offsetfromdp(11976296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_68_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_68->M00_AXI_arlock.bind(*p_68_M00_AXI_arlock);
        p_68_M00_AXI_arlock->set_sv_netview_offsetfromdp(11976352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->M00_AXI_arcache.bind(*p_68_M00_AXI_arcache);
        p_68_M00_AXI_arcache->set_sv_netview_offsetfromdp(11976408);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_68_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_68->M00_AXI_arprot.bind(*p_68_M00_AXI_arprot);
        p_68_M00_AXI_arprot->set_sv_netview_offsetfromdp(11976464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_68_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_68->M00_AXI_arqos.bind(*p_68_M00_AXI_arqos);
        p_68_M00_AXI_arqos->set_sv_netview_offsetfromdp(11976520);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_arvalid.bind(*p_68_M00_AXI_arvalid);
        p_68_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11976576);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_arready.bind(*p_68_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_68_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_68->M00_AXI_rdata.bind(*p_68_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_68_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_68->M00_AXI_rresp.bind(*p_68_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_rlast.bind(*p_68_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_rvalid.bind(*p_68_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_68_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_68_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_68->M00_AXI_rready.bind(*p_68_M00_AXI_rready);
        p_68_M00_AXI_rready->set_sv_netview_offsetfromdp(11976912);
        sc_inst_69 = new bd_d216_interconnect_S00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.interconnect_s00_axi");
        sc_inst_69->xsim_set_dbg_index(4770);
        xsim_sc_channel<0, bool > *p_69_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_69->aclk.bind(*p_69_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_69_aclk);
        xsim_sc_channel<0, bool > *p_69_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_69->aresetn.bind(*p_69_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_69_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_S00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->S00_AXI_awaddr.bind(*p_69_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->S00_AXI_awlen.bind(*p_69_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->S00_AXI_awsize.bind(*p_69_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->S00_AXI_awburst.bind(*p_69_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->S00_AXI_awlock.bind(*p_69_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->S00_AXI_awcache.bind(*p_69_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->S00_AXI_awprot.bind(*p_69_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->S00_AXI_awqos.bind(*p_69_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_awvalid.bind(*p_69_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_awready.bind(*p_69_S00_AXI_awready);
        p_69_S00_AXI_awready->set_sv_netview_offsetfromdp(11977632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->S00_AXI_wdata.bind(*p_69_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->S00_AXI_wstrb.bind(*p_69_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_wlast.bind(*p_69_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_wvalid.bind(*p_69_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_wready.bind(*p_69_S00_AXI_wready);
        p_69_S00_AXI_wready->set_sv_netview_offsetfromdp(11977912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->S00_AXI_bresp.bind(*p_69_S00_AXI_bresp);
        p_69_S00_AXI_bresp->set_sv_netview_offsetfromdp(11977968);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_bvalid.bind(*p_69_S00_AXI_bvalid);
        p_69_S00_AXI_bvalid->set_sv_netview_offsetfromdp(11978024);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_bready.bind(*p_69_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_S00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->S00_AXI_araddr.bind(*p_69_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->S00_AXI_arlen.bind(*p_69_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->S00_AXI_arsize.bind(*p_69_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->S00_AXI_arburst.bind(*p_69_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->S00_AXI_arlock.bind(*p_69_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->S00_AXI_arcache.bind(*p_69_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->S00_AXI_arprot.bind(*p_69_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->S00_AXI_arqos.bind(*p_69_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_arvalid.bind(*p_69_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_arready.bind(*p_69_S00_AXI_arready);
        p_69_S00_AXI_arready->set_sv_netview_offsetfromdp(11978640);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_69_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_69->S00_AXI_rdata.bind(*p_69_S00_AXI_rdata);
        p_69_S00_AXI_rdata->set_sv_netview_offsetfromdp(11978696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->S00_AXI_rresp.bind(*p_69_S00_AXI_rresp);
        p_69_S00_AXI_rresp->set_sv_netview_offsetfromdp(11978752);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_rlast.bind(*p_69_S00_AXI_rlast);
        p_69_S00_AXI_rlast->set_sv_netview_offsetfromdp(11978808);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_rvalid.bind(*p_69_S00_AXI_rvalid);
        p_69_S00_AXI_rvalid->set_sv_netview_offsetfromdp(11978864);
        xsim_sc_channel<0, bool > *p_69_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->S00_AXI_rready.bind(*p_69_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M00_AXI_awid.bind(*p_69_M00_AXI_awid);
        p_69_M00_AXI_awid->set_sv_netview_offsetfromdp(11978976);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M00_AXI_awaddr.bind(*p_69_M00_AXI_awaddr);
        p_69_M00_AXI_awaddr->set_sv_netview_offsetfromdp(11979032);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M00_AXI_awlen.bind(*p_69_M00_AXI_awlen);
        p_69_M00_AXI_awlen->set_sv_netview_offsetfromdp(11979088);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M00_AXI_awsize.bind(*p_69_M00_AXI_awsize);
        p_69_M00_AXI_awsize->set_sv_netview_offsetfromdp(11979144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M00_AXI_awburst.bind(*p_69_M00_AXI_awburst);
        p_69_M00_AXI_awburst->set_sv_netview_offsetfromdp(11979200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M00_AXI_awlock.bind(*p_69_M00_AXI_awlock);
        p_69_M00_AXI_awlock->set_sv_netview_offsetfromdp(11979256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M00_AXI_awcache.bind(*p_69_M00_AXI_awcache);
        p_69_M00_AXI_awcache->set_sv_netview_offsetfromdp(11979312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M00_AXI_awprot.bind(*p_69_M00_AXI_awprot);
        p_69_M00_AXI_awprot->set_sv_netview_offsetfromdp(11979368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M00_AXI_awqos.bind(*p_69_M00_AXI_awqos);
        p_69_M00_AXI_awqos->set_sv_netview_offsetfromdp(11979424);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M00_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M00_AXI_awuser.bind(*p_69_M00_AXI_awuser);
        p_69_M00_AXI_awuser->set_sv_netview_offsetfromdp(11979480);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_awvalid.bind(*p_69_M00_AXI_awvalid);
        p_69_M00_AXI_awvalid->set_sv_netview_offsetfromdp(11979536);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_awready.bind(*p_69_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M00_AXI_wdata.bind(*p_69_M00_AXI_wdata);
        p_69_M00_AXI_wdata->set_sv_netview_offsetfromdp(11979648);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M00_AXI_wstrb.bind(*p_69_M00_AXI_wstrb);
        p_69_M00_AXI_wstrb->set_sv_netview_offsetfromdp(11979704);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_wlast.bind(*p_69_M00_AXI_wlast);
        p_69_M00_AXI_wlast->set_sv_netview_offsetfromdp(11979760);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M00_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M00_AXI_wuser.bind(*p_69_M00_AXI_wuser);
        p_69_M00_AXI_wuser->set_sv_netview_offsetfromdp(11979816);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_wvalid.bind(*p_69_M00_AXI_wvalid);
        p_69_M00_AXI_wvalid->set_sv_netview_offsetfromdp(11979872);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_wready.bind(*p_69_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M00_AXI_bid.bind(*p_69_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M00_AXI_bresp.bind(*p_69_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M00_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M00_AXI_buser.bind(*p_69_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_bvalid.bind(*p_69_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_bready.bind(*p_69_M00_AXI_bready);
        p_69_M00_AXI_bready->set_sv_netview_offsetfromdp(11980208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M00_AXI_arid.bind(*p_69_M00_AXI_arid);
        p_69_M00_AXI_arid->set_sv_netview_offsetfromdp(11980264);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M00_AXI_araddr.bind(*p_69_M00_AXI_araddr);
        p_69_M00_AXI_araddr->set_sv_netview_offsetfromdp(11980320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M00_AXI_arlen.bind(*p_69_M00_AXI_arlen);
        p_69_M00_AXI_arlen->set_sv_netview_offsetfromdp(11980376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M00_AXI_arsize.bind(*p_69_M00_AXI_arsize);
        p_69_M00_AXI_arsize->set_sv_netview_offsetfromdp(11980432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M00_AXI_arburst.bind(*p_69_M00_AXI_arburst);
        p_69_M00_AXI_arburst->set_sv_netview_offsetfromdp(11980488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M00_AXI_arlock.bind(*p_69_M00_AXI_arlock);
        p_69_M00_AXI_arlock->set_sv_netview_offsetfromdp(11980544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M00_AXI_arcache.bind(*p_69_M00_AXI_arcache);
        p_69_M00_AXI_arcache->set_sv_netview_offsetfromdp(11980600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M00_AXI_arprot.bind(*p_69_M00_AXI_arprot);
        p_69_M00_AXI_arprot->set_sv_netview_offsetfromdp(11980656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M00_AXI_arqos.bind(*p_69_M00_AXI_arqos);
        p_69_M00_AXI_arqos->set_sv_netview_offsetfromdp(11980712);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M00_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M00_AXI_aruser.bind(*p_69_M00_AXI_aruser);
        p_69_M00_AXI_aruser->set_sv_netview_offsetfromdp(11980768);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_arvalid.bind(*p_69_M00_AXI_arvalid);
        p_69_M00_AXI_arvalid->set_sv_netview_offsetfromdp(11980824);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_arready.bind(*p_69_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M00_AXI_rid.bind(*p_69_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M00_AXI_rdata.bind(*p_69_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M00_AXI_rresp.bind(*p_69_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_rlast.bind(*p_69_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M00_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M00_AXI_ruser.bind(*p_69_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_rvalid.bind(*p_69_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M00_AXI_rready.bind(*p_69_M00_AXI_rready);
        p_69_M00_AXI_rready->set_sv_netview_offsetfromdp(11981272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M01_AXI_awid.bind(*p_69_M01_AXI_awid);
        p_69_M01_AXI_awid->set_sv_netview_offsetfromdp(11981328);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M01_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M01_AXI_awaddr.bind(*p_69_M01_AXI_awaddr);
        p_69_M01_AXI_awaddr->set_sv_netview_offsetfromdp(11981384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M01_AXI_awlen.bind(*p_69_M01_AXI_awlen);
        p_69_M01_AXI_awlen->set_sv_netview_offsetfromdp(11981440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M01_AXI_awsize.bind(*p_69_M01_AXI_awsize);
        p_69_M01_AXI_awsize->set_sv_netview_offsetfromdp(11981496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M01_AXI_awburst.bind(*p_69_M01_AXI_awburst);
        p_69_M01_AXI_awburst->set_sv_netview_offsetfromdp(11981552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M01_AXI_awlock.bind(*p_69_M01_AXI_awlock);
        p_69_M01_AXI_awlock->set_sv_netview_offsetfromdp(11981608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M01_AXI_awcache.bind(*p_69_M01_AXI_awcache);
        p_69_M01_AXI_awcache->set_sv_netview_offsetfromdp(11981664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M01_AXI_awprot.bind(*p_69_M01_AXI_awprot);
        p_69_M01_AXI_awprot->set_sv_netview_offsetfromdp(11981720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M01_AXI_awqos.bind(*p_69_M01_AXI_awqos);
        p_69_M01_AXI_awqos->set_sv_netview_offsetfromdp(11981776);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M01_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M01_AXI_awuser.bind(*p_69_M01_AXI_awuser);
        p_69_M01_AXI_awuser->set_sv_netview_offsetfromdp(11981832);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_awvalid.bind(*p_69_M01_AXI_awvalid);
        p_69_M01_AXI_awvalid->set_sv_netview_offsetfromdp(11981888);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_awready.bind(*p_69_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M01_AXI_wdata.bind(*p_69_M01_AXI_wdata);
        p_69_M01_AXI_wdata->set_sv_netview_offsetfromdp(11982000);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M01_AXI_wstrb.bind(*p_69_M01_AXI_wstrb);
        p_69_M01_AXI_wstrb->set_sv_netview_offsetfromdp(11982056);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_wlast.bind(*p_69_M01_AXI_wlast);
        p_69_M01_AXI_wlast->set_sv_netview_offsetfromdp(11982112);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M01_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M01_AXI_wuser.bind(*p_69_M01_AXI_wuser);
        p_69_M01_AXI_wuser->set_sv_netview_offsetfromdp(11982168);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_wvalid.bind(*p_69_M01_AXI_wvalid);
        p_69_M01_AXI_wvalid->set_sv_netview_offsetfromdp(11982224);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_wready.bind(*p_69_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M01_AXI_bid.bind(*p_69_M01_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M01_AXI_bresp.bind(*p_69_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M01_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M01_AXI_buser.bind(*p_69_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_bvalid.bind(*p_69_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_bready.bind(*p_69_M01_AXI_bready);
        p_69_M01_AXI_bready->set_sv_netview_offsetfromdp(11982560);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M01_AXI_arid.bind(*p_69_M01_AXI_arid);
        p_69_M01_AXI_arid->set_sv_netview_offsetfromdp(11982616);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M01_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M01_AXI_araddr.bind(*p_69_M01_AXI_araddr);
        p_69_M01_AXI_araddr->set_sv_netview_offsetfromdp(11982672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M01_AXI_arlen.bind(*p_69_M01_AXI_arlen);
        p_69_M01_AXI_arlen->set_sv_netview_offsetfromdp(11982728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M01_AXI_arsize.bind(*p_69_M01_AXI_arsize);
        p_69_M01_AXI_arsize->set_sv_netview_offsetfromdp(11982784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M01_AXI_arburst.bind(*p_69_M01_AXI_arburst);
        p_69_M01_AXI_arburst->set_sv_netview_offsetfromdp(11982840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M01_AXI_arlock.bind(*p_69_M01_AXI_arlock);
        p_69_M01_AXI_arlock->set_sv_netview_offsetfromdp(11982896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M01_AXI_arcache.bind(*p_69_M01_AXI_arcache);
        p_69_M01_AXI_arcache->set_sv_netview_offsetfromdp(11982952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M01_AXI_arprot.bind(*p_69_M01_AXI_arprot);
        p_69_M01_AXI_arprot->set_sv_netview_offsetfromdp(11983008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M01_AXI_arqos.bind(*p_69_M01_AXI_arqos);
        p_69_M01_AXI_arqos->set_sv_netview_offsetfromdp(11983064);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M01_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M01_AXI_aruser.bind(*p_69_M01_AXI_aruser);
        p_69_M01_AXI_aruser->set_sv_netview_offsetfromdp(11983120);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_arvalid.bind(*p_69_M01_AXI_arvalid);
        p_69_M01_AXI_arvalid->set_sv_netview_offsetfromdp(11983176);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_arready.bind(*p_69_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M01_AXI_rid.bind(*p_69_M01_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M01_AXI_rdata.bind(*p_69_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M01_AXI_rresp.bind(*p_69_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_rlast.bind(*p_69_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M01_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M01_AXI_ruser.bind(*p_69_M01_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_rvalid.bind(*p_69_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M01_AXI_rready.bind(*p_69_M01_AXI_rready);
        p_69_M01_AXI_rready->set_sv_netview_offsetfromdp(11983624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M02_AXI_awid.bind(*p_69_M02_AXI_awid);
        p_69_M02_AXI_awid->set_sv_netview_offsetfromdp(11983680);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M02_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M02_AXI_awaddr.bind(*p_69_M02_AXI_awaddr);
        p_69_M02_AXI_awaddr->set_sv_netview_offsetfromdp(11983736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M02_AXI_awlen.bind(*p_69_M02_AXI_awlen);
        p_69_M02_AXI_awlen->set_sv_netview_offsetfromdp(11983792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M02_AXI_awsize.bind(*p_69_M02_AXI_awsize);
        p_69_M02_AXI_awsize->set_sv_netview_offsetfromdp(11983848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M02_AXI_awburst.bind(*p_69_M02_AXI_awburst);
        p_69_M02_AXI_awburst->set_sv_netview_offsetfromdp(11983904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M02_AXI_awlock.bind(*p_69_M02_AXI_awlock);
        p_69_M02_AXI_awlock->set_sv_netview_offsetfromdp(11983960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M02_AXI_awcache.bind(*p_69_M02_AXI_awcache);
        p_69_M02_AXI_awcache->set_sv_netview_offsetfromdp(11984016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M02_AXI_awprot.bind(*p_69_M02_AXI_awprot);
        p_69_M02_AXI_awprot->set_sv_netview_offsetfromdp(11984072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M02_AXI_awqos.bind(*p_69_M02_AXI_awqos);
        p_69_M02_AXI_awqos->set_sv_netview_offsetfromdp(11984128);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M02_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M02_AXI_awuser.bind(*p_69_M02_AXI_awuser);
        p_69_M02_AXI_awuser->set_sv_netview_offsetfromdp(11984184);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_awvalid.bind(*p_69_M02_AXI_awvalid);
        p_69_M02_AXI_awvalid->set_sv_netview_offsetfromdp(11984240);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_awready.bind(*p_69_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M02_AXI_wdata.bind(*p_69_M02_AXI_wdata);
        p_69_M02_AXI_wdata->set_sv_netview_offsetfromdp(11984352);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M02_AXI_wstrb.bind(*p_69_M02_AXI_wstrb);
        p_69_M02_AXI_wstrb->set_sv_netview_offsetfromdp(11984408);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_wlast.bind(*p_69_M02_AXI_wlast);
        p_69_M02_AXI_wlast->set_sv_netview_offsetfromdp(11984464);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M02_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M02_AXI_wuser.bind(*p_69_M02_AXI_wuser);
        p_69_M02_AXI_wuser->set_sv_netview_offsetfromdp(11984520);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_wvalid.bind(*p_69_M02_AXI_wvalid);
        p_69_M02_AXI_wvalid->set_sv_netview_offsetfromdp(11984576);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_wready.bind(*p_69_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M02_AXI_bid.bind(*p_69_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M02_AXI_bresp.bind(*p_69_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M02_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M02_AXI_buser.bind(*p_69_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_bvalid.bind(*p_69_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_bready.bind(*p_69_M02_AXI_bready);
        p_69_M02_AXI_bready->set_sv_netview_offsetfromdp(11984912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M02_AXI_arid.bind(*p_69_M02_AXI_arid);
        p_69_M02_AXI_arid->set_sv_netview_offsetfromdp(11984968);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M02_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M02_AXI_araddr.bind(*p_69_M02_AXI_araddr);
        p_69_M02_AXI_araddr->set_sv_netview_offsetfromdp(11985024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M02_AXI_arlen.bind(*p_69_M02_AXI_arlen);
        p_69_M02_AXI_arlen->set_sv_netview_offsetfromdp(11985080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M02_AXI_arsize.bind(*p_69_M02_AXI_arsize);
        p_69_M02_AXI_arsize->set_sv_netview_offsetfromdp(11985136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M02_AXI_arburst.bind(*p_69_M02_AXI_arburst);
        p_69_M02_AXI_arburst->set_sv_netview_offsetfromdp(11985192);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M02_AXI_arlock.bind(*p_69_M02_AXI_arlock);
        p_69_M02_AXI_arlock->set_sv_netview_offsetfromdp(11985248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M02_AXI_arcache.bind(*p_69_M02_AXI_arcache);
        p_69_M02_AXI_arcache->set_sv_netview_offsetfromdp(11985304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M02_AXI_arprot.bind(*p_69_M02_AXI_arprot);
        p_69_M02_AXI_arprot->set_sv_netview_offsetfromdp(11985360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M02_AXI_arqos.bind(*p_69_M02_AXI_arqos);
        p_69_M02_AXI_arqos->set_sv_netview_offsetfromdp(11985416);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M02_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M02_AXI_aruser.bind(*p_69_M02_AXI_aruser);
        p_69_M02_AXI_aruser->set_sv_netview_offsetfromdp(11985472);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_arvalid.bind(*p_69_M02_AXI_arvalid);
        p_69_M02_AXI_arvalid->set_sv_netview_offsetfromdp(11985528);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_arready.bind(*p_69_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M02_AXI_rid.bind(*p_69_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M02_AXI_rdata.bind(*p_69_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M02_AXI_rresp.bind(*p_69_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_rlast.bind(*p_69_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M02_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M02_AXI_ruser.bind(*p_69_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_rvalid.bind(*p_69_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M02_AXI_rready.bind(*p_69_M02_AXI_rready);
        p_69_M02_AXI_rready->set_sv_netview_offsetfromdp(11985976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M03_AXI_awid.bind(*p_69_M03_AXI_awid);
        p_69_M03_AXI_awid->set_sv_netview_offsetfromdp(11986032);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M03_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M03_AXI_awaddr.bind(*p_69_M03_AXI_awaddr);
        p_69_M03_AXI_awaddr->set_sv_netview_offsetfromdp(11986088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M03_AXI_awlen.bind(*p_69_M03_AXI_awlen);
        p_69_M03_AXI_awlen->set_sv_netview_offsetfromdp(11986144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M03_AXI_awsize.bind(*p_69_M03_AXI_awsize);
        p_69_M03_AXI_awsize->set_sv_netview_offsetfromdp(11986200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M03_AXI_awburst.bind(*p_69_M03_AXI_awburst);
        p_69_M03_AXI_awburst->set_sv_netview_offsetfromdp(11986256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M03_AXI_awlock.bind(*p_69_M03_AXI_awlock);
        p_69_M03_AXI_awlock->set_sv_netview_offsetfromdp(11986312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M03_AXI_awcache.bind(*p_69_M03_AXI_awcache);
        p_69_M03_AXI_awcache->set_sv_netview_offsetfromdp(11986368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M03_AXI_awprot.bind(*p_69_M03_AXI_awprot);
        p_69_M03_AXI_awprot->set_sv_netview_offsetfromdp(11986424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M03_AXI_awqos.bind(*p_69_M03_AXI_awqos);
        p_69_M03_AXI_awqos->set_sv_netview_offsetfromdp(11986480);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M03_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M03_AXI_awuser.bind(*p_69_M03_AXI_awuser);
        p_69_M03_AXI_awuser->set_sv_netview_offsetfromdp(11986536);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_awvalid.bind(*p_69_M03_AXI_awvalid);
        p_69_M03_AXI_awvalid->set_sv_netview_offsetfromdp(11986592);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_awready.bind(*p_69_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M03_AXI_wdata.bind(*p_69_M03_AXI_wdata);
        p_69_M03_AXI_wdata->set_sv_netview_offsetfromdp(11986704);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M03_AXI_wstrb.bind(*p_69_M03_AXI_wstrb);
        p_69_M03_AXI_wstrb->set_sv_netview_offsetfromdp(11986760);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_wlast.bind(*p_69_M03_AXI_wlast);
        p_69_M03_AXI_wlast->set_sv_netview_offsetfromdp(11986816);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M03_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M03_AXI_wuser.bind(*p_69_M03_AXI_wuser);
        p_69_M03_AXI_wuser->set_sv_netview_offsetfromdp(11986872);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_wvalid.bind(*p_69_M03_AXI_wvalid);
        p_69_M03_AXI_wvalid->set_sv_netview_offsetfromdp(11986928);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_wready.bind(*p_69_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M03_AXI_bid.bind(*p_69_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M03_AXI_bresp.bind(*p_69_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M03_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M03_AXI_buser.bind(*p_69_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_bvalid.bind(*p_69_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_bready.bind(*p_69_M03_AXI_bready);
        p_69_M03_AXI_bready->set_sv_netview_offsetfromdp(11987264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M03_AXI_arid.bind(*p_69_M03_AXI_arid);
        p_69_M03_AXI_arid->set_sv_netview_offsetfromdp(11987320);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M03_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M03_AXI_araddr.bind(*p_69_M03_AXI_araddr);
        p_69_M03_AXI_araddr->set_sv_netview_offsetfromdp(11987376);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M03_AXI_arlen.bind(*p_69_M03_AXI_arlen);
        p_69_M03_AXI_arlen->set_sv_netview_offsetfromdp(11987432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M03_AXI_arsize.bind(*p_69_M03_AXI_arsize);
        p_69_M03_AXI_arsize->set_sv_netview_offsetfromdp(11987488);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M03_AXI_arburst.bind(*p_69_M03_AXI_arburst);
        p_69_M03_AXI_arburst->set_sv_netview_offsetfromdp(11987544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M03_AXI_arlock.bind(*p_69_M03_AXI_arlock);
        p_69_M03_AXI_arlock->set_sv_netview_offsetfromdp(11987600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M03_AXI_arcache.bind(*p_69_M03_AXI_arcache);
        p_69_M03_AXI_arcache->set_sv_netview_offsetfromdp(11987656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M03_AXI_arprot.bind(*p_69_M03_AXI_arprot);
        p_69_M03_AXI_arprot->set_sv_netview_offsetfromdp(11987712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M03_AXI_arqos.bind(*p_69_M03_AXI_arqos);
        p_69_M03_AXI_arqos->set_sv_netview_offsetfromdp(11987768);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M03_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M03_AXI_aruser.bind(*p_69_M03_AXI_aruser);
        p_69_M03_AXI_aruser->set_sv_netview_offsetfromdp(11987824);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_arvalid.bind(*p_69_M03_AXI_arvalid);
        p_69_M03_AXI_arvalid->set_sv_netview_offsetfromdp(11987880);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_arready.bind(*p_69_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M03_AXI_rid.bind(*p_69_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M03_AXI_rdata.bind(*p_69_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M03_AXI_rresp.bind(*p_69_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_rlast.bind(*p_69_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M03_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M03_AXI_ruser.bind(*p_69_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_rvalid.bind(*p_69_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M03_AXI_rready.bind(*p_69_M03_AXI_rready);
        p_69_M03_AXI_rready->set_sv_netview_offsetfromdp(11988328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M04_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M04_AXI_awid.bind(*p_69_M04_AXI_awid);
        p_69_M04_AXI_awid->set_sv_netview_offsetfromdp(11988384);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M04_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M04_AXI_awaddr.bind(*p_69_M04_AXI_awaddr);
        p_69_M04_AXI_awaddr->set_sv_netview_offsetfromdp(11988440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M04_AXI_awlen.bind(*p_69_M04_AXI_awlen);
        p_69_M04_AXI_awlen->set_sv_netview_offsetfromdp(11988496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M04_AXI_awsize.bind(*p_69_M04_AXI_awsize);
        p_69_M04_AXI_awsize->set_sv_netview_offsetfromdp(11988552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M04_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M04_AXI_awburst.bind(*p_69_M04_AXI_awburst);
        p_69_M04_AXI_awburst->set_sv_netview_offsetfromdp(11988608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M04_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M04_AXI_awlock.bind(*p_69_M04_AXI_awlock);
        p_69_M04_AXI_awlock->set_sv_netview_offsetfromdp(11988664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M04_AXI_awcache.bind(*p_69_M04_AXI_awcache);
        p_69_M04_AXI_awcache->set_sv_netview_offsetfromdp(11988720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M04_AXI_awprot.bind(*p_69_M04_AXI_awprot);
        p_69_M04_AXI_awprot->set_sv_netview_offsetfromdp(11988776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M04_AXI_awqos.bind(*p_69_M04_AXI_awqos);
        p_69_M04_AXI_awqos->set_sv_netview_offsetfromdp(11988832);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M04_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M04_AXI_awuser.bind(*p_69_M04_AXI_awuser);
        p_69_M04_AXI_awuser->set_sv_netview_offsetfromdp(11988888);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_awvalid.bind(*p_69_M04_AXI_awvalid);
        p_69_M04_AXI_awvalid->set_sv_netview_offsetfromdp(11988944);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_awready.bind(*p_69_M04_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M04_AXI_wdata.bind(*p_69_M04_AXI_wdata);
        p_69_M04_AXI_wdata->set_sv_netview_offsetfromdp(11989056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M04_AXI_wstrb.bind(*p_69_M04_AXI_wstrb);
        p_69_M04_AXI_wstrb->set_sv_netview_offsetfromdp(11989112);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_wlast.bind(*p_69_M04_AXI_wlast);
        p_69_M04_AXI_wlast->set_sv_netview_offsetfromdp(11989168);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M04_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M04_AXI_wuser.bind(*p_69_M04_AXI_wuser);
        p_69_M04_AXI_wuser->set_sv_netview_offsetfromdp(11989224);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_wvalid.bind(*p_69_M04_AXI_wvalid);
        p_69_M04_AXI_wvalid->set_sv_netview_offsetfromdp(11989280);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_wready.bind(*p_69_M04_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M04_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M04_AXI_bid.bind(*p_69_M04_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M04_AXI_bresp.bind(*p_69_M04_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M04_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M04_AXI_buser.bind(*p_69_M04_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_bvalid.bind(*p_69_M04_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_bready.bind(*p_69_M04_AXI_bready);
        p_69_M04_AXI_bready->set_sv_netview_offsetfromdp(11989616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M04_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M04_AXI_arid.bind(*p_69_M04_AXI_arid);
        p_69_M04_AXI_arid->set_sv_netview_offsetfromdp(11989672);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M04_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M04_AXI_araddr.bind(*p_69_M04_AXI_araddr);
        p_69_M04_AXI_araddr->set_sv_netview_offsetfromdp(11989728);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M04_AXI_arlen.bind(*p_69_M04_AXI_arlen);
        p_69_M04_AXI_arlen->set_sv_netview_offsetfromdp(11989784);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M04_AXI_arsize.bind(*p_69_M04_AXI_arsize);
        p_69_M04_AXI_arsize->set_sv_netview_offsetfromdp(11989840);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M04_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M04_AXI_arburst.bind(*p_69_M04_AXI_arburst);
        p_69_M04_AXI_arburst->set_sv_netview_offsetfromdp(11989896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M04_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M04_AXI_arlock.bind(*p_69_M04_AXI_arlock);
        p_69_M04_AXI_arlock->set_sv_netview_offsetfromdp(11989952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M04_AXI_arcache.bind(*p_69_M04_AXI_arcache);
        p_69_M04_AXI_arcache->set_sv_netview_offsetfromdp(11990008);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M04_AXI_arprot.bind(*p_69_M04_AXI_arprot);
        p_69_M04_AXI_arprot->set_sv_netview_offsetfromdp(11990064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M04_AXI_arqos.bind(*p_69_M04_AXI_arqos);
        p_69_M04_AXI_arqos->set_sv_netview_offsetfromdp(11990120);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M04_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M04_AXI_aruser.bind(*p_69_M04_AXI_aruser);
        p_69_M04_AXI_aruser->set_sv_netview_offsetfromdp(11990176);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_arvalid.bind(*p_69_M04_AXI_arvalid);
        p_69_M04_AXI_arvalid->set_sv_netview_offsetfromdp(11990232);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_arready.bind(*p_69_M04_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M04_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M04_AXI_rid.bind(*p_69_M04_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M04_AXI_rdata.bind(*p_69_M04_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M04_AXI_rresp.bind(*p_69_M04_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_rlast.bind(*p_69_M04_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M04_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M04_AXI_ruser.bind(*p_69_M04_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_rvalid.bind(*p_69_M04_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M04_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M04_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M04_AXI_rready.bind(*p_69_M04_AXI_rready);
        p_69_M04_AXI_rready->set_sv_netview_offsetfromdp(11990680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M05_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M05_AXI_awid.bind(*p_69_M05_AXI_awid);
        p_69_M05_AXI_awid->set_sv_netview_offsetfromdp(11990736);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M05_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M05_AXI_awaddr.bind(*p_69_M05_AXI_awaddr);
        p_69_M05_AXI_awaddr->set_sv_netview_offsetfromdp(11990792);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M05_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M05_AXI_awlen.bind(*p_69_M05_AXI_awlen);
        p_69_M05_AXI_awlen->set_sv_netview_offsetfromdp(11990848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M05_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M05_AXI_awsize.bind(*p_69_M05_AXI_awsize);
        p_69_M05_AXI_awsize->set_sv_netview_offsetfromdp(11990904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M05_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M05_AXI_awburst.bind(*p_69_M05_AXI_awburst);
        p_69_M05_AXI_awburst->set_sv_netview_offsetfromdp(11990960);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M05_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M05_AXI_awlock.bind(*p_69_M05_AXI_awlock);
        p_69_M05_AXI_awlock->set_sv_netview_offsetfromdp(11991016);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M05_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M05_AXI_awcache.bind(*p_69_M05_AXI_awcache);
        p_69_M05_AXI_awcache->set_sv_netview_offsetfromdp(11991072);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M05_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M05_AXI_awprot.bind(*p_69_M05_AXI_awprot);
        p_69_M05_AXI_awprot->set_sv_netview_offsetfromdp(11991128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M05_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M05_AXI_awqos.bind(*p_69_M05_AXI_awqos);
        p_69_M05_AXI_awqos->set_sv_netview_offsetfromdp(11991184);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M05_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M05_AXI_awuser.bind(*p_69_M05_AXI_awuser);
        p_69_M05_AXI_awuser->set_sv_netview_offsetfromdp(11991240);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_awvalid.bind(*p_69_M05_AXI_awvalid);
        p_69_M05_AXI_awvalid->set_sv_netview_offsetfromdp(11991296);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_awready.bind(*p_69_M05_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M05_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M05_AXI_wdata.bind(*p_69_M05_AXI_wdata);
        p_69_M05_AXI_wdata->set_sv_netview_offsetfromdp(11991408);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M05_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M05_AXI_wstrb.bind(*p_69_M05_AXI_wstrb);
        p_69_M05_AXI_wstrb->set_sv_netview_offsetfromdp(11991464);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_wlast.bind(*p_69_M05_AXI_wlast);
        p_69_M05_AXI_wlast->set_sv_netview_offsetfromdp(11991520);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M05_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M05_AXI_wuser.bind(*p_69_M05_AXI_wuser);
        p_69_M05_AXI_wuser->set_sv_netview_offsetfromdp(11991576);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_wvalid.bind(*p_69_M05_AXI_wvalid);
        p_69_M05_AXI_wvalid->set_sv_netview_offsetfromdp(11991632);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_wready.bind(*p_69_M05_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M05_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M05_AXI_bid.bind(*p_69_M05_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M05_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M05_AXI_bresp.bind(*p_69_M05_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M05_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M05_AXI_buser.bind(*p_69_M05_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_bvalid.bind(*p_69_M05_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_bready.bind(*p_69_M05_AXI_bready);
        p_69_M05_AXI_bready->set_sv_netview_offsetfromdp(11991968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M05_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M05_AXI_arid.bind(*p_69_M05_AXI_arid);
        p_69_M05_AXI_arid->set_sv_netview_offsetfromdp(11992024);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M05_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M05_AXI_araddr.bind(*p_69_M05_AXI_araddr);
        p_69_M05_AXI_araddr->set_sv_netview_offsetfromdp(11992080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M05_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M05_AXI_arlen.bind(*p_69_M05_AXI_arlen);
        p_69_M05_AXI_arlen->set_sv_netview_offsetfromdp(11992136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M05_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M05_AXI_arsize.bind(*p_69_M05_AXI_arsize);
        p_69_M05_AXI_arsize->set_sv_netview_offsetfromdp(11992192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M05_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M05_AXI_arburst.bind(*p_69_M05_AXI_arburst);
        p_69_M05_AXI_arburst->set_sv_netview_offsetfromdp(11992248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M05_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M05_AXI_arlock.bind(*p_69_M05_AXI_arlock);
        p_69_M05_AXI_arlock->set_sv_netview_offsetfromdp(11992304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M05_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M05_AXI_arcache.bind(*p_69_M05_AXI_arcache);
        p_69_M05_AXI_arcache->set_sv_netview_offsetfromdp(11992360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M05_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M05_AXI_arprot.bind(*p_69_M05_AXI_arprot);
        p_69_M05_AXI_arprot->set_sv_netview_offsetfromdp(11992416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M05_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M05_AXI_arqos.bind(*p_69_M05_AXI_arqos);
        p_69_M05_AXI_arqos->set_sv_netview_offsetfromdp(11992472);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M05_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M05_AXI_aruser.bind(*p_69_M05_AXI_aruser);
        p_69_M05_AXI_aruser->set_sv_netview_offsetfromdp(11992528);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_arvalid.bind(*p_69_M05_AXI_arvalid);
        p_69_M05_AXI_arvalid->set_sv_netview_offsetfromdp(11992584);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_arready.bind(*p_69_M05_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M05_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M05_AXI_rid.bind(*p_69_M05_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M05_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M05_AXI_rdata.bind(*p_69_M05_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M05_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M05_AXI_rresp.bind(*p_69_M05_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_rlast.bind(*p_69_M05_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M05_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M05_AXI_ruser.bind(*p_69_M05_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_rvalid.bind(*p_69_M05_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M05_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M05_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M05_AXI_rready.bind(*p_69_M05_AXI_rready);
        p_69_M05_AXI_rready->set_sv_netview_offsetfromdp(11993032);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M06_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M06_AXI_awid.bind(*p_69_M06_AXI_awid);
        p_69_M06_AXI_awid->set_sv_netview_offsetfromdp(11993088);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M06_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M06_AXI_awaddr.bind(*p_69_M06_AXI_awaddr);
        p_69_M06_AXI_awaddr->set_sv_netview_offsetfromdp(11993144);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M06_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M06_AXI_awlen.bind(*p_69_M06_AXI_awlen);
        p_69_M06_AXI_awlen->set_sv_netview_offsetfromdp(11993200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M06_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M06_AXI_awsize.bind(*p_69_M06_AXI_awsize);
        p_69_M06_AXI_awsize->set_sv_netview_offsetfromdp(11993256);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M06_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M06_AXI_awburst.bind(*p_69_M06_AXI_awburst);
        p_69_M06_AXI_awburst->set_sv_netview_offsetfromdp(11993312);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M06_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M06_AXI_awlock.bind(*p_69_M06_AXI_awlock);
        p_69_M06_AXI_awlock->set_sv_netview_offsetfromdp(11993368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M06_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M06_AXI_awcache.bind(*p_69_M06_AXI_awcache);
        p_69_M06_AXI_awcache->set_sv_netview_offsetfromdp(11993424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M06_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M06_AXI_awprot.bind(*p_69_M06_AXI_awprot);
        p_69_M06_AXI_awprot->set_sv_netview_offsetfromdp(11993480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M06_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M06_AXI_awqos.bind(*p_69_M06_AXI_awqos);
        p_69_M06_AXI_awqos->set_sv_netview_offsetfromdp(11993536);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M06_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M06_AXI_awuser.bind(*p_69_M06_AXI_awuser);
        p_69_M06_AXI_awuser->set_sv_netview_offsetfromdp(11993592);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_awvalid.bind(*p_69_M06_AXI_awvalid);
        p_69_M06_AXI_awvalid->set_sv_netview_offsetfromdp(11993648);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_awready.bind(*p_69_M06_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M06_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M06_AXI_wdata.bind(*p_69_M06_AXI_wdata);
        p_69_M06_AXI_wdata->set_sv_netview_offsetfromdp(11993760);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M06_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M06_AXI_wstrb.bind(*p_69_M06_AXI_wstrb);
        p_69_M06_AXI_wstrb->set_sv_netview_offsetfromdp(11993816);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_wlast.bind(*p_69_M06_AXI_wlast);
        p_69_M06_AXI_wlast->set_sv_netview_offsetfromdp(11993872);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M06_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M06_AXI_wuser.bind(*p_69_M06_AXI_wuser);
        p_69_M06_AXI_wuser->set_sv_netview_offsetfromdp(11993928);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_wvalid.bind(*p_69_M06_AXI_wvalid);
        p_69_M06_AXI_wvalid->set_sv_netview_offsetfromdp(11993984);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_wready.bind(*p_69_M06_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M06_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M06_AXI_bid.bind(*p_69_M06_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M06_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M06_AXI_bresp.bind(*p_69_M06_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M06_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M06_AXI_buser.bind(*p_69_M06_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_bvalid.bind(*p_69_M06_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_bready.bind(*p_69_M06_AXI_bready);
        p_69_M06_AXI_bready->set_sv_netview_offsetfromdp(11994320);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M06_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M06_AXI_arid.bind(*p_69_M06_AXI_arid);
        p_69_M06_AXI_arid->set_sv_netview_offsetfromdp(11994376);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M06_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M06_AXI_araddr.bind(*p_69_M06_AXI_araddr);
        p_69_M06_AXI_araddr->set_sv_netview_offsetfromdp(11994432);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M06_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M06_AXI_arlen.bind(*p_69_M06_AXI_arlen);
        p_69_M06_AXI_arlen->set_sv_netview_offsetfromdp(11994488);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M06_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M06_AXI_arsize.bind(*p_69_M06_AXI_arsize);
        p_69_M06_AXI_arsize->set_sv_netview_offsetfromdp(11994544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M06_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M06_AXI_arburst.bind(*p_69_M06_AXI_arburst);
        p_69_M06_AXI_arburst->set_sv_netview_offsetfromdp(11994600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M06_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M06_AXI_arlock.bind(*p_69_M06_AXI_arlock);
        p_69_M06_AXI_arlock->set_sv_netview_offsetfromdp(11994656);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M06_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M06_AXI_arcache.bind(*p_69_M06_AXI_arcache);
        p_69_M06_AXI_arcache->set_sv_netview_offsetfromdp(11994712);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M06_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M06_AXI_arprot.bind(*p_69_M06_AXI_arprot);
        p_69_M06_AXI_arprot->set_sv_netview_offsetfromdp(11994768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M06_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M06_AXI_arqos.bind(*p_69_M06_AXI_arqos);
        p_69_M06_AXI_arqos->set_sv_netview_offsetfromdp(11994824);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M06_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M06_AXI_aruser.bind(*p_69_M06_AXI_aruser);
        p_69_M06_AXI_aruser->set_sv_netview_offsetfromdp(11994880);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_arvalid.bind(*p_69_M06_AXI_arvalid);
        p_69_M06_AXI_arvalid->set_sv_netview_offsetfromdp(11994936);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_arready.bind(*p_69_M06_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M06_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M06_AXI_rid.bind(*p_69_M06_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M06_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M06_AXI_rdata.bind(*p_69_M06_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M06_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M06_AXI_rresp.bind(*p_69_M06_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_rlast.bind(*p_69_M06_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M06_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M06_AXI_ruser.bind(*p_69_M06_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_rvalid.bind(*p_69_M06_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M06_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M06_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M06_AXI_rready.bind(*p_69_M06_AXI_rready);
        p_69_M06_AXI_rready->set_sv_netview_offsetfromdp(11995384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M07_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M07_AXI_awid.bind(*p_69_M07_AXI_awid);
        p_69_M07_AXI_awid->set_sv_netview_offsetfromdp(11995440);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M07_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M07_AXI_awaddr.bind(*p_69_M07_AXI_awaddr);
        p_69_M07_AXI_awaddr->set_sv_netview_offsetfromdp(11995496);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M07_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M07_AXI_awlen.bind(*p_69_M07_AXI_awlen);
        p_69_M07_AXI_awlen->set_sv_netview_offsetfromdp(11995552);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M07_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M07_AXI_awsize.bind(*p_69_M07_AXI_awsize);
        p_69_M07_AXI_awsize->set_sv_netview_offsetfromdp(11995608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M07_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M07_AXI_awburst.bind(*p_69_M07_AXI_awburst);
        p_69_M07_AXI_awburst->set_sv_netview_offsetfromdp(11995664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M07_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M07_AXI_awlock.bind(*p_69_M07_AXI_awlock);
        p_69_M07_AXI_awlock->set_sv_netview_offsetfromdp(11995720);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M07_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M07_AXI_awcache.bind(*p_69_M07_AXI_awcache);
        p_69_M07_AXI_awcache->set_sv_netview_offsetfromdp(11995776);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M07_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M07_AXI_awprot.bind(*p_69_M07_AXI_awprot);
        p_69_M07_AXI_awprot->set_sv_netview_offsetfromdp(11995832);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M07_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M07_AXI_awqos.bind(*p_69_M07_AXI_awqos);
        p_69_M07_AXI_awqos->set_sv_netview_offsetfromdp(11995888);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M07_AXI_awuser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M07_AXI_awuser.bind(*p_69_M07_AXI_awuser);
        p_69_M07_AXI_awuser->set_sv_netview_offsetfromdp(11995944);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_awvalid.bind(*p_69_M07_AXI_awvalid);
        p_69_M07_AXI_awvalid->set_sv_netview_offsetfromdp(11996000);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_awready.bind(*p_69_M07_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M07_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M07_AXI_wdata.bind(*p_69_M07_AXI_wdata);
        p_69_M07_AXI_wdata->set_sv_netview_offsetfromdp(11996112);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_69_M07_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_69->M07_AXI_wstrb.bind(*p_69_M07_AXI_wstrb);
        p_69_M07_AXI_wstrb->set_sv_netview_offsetfromdp(11996168);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_wlast.bind(*p_69_M07_AXI_wlast);
        p_69_M07_AXI_wlast->set_sv_netview_offsetfromdp(11996224);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M07_AXI_wuser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M07_AXI_wuser.bind(*p_69_M07_AXI_wuser);
        p_69_M07_AXI_wuser->set_sv_netview_offsetfromdp(11996280);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_wvalid.bind(*p_69_M07_AXI_wvalid);
        p_69_M07_AXI_wvalid->set_sv_netview_offsetfromdp(11996336);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_wready.bind(*p_69_M07_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M07_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M07_AXI_bid.bind(*p_69_M07_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M07_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M07_AXI_bresp.bind(*p_69_M07_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_bresp);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M07_AXI_buser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M07_AXI_buser.bind(*p_69_M07_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_buser);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_bvalid.bind(*p_69_M07_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_bready.bind(*p_69_M07_AXI_bready);
        p_69_M07_AXI_bready->set_sv_netview_offsetfromdp(11996672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M07_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M07_AXI_arid.bind(*p_69_M07_AXI_arid);
        p_69_M07_AXI_arid->set_sv_netview_offsetfromdp(11996728);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_69_M07_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_69->M07_AXI_araddr.bind(*p_69_M07_AXI_araddr);
        p_69_M07_AXI_araddr->set_sv_netview_offsetfromdp(11996784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_69_M07_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_69->M07_AXI_arlen.bind(*p_69_M07_AXI_arlen);
        p_69_M07_AXI_arlen->set_sv_netview_offsetfromdp(11996840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M07_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M07_AXI_arsize.bind(*p_69_M07_AXI_arsize);
        p_69_M07_AXI_arsize->set_sv_netview_offsetfromdp(11996896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M07_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M07_AXI_arburst.bind(*p_69_M07_AXI_arburst);
        p_69_M07_AXI_arburst->set_sv_netview_offsetfromdp(11996952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M07_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M07_AXI_arlock.bind(*p_69_M07_AXI_arlock);
        p_69_M07_AXI_arlock->set_sv_netview_offsetfromdp(11997008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M07_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M07_AXI_arcache.bind(*p_69_M07_AXI_arcache);
        p_69_M07_AXI_arcache->set_sv_netview_offsetfromdp(11997064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_69_M07_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_69->M07_AXI_arprot.bind(*p_69_M07_AXI_arprot);
        p_69_M07_AXI_arprot->set_sv_netview_offsetfromdp(11997120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_69_M07_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_69->M07_AXI_arqos.bind(*p_69_M07_AXI_arqos);
        p_69_M07_AXI_arqos->set_sv_netview_offsetfromdp(11997176);
        xsim_sc_channel<114, sc_dt::sc_bv<114> > *p_69_M07_AXI_aruser = new xsim_sc_channel<114, sc_dt::sc_bv<114> >();
        sc_inst_69->M07_AXI_aruser.bind(*p_69_M07_AXI_aruser);
        p_69_M07_AXI_aruser->set_sv_netview_offsetfromdp(11997232);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_arvalid.bind(*p_69_M07_AXI_arvalid);
        p_69_M07_AXI_arvalid->set_sv_netview_offsetfromdp(11997288);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_arready.bind(*p_69_M07_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_69_M07_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_69->M07_AXI_rid.bind(*p_69_M07_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_69_M07_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_69->M07_AXI_rdata.bind(*p_69_M07_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_69_M07_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_69->M07_AXI_rresp.bind(*p_69_M07_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_rresp);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_rlast.bind(*p_69_M07_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_rlast);
        xsim_sc_channel<14, sc_dt::sc_bv<14> > *p_69_M07_AXI_ruser = new xsim_sc_channel<14, sc_dt::sc_bv<14> >();
        sc_inst_69->M07_AXI_ruser.bind(*p_69_M07_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_ruser);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_rvalid.bind(*p_69_M07_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_69_M07_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_69_M07_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_69->M07_AXI_rready.bind(*p_69_M07_AXI_rready);
        p_69_M07_AXI_rready->set_sv_netview_offsetfromdp(11997736);
        sc_inst_70 = new bd_d216_rs_M00_AXI_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.interconnect.rs_m00_axi");
        sc_inst_70->xsim_set_dbg_index(4771);
        xsim_sc_channel<0, bool > *p_70_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_70->aclk.bind(*p_70_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_70_aclk);
        xsim_sc_channel<0, bool > *p_70_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_70->aresetn.bind(*p_70_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_70_aresetn);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_70_s_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_70->s_axi_awaddr.bind(*p_70_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_awlen.bind(*p_70_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awsize.bind(*p_70_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_awburst.bind(*p_70_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_awlock.bind(*p_70_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awcache.bind(*p_70_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_awprot.bind(*p_70_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awregion.bind(*p_70_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_awqos.bind(*p_70_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awvalid.bind(*p_70_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_awready.bind(*p_70_s_axi_awready);
        p_70_s_axi_awready->set_sv_netview_offsetfromdp(11998512);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_wdata.bind(*p_70_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_wstrb.bind(*p_70_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_70_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wlast.bind(*p_70_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_70_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wvalid.bind(*p_70_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_wready.bind(*p_70_s_axi_wready);
        p_70_s_axi_wready->set_sv_netview_offsetfromdp(11998792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_bresp.bind(*p_70_s_axi_bresp);
        p_70_s_axi_bresp->set_sv_netview_offsetfromdp(11998848);
        xsim_sc_channel<0, bool > *p_70_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bvalid.bind(*p_70_s_axi_bvalid);
        p_70_s_axi_bvalid->set_sv_netview_offsetfromdp(11998904);
        xsim_sc_channel<0, bool > *p_70_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_bready.bind(*p_70_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_bready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_70_s_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_70->s_axi_araddr.bind(*p_70_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->s_axi_arlen.bind(*p_70_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arsize.bind(*p_70_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_arburst.bind(*p_70_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->s_axi_arlock.bind(*p_70_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arcache.bind(*p_70_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->s_axi_arprot.bind(*p_70_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arregion.bind(*p_70_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->s_axi_arqos.bind(*p_70_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_70_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arvalid.bind(*p_70_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_70_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_arready.bind(*p_70_s_axi_arready);
        p_70_s_axi_arready->set_sv_netview_offsetfromdp(11999576);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->s_axi_rdata.bind(*p_70_s_axi_rdata);
        p_70_s_axi_rdata->set_sv_netview_offsetfromdp(11999632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->s_axi_rresp.bind(*p_70_s_axi_rresp);
        p_70_s_axi_rresp->set_sv_netview_offsetfromdp(11999688);
        xsim_sc_channel<0, bool > *p_70_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rlast.bind(*p_70_s_axi_rlast);
        p_70_s_axi_rlast->set_sv_netview_offsetfromdp(11999744);
        xsim_sc_channel<0, bool > *p_70_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rvalid.bind(*p_70_s_axi_rvalid);
        p_70_s_axi_rvalid->set_sv_netview_offsetfromdp(11999800);
        xsim_sc_channel<0, bool > *p_70_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->s_axi_rready.bind(*p_70_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_s_axi_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_70_m_axi_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_70->m_axi_awaddr.bind(*p_70_m_axi_awaddr);
        p_70_m_axi_awaddr->set_sv_netview_offsetfromdp(11999912);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_axi_awlen.bind(*p_70_m_axi_awlen);
        p_70_m_axi_awlen->set_sv_netview_offsetfromdp(11999968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axi_awsize.bind(*p_70_m_axi_awsize);
        p_70_m_axi_awsize->set_sv_netview_offsetfromdp(12000024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axi_awburst.bind(*p_70_m_axi_awburst);
        p_70_m_axi_awburst->set_sv_netview_offsetfromdp(12000080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_axi_awlock.bind(*p_70_m_axi_awlock);
        p_70_m_axi_awlock->set_sv_netview_offsetfromdp(12000136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_awcache.bind(*p_70_m_axi_awcache);
        p_70_m_axi_awcache->set_sv_netview_offsetfromdp(12000192);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axi_awprot.bind(*p_70_m_axi_awprot);
        p_70_m_axi_awprot->set_sv_netview_offsetfromdp(12000248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_awregion.bind(*p_70_m_axi_awregion);
        p_70_m_axi_awregion->set_sv_netview_offsetfromdp(12000304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_awqos.bind(*p_70_m_axi_awqos);
        p_70_m_axi_awqos->set_sv_netview_offsetfromdp(12000360);
        xsim_sc_channel<0, bool > *p_70_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_awvalid.bind(*p_70_m_axi_awvalid);
        p_70_m_axi_awvalid->set_sv_netview_offsetfromdp(12000416);
        xsim_sc_channel<0, bool > *p_70_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_awready.bind(*p_70_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axi_wdata.bind(*p_70_m_axi_wdata);
        p_70_m_axi_wdata->set_sv_netview_offsetfromdp(12000528);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_wstrb.bind(*p_70_m_axi_wstrb);
        p_70_m_axi_wstrb->set_sv_netview_offsetfromdp(12000584);
        xsim_sc_channel<0, bool > *p_70_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_wlast.bind(*p_70_m_axi_wlast);
        p_70_m_axi_wlast->set_sv_netview_offsetfromdp(12000640);
        xsim_sc_channel<0, bool > *p_70_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_wvalid.bind(*p_70_m_axi_wvalid);
        p_70_m_axi_wvalid->set_sv_netview_offsetfromdp(12000696);
        xsim_sc_channel<0, bool > *p_70_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_wready.bind(*p_70_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axi_bresp.bind(*p_70_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_70_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_bvalid.bind(*p_70_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_70_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_bready.bind(*p_70_m_axi_bready);
        p_70_m_axi_bready->set_sv_netview_offsetfromdp(12000920);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_70_m_axi_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_70->m_axi_araddr.bind(*p_70_m_axi_araddr);
        p_70_m_axi_araddr->set_sv_netview_offsetfromdp(12000976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_70_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_70->m_axi_arlen.bind(*p_70_m_axi_arlen);
        p_70_m_axi_arlen->set_sv_netview_offsetfromdp(12001032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axi_arsize.bind(*p_70_m_axi_arsize);
        p_70_m_axi_arsize->set_sv_netview_offsetfromdp(12001088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axi_arburst.bind(*p_70_m_axi_arburst);
        p_70_m_axi_arburst->set_sv_netview_offsetfromdp(12001144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_70_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_70->m_axi_arlock.bind(*p_70_m_axi_arlock);
        p_70_m_axi_arlock->set_sv_netview_offsetfromdp(12001200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_arcache.bind(*p_70_m_axi_arcache);
        p_70_m_axi_arcache->set_sv_netview_offsetfromdp(12001256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_70_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_70->m_axi_arprot.bind(*p_70_m_axi_arprot);
        p_70_m_axi_arprot->set_sv_netview_offsetfromdp(12001312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_arregion.bind(*p_70_m_axi_arregion);
        p_70_m_axi_arregion->set_sv_netview_offsetfromdp(12001368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_70_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_70->m_axi_arqos.bind(*p_70_m_axi_arqos);
        p_70_m_axi_arqos->set_sv_netview_offsetfromdp(12001424);
        xsim_sc_channel<0, bool > *p_70_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_arvalid.bind(*p_70_m_axi_arvalid);
        p_70_m_axi_arvalid->set_sv_netview_offsetfromdp(12001480);
        xsim_sc_channel<0, bool > *p_70_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_arready.bind(*p_70_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_70_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_70->m_axi_rdata.bind(*p_70_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_70_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_70->m_axi_rresp.bind(*p_70_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_70_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_rlast.bind(*p_70_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_70_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_rvalid.bind(*p_70_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_70_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_70_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_70->m_axi_rready.bind(*p_70_m_axi_rready);
        p_70_m_axi_rready->set_sv_netview_offsetfromdp(12001816);
        sc_inst_71 = new bd_d216_ddr4_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00");
        sc_inst_71->xsim_set_dbg_index(5134);
        xsim_sc_channel<0, bool > *p_71_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_init_calib_complete.bind(*p_71_c0_init_calib_complete);
        p_71_c0_init_calib_complete->set_sv_netview_offsetfromdp(12344176);
        xsim_sc_channel<0, bool > *p_71_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_71->dbg_clk.bind(*p_71_dbg_clk);
        p_71_dbg_clk->set_sv_netview_offsetfromdp(12344232);
        xsim_sc_channel<0, bool > *p_71_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_sys_clk_p.bind(*p_71_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_71_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_sys_clk_n.bind(*p_71_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_71_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_71->dbg_bus.bind(*p_71_dbg_bus);
        p_71_dbg_bus->set_sv_netview_offsetfromdp(12344400);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_71_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_71->c0_ddr4_adr.bind(*p_71_c0_ddr4_adr);
        p_71_c0_ddr4_adr->set_sv_netview_offsetfromdp(12344456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_ba.bind(*p_71_c0_ddr4_ba);
        p_71_c0_ddr4_ba->set_sv_netview_offsetfromdp(12344512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_cke.bind(*p_71_c0_ddr4_cke);
        p_71_c0_ddr4_cke->set_sv_netview_offsetfromdp(12344568);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_cs_n.bind(*p_71_c0_ddr4_cs_n);
        p_71_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(12344624);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_71_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_71->c0_ddr4_dq.bind(*p_71_c0_ddr4_dq);
        p_71_c0_ddr4_dq->set_sv_netview_offsetfromdp(12344680);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_71_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_71->c0_ddr4_dqs_c.bind(*p_71_c0_ddr4_dqs_c);
        p_71_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(12344736);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_71_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_71->c0_ddr4_dqs_t.bind(*p_71_c0_ddr4_dqs_t);
        p_71_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(12344792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_odt.bind(*p_71_c0_ddr4_odt);
        p_71_c0_ddr4_odt->set_sv_netview_offsetfromdp(12344848);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_parity.bind(*p_71_c0_ddr4_parity);
        p_71_c0_ddr4_parity->set_sv_netview_offsetfromdp(12344904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_bg.bind(*p_71_c0_ddr4_bg);
        p_71_c0_ddr4_bg->set_sv_netview_offsetfromdp(12344960);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_reset_n.bind(*p_71_c0_ddr4_reset_n);
        p_71_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(12345016);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_act_n.bind(*p_71_c0_ddr4_act_n);
        p_71_c0_ddr4_act_n->set_sv_netview_offsetfromdp(12345072);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_ck_c.bind(*p_71_c0_ddr4_ck_c);
        p_71_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(12345128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_ck_t.bind(*p_71_c0_ddr4_ck_t);
        p_71_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(12345184);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_ui_clk.bind(*p_71_c0_ddr4_ui_clk);
        p_71_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(12345240);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_ui_clk_sync_rst.bind(*p_71_c0_ddr4_ui_clk_sync_rst);
        p_71_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(12345296);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_aresetn.bind(*p_71_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_71_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_awready.bind(*p_71_c0_ddr4_s_axi_ctrl_awready);
        p_71_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(12345464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_71_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_71_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_wready.bind(*p_71_c0_ddr4_s_axi_ctrl_wready);
        p_71_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(12345632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_wdata.bind(*p_71_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_71_c0_ddr4_s_axi_ctrl_bvalid);
        p_71_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(12345744);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_bready.bind(*p_71_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_bresp.bind(*p_71_c0_ddr4_s_axi_ctrl_bresp);
        p_71_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(12345856);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_71_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_arready.bind(*p_71_c0_ddr4_s_axi_ctrl_arready);
        p_71_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(12345968);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_araddr.bind(*p_71_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_71_c0_ddr4_s_axi_ctrl_rvalid);
        p_71_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(12346080);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_rready.bind(*p_71_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_71_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_rdata.bind(*p_71_c0_ddr4_s_axi_ctrl_rdata);
        p_71_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(12346192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_s_axi_ctrl_rresp.bind(*p_71_c0_ddr4_s_axi_ctrl_rresp);
        p_71_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(12346248);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_interrupt.bind(*p_71_c0_ddr4_interrupt);
        p_71_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(12346304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_s_axi_awid.bind(*p_71_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_71_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_71->c0_ddr4_s_axi_awaddr.bind(*p_71_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->c0_ddr4_s_axi_awlen.bind(*p_71_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->c0_ddr4_s_axi_awsize.bind(*p_71_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_s_axi_awburst.bind(*p_71_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_s_axi_awlock.bind(*p_71_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->c0_ddr4_s_axi_awcache.bind(*p_71_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->c0_ddr4_s_axi_awprot.bind(*p_71_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->c0_ddr4_s_axi_awqos.bind(*p_71_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_awvalid.bind(*p_71_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_awready.bind(*p_71_c0_ddr4_s_axi_awready);
        p_71_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(12346920);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_71_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_71->c0_ddr4_s_axi_wdata.bind(*p_71_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_71_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_71->c0_ddr4_s_axi_wstrb.bind(*p_71_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_wlast.bind(*p_71_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_wvalid.bind(*p_71_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_wready.bind(*p_71_c0_ddr4_s_axi_wready);
        p_71_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(12347200);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_bready.bind(*p_71_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_s_axi_bid.bind(*p_71_c0_ddr4_s_axi_bid);
        p_71_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(12347312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_s_axi_bresp.bind(*p_71_c0_ddr4_s_axi_bresp);
        p_71_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(12347368);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_bvalid.bind(*p_71_c0_ddr4_s_axi_bvalid);
        p_71_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(12347424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_s_axi_arid.bind(*p_71_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_71_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_71->c0_ddr4_s_axi_araddr.bind(*p_71_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_71_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_71->c0_ddr4_s_axi_arlen.bind(*p_71_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->c0_ddr4_s_axi_arsize.bind(*p_71_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_s_axi_arburst.bind(*p_71_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_s_axi_arlock.bind(*p_71_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->c0_ddr4_s_axi_arcache.bind(*p_71_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_71_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_71->c0_ddr4_s_axi_arprot.bind(*p_71_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_71_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_71->c0_ddr4_s_axi_arqos.bind(*p_71_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_arvalid.bind(*p_71_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_arready.bind(*p_71_c0_ddr4_s_axi_arready);
        p_71_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(12348040);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_rready.bind(*p_71_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_71_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_rlast.bind(*p_71_c0_ddr4_s_axi_rlast);
        p_71_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(12348152);
        xsim_sc_channel<0, bool > *p_71_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_71->c0_ddr4_s_axi_rvalid.bind(*p_71_c0_ddr4_s_axi_rvalid);
        p_71_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(12348208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_71_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_71->c0_ddr4_s_axi_rresp.bind(*p_71_c0_ddr4_s_axi_rresp);
        p_71_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(12348264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_71_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_71->c0_ddr4_s_axi_rid.bind(*p_71_c0_ddr4_s_axi_rid);
        p_71_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(12348320);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_71_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_71->c0_ddr4_s_axi_rdata.bind(*p_71_c0_ddr4_s_axi_rdata);
        p_71_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(12348376);
        xsim_sc_channel<0, bool > *p_71_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_71->addn_ui_clkout1.bind(*p_71_addn_ui_clkout1);
        p_71_addn_ui_clkout1->set_sv_netview_offsetfromdp(12348432);
        xsim_sc_channel<0, bool > *p_71_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_71->sys_rst.bind(*p_71_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_71_sys_rst);
        sc_inst_72 = new bd_d216_ddr4_mem00_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem00_ctrl_cc");
        sc_inst_72->xsim_set_dbg_index(5135);
        xsim_sc_channel<0, bool > *p_72_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_aclk.bind(*p_72_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_72_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_aresetn.bind(*p_72_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->s_axi_awaddr.bind(*p_72_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_72_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_72->s_axi_awprot.bind(*p_72_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_72_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_awvalid.bind(*p_72_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_72_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_awready.bind(*p_72_s_axi_awready);
        p_72_s_axi_awready->set_sv_netview_offsetfromdp(12348872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->s_axi_wdata.bind(*p_72_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_72_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_72->s_axi_wstrb.bind(*p_72_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_72_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_wvalid.bind(*p_72_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_72_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_wready.bind(*p_72_s_axi_wready);
        p_72_s_axi_wready->set_sv_netview_offsetfromdp(12349096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_72_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_72->s_axi_bresp.bind(*p_72_s_axi_bresp);
        p_72_s_axi_bresp->set_sv_netview_offsetfromdp(12349152);
        xsim_sc_channel<0, bool > *p_72_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_bvalid.bind(*p_72_s_axi_bvalid);
        p_72_s_axi_bvalid->set_sv_netview_offsetfromdp(12349208);
        xsim_sc_channel<0, bool > *p_72_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_bready.bind(*p_72_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->s_axi_araddr.bind(*p_72_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_72_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_72->s_axi_arprot.bind(*p_72_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_72_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_arvalid.bind(*p_72_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_72_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_arready.bind(*p_72_s_axi_arready);
        p_72_s_axi_arready->set_sv_netview_offsetfromdp(12349488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->s_axi_rdata.bind(*p_72_s_axi_rdata);
        p_72_s_axi_rdata->set_sv_netview_offsetfromdp(12349544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_72_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_72->s_axi_rresp.bind(*p_72_s_axi_rresp);
        p_72_s_axi_rresp->set_sv_netview_offsetfromdp(12349600);
        xsim_sc_channel<0, bool > *p_72_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_rvalid.bind(*p_72_s_axi_rvalid);
        p_72_s_axi_rvalid->set_sv_netview_offsetfromdp(12349656);
        xsim_sc_channel<0, bool > *p_72_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_72->s_axi_rready.bind(*p_72_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_72_s_axi_rready);
        xsim_sc_channel<0, bool > *p_72_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_aclk.bind(*p_72_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_72_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_aresetn.bind(*p_72_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->m_axi_awaddr.bind(*p_72_m_axi_awaddr);
        p_72_m_axi_awaddr->set_sv_netview_offsetfromdp(12349880);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_72_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_72->m_axi_awprot.bind(*p_72_m_axi_awprot);
        p_72_m_axi_awprot->set_sv_netview_offsetfromdp(12349936);
        xsim_sc_channel<0, bool > *p_72_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_awvalid.bind(*p_72_m_axi_awvalid);
        p_72_m_axi_awvalid->set_sv_netview_offsetfromdp(12349992);
        xsim_sc_channel<0, bool > *p_72_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_awready.bind(*p_72_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->m_axi_wdata.bind(*p_72_m_axi_wdata);
        p_72_m_axi_wdata->set_sv_netview_offsetfromdp(12350104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_72_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_72->m_axi_wstrb.bind(*p_72_m_axi_wstrb);
        p_72_m_axi_wstrb->set_sv_netview_offsetfromdp(12350160);
        xsim_sc_channel<0, bool > *p_72_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_wvalid.bind(*p_72_m_axi_wvalid);
        p_72_m_axi_wvalid->set_sv_netview_offsetfromdp(12350216);
        xsim_sc_channel<0, bool > *p_72_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_wready.bind(*p_72_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_72_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_72->m_axi_bresp.bind(*p_72_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_72_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_bvalid.bind(*p_72_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_72_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_bready.bind(*p_72_m_axi_bready);
        p_72_m_axi_bready->set_sv_netview_offsetfromdp(12350440);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->m_axi_araddr.bind(*p_72_m_axi_araddr);
        p_72_m_axi_araddr->set_sv_netview_offsetfromdp(12350496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_72_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_72->m_axi_arprot.bind(*p_72_m_axi_arprot);
        p_72_m_axi_arprot->set_sv_netview_offsetfromdp(12350552);
        xsim_sc_channel<0, bool > *p_72_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_arvalid.bind(*p_72_m_axi_arvalid);
        p_72_m_axi_arvalid->set_sv_netview_offsetfromdp(12350608);
        xsim_sc_channel<0, bool > *p_72_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_arready.bind(*p_72_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_72_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_72->m_axi_rdata.bind(*p_72_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_72_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_72->m_axi_rresp.bind(*p_72_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_72_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_rvalid.bind(*p_72_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_72_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_72_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_72->m_axi_rready.bind(*p_72_m_axi_rready);
        p_72_m_axi_rready->set_sv_netview_offsetfromdp(12350888);
        sc_inst_73 = new bd_d216_ddr4_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01");
        sc_inst_73->xsim_set_dbg_index(5136);
        xsim_sc_channel<0, bool > *p_73_c0_init_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_init_calib_complete.bind(*p_73_c0_init_calib_complete);
        p_73_c0_init_calib_complete->set_sv_netview_offsetfromdp(12350992);
        xsim_sc_channel<0, bool > *p_73_dbg_clk = new xsim_sc_channel<0, bool >();
        sc_inst_73->dbg_clk.bind(*p_73_dbg_clk);
        p_73_dbg_clk->set_sv_netview_offsetfromdp(12351048);
        xsim_sc_channel<0, bool > *p_73_c0_sys_clk_p = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_sys_clk_p.bind(*p_73_c0_sys_clk_p);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_sys_clk_p);
        xsim_sc_channel<0, bool > *p_73_c0_sys_clk_n = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_sys_clk_n.bind(*p_73_c0_sys_clk_n);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_sys_clk_n);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_73_dbg_bus = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_73->dbg_bus.bind(*p_73_dbg_bus);
        p_73_dbg_bus->set_sv_netview_offsetfromdp(12351216);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_73_c0_ddr4_adr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_73->c0_ddr4_adr.bind(*p_73_c0_ddr4_adr);
        p_73_c0_ddr4_adr->set_sv_netview_offsetfromdp(12351272);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_ba = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_ba.bind(*p_73_c0_ddr4_ba);
        p_73_c0_ddr4_ba->set_sv_netview_offsetfromdp(12351328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_cke = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_cke.bind(*p_73_c0_ddr4_cke);
        p_73_c0_ddr4_cke->set_sv_netview_offsetfromdp(12351384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_cs_n = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_cs_n.bind(*p_73_c0_ddr4_cs_n);
        p_73_c0_ddr4_cs_n->set_sv_netview_offsetfromdp(12351440);
        xsim_sc_channel<72, sc_dt::sc_bv<72> > *p_73_c0_ddr4_dq = new xsim_sc_channel<72, sc_dt::sc_bv<72> >();
        sc_inst_73->c0_ddr4_dq.bind(*p_73_c0_ddr4_dq);
        p_73_c0_ddr4_dq->set_sv_netview_offsetfromdp(12351496);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_73_c0_ddr4_dqs_c = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_73->c0_ddr4_dqs_c.bind(*p_73_c0_ddr4_dqs_c);
        p_73_c0_ddr4_dqs_c->set_sv_netview_offsetfromdp(12351552);
        xsim_sc_channel<18, sc_dt::sc_bv<18> > *p_73_c0_ddr4_dqs_t = new xsim_sc_channel<18, sc_dt::sc_bv<18> >();
        sc_inst_73->c0_ddr4_dqs_t.bind(*p_73_c0_ddr4_dqs_t);
        p_73_c0_ddr4_dqs_t->set_sv_netview_offsetfromdp(12351608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_odt = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_odt.bind(*p_73_c0_ddr4_odt);
        p_73_c0_ddr4_odt->set_sv_netview_offsetfromdp(12351664);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_parity = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_parity.bind(*p_73_c0_ddr4_parity);
        p_73_c0_ddr4_parity->set_sv_netview_offsetfromdp(12351720);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_bg = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_bg.bind(*p_73_c0_ddr4_bg);
        p_73_c0_ddr4_bg->set_sv_netview_offsetfromdp(12351776);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_reset_n = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_reset_n.bind(*p_73_c0_ddr4_reset_n);
        p_73_c0_ddr4_reset_n->set_sv_netview_offsetfromdp(12351832);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_act_n = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_act_n.bind(*p_73_c0_ddr4_act_n);
        p_73_c0_ddr4_act_n->set_sv_netview_offsetfromdp(12351888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_ck_c = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_ck_c.bind(*p_73_c0_ddr4_ck_c);
        p_73_c0_ddr4_ck_c->set_sv_netview_offsetfromdp(12351944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_ck_t = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_ck_t.bind(*p_73_c0_ddr4_ck_t);
        p_73_c0_ddr4_ck_t->set_sv_netview_offsetfromdp(12352000);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_ui_clk.bind(*p_73_c0_ddr4_ui_clk);
        p_73_c0_ddr4_ui_clk->set_sv_netview_offsetfromdp(12352056);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_ui_clk_sync_rst = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_ui_clk_sync_rst.bind(*p_73_c0_ddr4_ui_clk_sync_rst);
        p_73_c0_ddr4_ui_clk_sync_rst->set_sv_netview_offsetfromdp(12352112);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_aresetn.bind(*p_73_c0_ddr4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_aresetn);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_awvalid.bind(*p_73_c0_ddr4_s_axi_ctrl_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_awvalid);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_awready.bind(*p_73_c0_ddr4_s_axi_ctrl_awready);
        p_73_c0_ddr4_s_axi_ctrl_awready->set_sv_netview_offsetfromdp(12352280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_73_c0_ddr4_s_axi_ctrl_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_awaddr.bind(*p_73_c0_ddr4_s_axi_ctrl_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_awaddr);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_wvalid.bind(*p_73_c0_ddr4_s_axi_ctrl_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_wvalid);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_wready.bind(*p_73_c0_ddr4_s_axi_ctrl_wready);
        p_73_c0_ddr4_s_axi_ctrl_wready->set_sv_netview_offsetfromdp(12352448);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_73_c0_ddr4_s_axi_ctrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_wdata.bind(*p_73_c0_ddr4_s_axi_ctrl_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_wdata);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_bvalid.bind(*p_73_c0_ddr4_s_axi_ctrl_bvalid);
        p_73_c0_ddr4_s_axi_ctrl_bvalid->set_sv_netview_offsetfromdp(12352560);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_bready.bind(*p_73_c0_ddr4_s_axi_ctrl_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_s_axi_ctrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_bresp.bind(*p_73_c0_ddr4_s_axi_ctrl_bresp);
        p_73_c0_ddr4_s_axi_ctrl_bresp->set_sv_netview_offsetfromdp(12352672);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_arvalid.bind(*p_73_c0_ddr4_s_axi_ctrl_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_arvalid);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_arready.bind(*p_73_c0_ddr4_s_axi_ctrl_arready);
        p_73_c0_ddr4_s_axi_ctrl_arready->set_sv_netview_offsetfromdp(12352784);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_73_c0_ddr4_s_axi_ctrl_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_araddr.bind(*p_73_c0_ddr4_s_axi_ctrl_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_araddr);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_rvalid.bind(*p_73_c0_ddr4_s_axi_ctrl_rvalid);
        p_73_c0_ddr4_s_axi_ctrl_rvalid->set_sv_netview_offsetfromdp(12352896);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_ctrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_rready.bind(*p_73_c0_ddr4_s_axi_ctrl_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_ctrl_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_73_c0_ddr4_s_axi_ctrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_rdata.bind(*p_73_c0_ddr4_s_axi_ctrl_rdata);
        p_73_c0_ddr4_s_axi_ctrl_rdata->set_sv_netview_offsetfromdp(12353008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_s_axi_ctrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_s_axi_ctrl_rresp.bind(*p_73_c0_ddr4_s_axi_ctrl_rresp);
        p_73_c0_ddr4_s_axi_ctrl_rresp->set_sv_netview_offsetfromdp(12353064);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_interrupt.bind(*p_73_c0_ddr4_interrupt);
        p_73_c0_ddr4_interrupt->set_sv_netview_offsetfromdp(12353120);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_s_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_s_axi_awid.bind(*p_73_c0_ddr4_s_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_73_c0_ddr4_s_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_73->c0_ddr4_s_axi_awaddr.bind(*p_73_c0_ddr4_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_73_c0_ddr4_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_73->c0_ddr4_s_axi_awlen.bind(*p_73_c0_ddr4_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_73_c0_ddr4_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_73->c0_ddr4_s_axi_awsize.bind(*p_73_c0_ddr4_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_s_axi_awburst.bind(*p_73_c0_ddr4_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_s_axi_awlock.bind(*p_73_c0_ddr4_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_73_c0_ddr4_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_73->c0_ddr4_s_axi_awcache.bind(*p_73_c0_ddr4_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_73_c0_ddr4_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_73->c0_ddr4_s_axi_awprot.bind(*p_73_c0_ddr4_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_73_c0_ddr4_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_73->c0_ddr4_s_axi_awqos.bind(*p_73_c0_ddr4_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_awvalid.bind(*p_73_c0_ddr4_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_awready.bind(*p_73_c0_ddr4_s_axi_awready);
        p_73_c0_ddr4_s_axi_awready->set_sv_netview_offsetfromdp(12353736);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_73_c0_ddr4_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_73->c0_ddr4_s_axi_wdata.bind(*p_73_c0_ddr4_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_73_c0_ddr4_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_73->c0_ddr4_s_axi_wstrb.bind(*p_73_c0_ddr4_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_wlast.bind(*p_73_c0_ddr4_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_wvalid.bind(*p_73_c0_ddr4_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_wready.bind(*p_73_c0_ddr4_s_axi_wready);
        p_73_c0_ddr4_s_axi_wready->set_sv_netview_offsetfromdp(12354016);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_bready.bind(*p_73_c0_ddr4_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_s_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_s_axi_bid.bind(*p_73_c0_ddr4_s_axi_bid);
        p_73_c0_ddr4_s_axi_bid->set_sv_netview_offsetfromdp(12354128);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_s_axi_bresp.bind(*p_73_c0_ddr4_s_axi_bresp);
        p_73_c0_ddr4_s_axi_bresp->set_sv_netview_offsetfromdp(12354184);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_bvalid.bind(*p_73_c0_ddr4_s_axi_bvalid);
        p_73_c0_ddr4_s_axi_bvalid->set_sv_netview_offsetfromdp(12354240);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_s_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_s_axi_arid.bind(*p_73_c0_ddr4_s_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_73_c0_ddr4_s_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_73->c0_ddr4_s_axi_araddr.bind(*p_73_c0_ddr4_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_73_c0_ddr4_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_73->c0_ddr4_s_axi_arlen.bind(*p_73_c0_ddr4_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_73_c0_ddr4_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_73->c0_ddr4_s_axi_arsize.bind(*p_73_c0_ddr4_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_s_axi_arburst.bind(*p_73_c0_ddr4_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_s_axi_arlock.bind(*p_73_c0_ddr4_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_73_c0_ddr4_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_73->c0_ddr4_s_axi_arcache.bind(*p_73_c0_ddr4_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_73_c0_ddr4_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_73->c0_ddr4_s_axi_arprot.bind(*p_73_c0_ddr4_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_73_c0_ddr4_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_73->c0_ddr4_s_axi_arqos.bind(*p_73_c0_ddr4_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_arvalid.bind(*p_73_c0_ddr4_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_arready.bind(*p_73_c0_ddr4_s_axi_arready);
        p_73_c0_ddr4_s_axi_arready->set_sv_netview_offsetfromdp(12354856);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_rready.bind(*p_73_c0_ddr4_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_73_c0_ddr4_s_axi_rready);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_rlast.bind(*p_73_c0_ddr4_s_axi_rlast);
        p_73_c0_ddr4_s_axi_rlast->set_sv_netview_offsetfromdp(12354968);
        xsim_sc_channel<0, bool > *p_73_c0_ddr4_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_73->c0_ddr4_s_axi_rvalid.bind(*p_73_c0_ddr4_s_axi_rvalid);
        p_73_c0_ddr4_s_axi_rvalid->set_sv_netview_offsetfromdp(12355024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_73_c0_ddr4_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_73->c0_ddr4_s_axi_rresp.bind(*p_73_c0_ddr4_s_axi_rresp);
        p_73_c0_ddr4_s_axi_rresp->set_sv_netview_offsetfromdp(12355080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_73_c0_ddr4_s_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_73->c0_ddr4_s_axi_rid.bind(*p_73_c0_ddr4_s_axi_rid);
        p_73_c0_ddr4_s_axi_rid->set_sv_netview_offsetfromdp(12355136);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_73_c0_ddr4_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_73->c0_ddr4_s_axi_rdata.bind(*p_73_c0_ddr4_s_axi_rdata);
        p_73_c0_ddr4_s_axi_rdata->set_sv_netview_offsetfromdp(12355192);
        xsim_sc_channel<0, bool > *p_73_addn_ui_clkout1 = new xsim_sc_channel<0, bool >();
        sc_inst_73->addn_ui_clkout1.bind(*p_73_addn_ui_clkout1);
        p_73_addn_ui_clkout1->set_sv_netview_offsetfromdp(12355248);
        xsim_sc_channel<0, bool > *p_73_sys_rst = new xsim_sc_channel<0, bool >();
        sc_inst_73->sys_rst.bind(*p_73_sys_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_73_sys_rst);
        sc_inst_74 = new bd_d216_ddr4_mem01_ctrl_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.ddr4_mem01_ctrl_cc");
        sc_inst_74->xsim_set_dbg_index(5137);
        xsim_sc_channel<0, bool > *p_74_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_aclk.bind(*p_74_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_74_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_aresetn.bind(*p_74_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->s_axi_awaddr.bind(*p_74_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_74_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_74->s_axi_awprot.bind(*p_74_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_74_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_awvalid.bind(*p_74_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_74_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_awready.bind(*p_74_s_axi_awready);
        p_74_s_axi_awready->set_sv_netview_offsetfromdp(12355688);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->s_axi_wdata.bind(*p_74_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_74_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_74->s_axi_wstrb.bind(*p_74_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_74_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_wvalid.bind(*p_74_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_74_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_wready.bind(*p_74_s_axi_wready);
        p_74_s_axi_wready->set_sv_netview_offsetfromdp(12355912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_74_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_74->s_axi_bresp.bind(*p_74_s_axi_bresp);
        p_74_s_axi_bresp->set_sv_netview_offsetfromdp(12355968);
        xsim_sc_channel<0, bool > *p_74_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_bvalid.bind(*p_74_s_axi_bvalid);
        p_74_s_axi_bvalid->set_sv_netview_offsetfromdp(12356024);
        xsim_sc_channel<0, bool > *p_74_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_bready.bind(*p_74_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->s_axi_araddr.bind(*p_74_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_74_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_74->s_axi_arprot.bind(*p_74_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_74_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_arvalid.bind(*p_74_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_74_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_arready.bind(*p_74_s_axi_arready);
        p_74_s_axi_arready->set_sv_netview_offsetfromdp(12356304);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->s_axi_rdata.bind(*p_74_s_axi_rdata);
        p_74_s_axi_rdata->set_sv_netview_offsetfromdp(12356360);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_74_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_74->s_axi_rresp.bind(*p_74_s_axi_rresp);
        p_74_s_axi_rresp->set_sv_netview_offsetfromdp(12356416);
        xsim_sc_channel<0, bool > *p_74_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_rvalid.bind(*p_74_s_axi_rvalid);
        p_74_s_axi_rvalid->set_sv_netview_offsetfromdp(12356472);
        xsim_sc_channel<0, bool > *p_74_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_74->s_axi_rready.bind(*p_74_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_74_s_axi_rready);
        xsim_sc_channel<0, bool > *p_74_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_aclk.bind(*p_74_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_74_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_aresetn.bind(*p_74_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->m_axi_awaddr.bind(*p_74_m_axi_awaddr);
        p_74_m_axi_awaddr->set_sv_netview_offsetfromdp(12356696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_74_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_74->m_axi_awprot.bind(*p_74_m_axi_awprot);
        p_74_m_axi_awprot->set_sv_netview_offsetfromdp(12356752);
        xsim_sc_channel<0, bool > *p_74_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_awvalid.bind(*p_74_m_axi_awvalid);
        p_74_m_axi_awvalid->set_sv_netview_offsetfromdp(12356808);
        xsim_sc_channel<0, bool > *p_74_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_awready.bind(*p_74_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->m_axi_wdata.bind(*p_74_m_axi_wdata);
        p_74_m_axi_wdata->set_sv_netview_offsetfromdp(12356920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_74_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_74->m_axi_wstrb.bind(*p_74_m_axi_wstrb);
        p_74_m_axi_wstrb->set_sv_netview_offsetfromdp(12356976);
        xsim_sc_channel<0, bool > *p_74_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_wvalid.bind(*p_74_m_axi_wvalid);
        p_74_m_axi_wvalid->set_sv_netview_offsetfromdp(12357032);
        xsim_sc_channel<0, bool > *p_74_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_wready.bind(*p_74_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_74_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_74->m_axi_bresp.bind(*p_74_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_74_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_bvalid.bind(*p_74_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_74_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_bready.bind(*p_74_m_axi_bready);
        p_74_m_axi_bready->set_sv_netview_offsetfromdp(12357256);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->m_axi_araddr.bind(*p_74_m_axi_araddr);
        p_74_m_axi_araddr->set_sv_netview_offsetfromdp(12357312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_74_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_74->m_axi_arprot.bind(*p_74_m_axi_arprot);
        p_74_m_axi_arprot->set_sv_netview_offsetfromdp(12357368);
        xsim_sc_channel<0, bool > *p_74_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_arvalid.bind(*p_74_m_axi_arvalid);
        p_74_m_axi_arvalid->set_sv_netview_offsetfromdp(12357424);
        xsim_sc_channel<0, bool > *p_74_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_arready.bind(*p_74_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_74_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_74->m_axi_rdata.bind(*p_74_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_74_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_74->m_axi_rresp.bind(*p_74_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_74_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_rvalid.bind(*p_74_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_74_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_74_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_74->m_axi_rready.bind(*p_74_m_axi_rready);
        p_74_m_axi_rready->set_sv_netview_offsetfromdp(12357704);
        sc_inst_75 = new bd_d216_interconnect_ddrmem_ctrl_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.interconnect_ddrmem_ctrl");
        sc_inst_75->xsim_set_dbg_index(5138);
        xsim_sc_channel<0, bool > *p_75_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_75->aclk.bind(*p_75_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_75_aclk);
        xsim_sc_channel<0, bool > *p_75_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_75->aresetn.bind(*p_75_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_75_aresetn);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_75_s_axi_awaddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_75->s_axi_awaddr.bind(*p_75_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_75_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_75->s_axi_awprot.bind(*p_75_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_awvalid.bind(*p_75_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_awready.bind(*p_75_s_axi_awready);
        p_75_s_axi_awready->set_sv_netview_offsetfromdp(12358088);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_75_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_75->s_axi_wdata.bind(*p_75_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_75_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_75->s_axi_wstrb.bind(*p_75_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_wvalid.bind(*p_75_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_wready.bind(*p_75_s_axi_wready);
        p_75_s_axi_wready->set_sv_netview_offsetfromdp(12358312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->s_axi_bresp.bind(*p_75_s_axi_bresp);
        p_75_s_axi_bresp->set_sv_netview_offsetfromdp(12358368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_bvalid.bind(*p_75_s_axi_bvalid);
        p_75_s_axi_bvalid->set_sv_netview_offsetfromdp(12358424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_bready.bind(*p_75_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_bready);
        xsim_sc_channel<31, sc_dt::sc_bv<31> > *p_75_s_axi_araddr = new xsim_sc_channel<31, sc_dt::sc_bv<31> >();
        sc_inst_75->s_axi_araddr.bind(*p_75_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_75_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_75->s_axi_arprot.bind(*p_75_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_arvalid.bind(*p_75_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_arready.bind(*p_75_s_axi_arready);
        p_75_s_axi_arready->set_sv_netview_offsetfromdp(12358704);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_75_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_75->s_axi_rdata.bind(*p_75_s_axi_rdata);
        p_75_s_axi_rdata->set_sv_netview_offsetfromdp(12358760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->s_axi_rresp.bind(*p_75_s_axi_rresp);
        p_75_s_axi_rresp->set_sv_netview_offsetfromdp(12358816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_rvalid.bind(*p_75_s_axi_rvalid);
        p_75_s_axi_rvalid->set_sv_netview_offsetfromdp(12358872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_75_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_75->s_axi_rready.bind(*p_75_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_75_s_axi_rready);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_75_m_axi_awaddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_75->m_axi_awaddr.bind(*p_75_m_axi_awaddr);
        p_75_m_axi_awaddr->set_sv_netview_offsetfromdp(12358984);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_75_m_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_75->m_axi_awprot.bind(*p_75_m_axi_awprot);
        p_75_m_axi_awprot->set_sv_netview_offsetfromdp(12359040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_awvalid.bind(*p_75_m_axi_awvalid);
        p_75_m_axi_awvalid->set_sv_netview_offsetfromdp(12359096);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_awready.bind(*p_75_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_75_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_75->m_axi_wdata.bind(*p_75_m_axi_wdata);
        p_75_m_axi_wdata->set_sv_netview_offsetfromdp(12359208);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_75_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_75->m_axi_wstrb.bind(*p_75_m_axi_wstrb);
        p_75_m_axi_wstrb->set_sv_netview_offsetfromdp(12359264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_wvalid.bind(*p_75_m_axi_wvalid);
        p_75_m_axi_wvalid->set_sv_netview_offsetfromdp(12359320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_wready.bind(*p_75_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_wready);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_75_m_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_75->m_axi_bresp.bind(*p_75_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_bresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_bvalid.bind(*p_75_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_bvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_bready.bind(*p_75_m_axi_bready);
        p_75_m_axi_bready->set_sv_netview_offsetfromdp(12359544);
        xsim_sc_channel<62, sc_dt::sc_bv<62> > *p_75_m_axi_araddr = new xsim_sc_channel<62, sc_dt::sc_bv<62> >();
        sc_inst_75->m_axi_araddr.bind(*p_75_m_axi_araddr);
        p_75_m_axi_araddr->set_sv_netview_offsetfromdp(12359600);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_75_m_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_75->m_axi_arprot.bind(*p_75_m_axi_arprot);
        p_75_m_axi_arprot->set_sv_netview_offsetfromdp(12359656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_arvalid.bind(*p_75_m_axi_arvalid);
        p_75_m_axi_arvalid->set_sv_netview_offsetfromdp(12359712);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_arready.bind(*p_75_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_75_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_75->m_axi_rdata.bind(*p_75_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_rdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_75_m_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_75->m_axi_rresp.bind(*p_75_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_rresp);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_rvalid.bind(*p_75_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_75_m_axi_rvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_75_m_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_75->m_axi_rready.bind(*p_75_m_axi_rready);
        p_75_m_axi_rready->set_sv_netview_offsetfromdp(12359992);
        sc_inst_76 = new bd_d216_plram_mem00_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem00");
        sc_inst_76->xsim_set_dbg_index(5139);
        xsim_sc_channel<0, bool > *p_76_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_aclk.bind(*p_76_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_76_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_aresetn.bind(*p_76_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_76_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_76->s_axi_awaddr.bind(*p_76_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_76_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_76->s_axi_awlen.bind(*p_76_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_76_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_76->s_axi_awsize.bind(*p_76_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_76_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_76->s_axi_awburst.bind(*p_76_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_76_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_awlock.bind(*p_76_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_76_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_76->s_axi_awcache.bind(*p_76_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_76_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_76->s_axi_awprot.bind(*p_76_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_76_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_awvalid.bind(*p_76_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_76_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_awready.bind(*p_76_s_axi_awready);
        p_76_s_axi_awready->set_sv_netview_offsetfromdp(12360656);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_76_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_76->s_axi_wdata.bind(*p_76_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_76_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_76->s_axi_wstrb.bind(*p_76_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_76_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_wlast.bind(*p_76_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_76_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_wvalid.bind(*p_76_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_76_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_wready.bind(*p_76_s_axi_wready);
        p_76_s_axi_wready->set_sv_netview_offsetfromdp(12360936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_76_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_76->s_axi_bresp.bind(*p_76_s_axi_bresp);
        p_76_s_axi_bresp->set_sv_netview_offsetfromdp(12360992);
        xsim_sc_channel<0, bool > *p_76_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_bvalid.bind(*p_76_s_axi_bvalid);
        p_76_s_axi_bvalid->set_sv_netview_offsetfromdp(12361048);
        xsim_sc_channel<0, bool > *p_76_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_bready.bind(*p_76_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_76_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_76->s_axi_araddr.bind(*p_76_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_76_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_76->s_axi_arlen.bind(*p_76_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_76_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_76->s_axi_arsize.bind(*p_76_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_76_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_76->s_axi_arburst.bind(*p_76_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_76_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_arlock.bind(*p_76_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_76_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_76->s_axi_arcache.bind(*p_76_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_76_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_76->s_axi_arprot.bind(*p_76_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_76_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_arvalid.bind(*p_76_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_76_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_arready.bind(*p_76_s_axi_arready);
        p_76_s_axi_arready->set_sv_netview_offsetfromdp(12361608);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_76_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_76->s_axi_rdata.bind(*p_76_s_axi_rdata);
        p_76_s_axi_rdata->set_sv_netview_offsetfromdp(12361664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_76_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_76->s_axi_rresp.bind(*p_76_s_axi_rresp);
        p_76_s_axi_rresp->set_sv_netview_offsetfromdp(12361720);
        xsim_sc_channel<0, bool > *p_76_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_rlast.bind(*p_76_s_axi_rlast);
        p_76_s_axi_rlast->set_sv_netview_offsetfromdp(12361776);
        xsim_sc_channel<0, bool > *p_76_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_rvalid.bind(*p_76_s_axi_rvalid);
        p_76_s_axi_rvalid->set_sv_netview_offsetfromdp(12361832);
        xsim_sc_channel<0, bool > *p_76_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_76->s_axi_rready.bind(*p_76_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_76_s_axi_rready);
        xsim_sc_channel<0, bool > *p_76_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_76->bram_rst_a.bind(*p_76_bram_rst_a);
        p_76_bram_rst_a->set_sv_netview_offsetfromdp(12361944);
        xsim_sc_channel<0, bool > *p_76_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_76->bram_clk_a.bind(*p_76_bram_clk_a);
        p_76_bram_clk_a->set_sv_netview_offsetfromdp(12362000);
        xsim_sc_channel<0, bool > *p_76_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_76->bram_en_a.bind(*p_76_bram_en_a);
        p_76_bram_en_a->set_sv_netview_offsetfromdp(12362056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_76_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_76->bram_we_a.bind(*p_76_bram_we_a);
        p_76_bram_we_a->set_sv_netview_offsetfromdp(12362112);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_76_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_76->bram_addr_a.bind(*p_76_bram_addr_a);
        p_76_bram_addr_a->set_sv_netview_offsetfromdp(12362168);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_76_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_76->bram_wrdata_a.bind(*p_76_bram_wrdata_a);
        p_76_bram_wrdata_a->set_sv_netview_offsetfromdp(12362224);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_76_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_76->bram_rddata_a.bind(*p_76_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_76_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_76_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_76->bram_rst_b.bind(*p_76_bram_rst_b);
        p_76_bram_rst_b->set_sv_netview_offsetfromdp(12362336);
        xsim_sc_channel<0, bool > *p_76_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_76->bram_clk_b.bind(*p_76_bram_clk_b);
        p_76_bram_clk_b->set_sv_netview_offsetfromdp(12362392);
        xsim_sc_channel<0, bool > *p_76_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_76->bram_en_b.bind(*p_76_bram_en_b);
        p_76_bram_en_b->set_sv_netview_offsetfromdp(12362448);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_76_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_76->bram_we_b.bind(*p_76_bram_we_b);
        p_76_bram_we_b->set_sv_netview_offsetfromdp(12362504);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_76_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_76->bram_addr_b.bind(*p_76_bram_addr_b);
        p_76_bram_addr_b->set_sv_netview_offsetfromdp(12362560);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_76_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_76->bram_wrdata_b.bind(*p_76_bram_wrdata_b);
        p_76_bram_wrdata_b->set_sv_netview_offsetfromdp(12362616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_76_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_76->bram_rddata_b.bind(*p_76_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_76_bram_rddata_b);
        sc_inst_77 = new bd_d216_plram_mem01_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem01");
        sc_inst_77->xsim_set_dbg_index(5141);
        xsim_sc_channel<0, bool > *p_77_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_aclk.bind(*p_77_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_77_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_aresetn.bind(*p_77_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_77_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_77->s_axi_awaddr.bind(*p_77_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_77_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_77->s_axi_awlen.bind(*p_77_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_77_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_77->s_axi_awsize.bind(*p_77_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_77_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_77->s_axi_awburst.bind(*p_77_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_77_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_awlock.bind(*p_77_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_77_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_77->s_axi_awcache.bind(*p_77_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_77_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_77->s_axi_awprot.bind(*p_77_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_77_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_awvalid.bind(*p_77_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_77_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_awready.bind(*p_77_s_axi_awready);
        p_77_s_axi_awready->set_sv_netview_offsetfromdp(12415000);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_77_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_77->s_axi_wdata.bind(*p_77_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_77_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_77->s_axi_wstrb.bind(*p_77_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_77_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_wlast.bind(*p_77_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_77_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_wvalid.bind(*p_77_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_77_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_wready.bind(*p_77_s_axi_wready);
        p_77_s_axi_wready->set_sv_netview_offsetfromdp(12415280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_77_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_77->s_axi_bresp.bind(*p_77_s_axi_bresp);
        p_77_s_axi_bresp->set_sv_netview_offsetfromdp(12415336);
        xsim_sc_channel<0, bool > *p_77_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_bvalid.bind(*p_77_s_axi_bvalid);
        p_77_s_axi_bvalid->set_sv_netview_offsetfromdp(12415392);
        xsim_sc_channel<0, bool > *p_77_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_bready.bind(*p_77_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_77_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_77->s_axi_araddr.bind(*p_77_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_77_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_77->s_axi_arlen.bind(*p_77_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_77_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_77->s_axi_arsize.bind(*p_77_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_77_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_77->s_axi_arburst.bind(*p_77_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_77_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_arlock.bind(*p_77_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_77_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_77->s_axi_arcache.bind(*p_77_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_77_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_77->s_axi_arprot.bind(*p_77_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_77_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_arvalid.bind(*p_77_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_77_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_arready.bind(*p_77_s_axi_arready);
        p_77_s_axi_arready->set_sv_netview_offsetfromdp(12415952);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_77_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_77->s_axi_rdata.bind(*p_77_s_axi_rdata);
        p_77_s_axi_rdata->set_sv_netview_offsetfromdp(12416008);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_77_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_77->s_axi_rresp.bind(*p_77_s_axi_rresp);
        p_77_s_axi_rresp->set_sv_netview_offsetfromdp(12416064);
        xsim_sc_channel<0, bool > *p_77_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_rlast.bind(*p_77_s_axi_rlast);
        p_77_s_axi_rlast->set_sv_netview_offsetfromdp(12416120);
        xsim_sc_channel<0, bool > *p_77_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_rvalid.bind(*p_77_s_axi_rvalid);
        p_77_s_axi_rvalid->set_sv_netview_offsetfromdp(12416176);
        xsim_sc_channel<0, bool > *p_77_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_77->s_axi_rready.bind(*p_77_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_77_s_axi_rready);
        xsim_sc_channel<0, bool > *p_77_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_77->bram_rst_a.bind(*p_77_bram_rst_a);
        p_77_bram_rst_a->set_sv_netview_offsetfromdp(12416288);
        xsim_sc_channel<0, bool > *p_77_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_77->bram_clk_a.bind(*p_77_bram_clk_a);
        p_77_bram_clk_a->set_sv_netview_offsetfromdp(12416344);
        xsim_sc_channel<0, bool > *p_77_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_77->bram_en_a.bind(*p_77_bram_en_a);
        p_77_bram_en_a->set_sv_netview_offsetfromdp(12416400);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_77_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_77->bram_we_a.bind(*p_77_bram_we_a);
        p_77_bram_we_a->set_sv_netview_offsetfromdp(12416456);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_77_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_77->bram_addr_a.bind(*p_77_bram_addr_a);
        p_77_bram_addr_a->set_sv_netview_offsetfromdp(12416512);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_77_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_77->bram_wrdata_a.bind(*p_77_bram_wrdata_a);
        p_77_bram_wrdata_a->set_sv_netview_offsetfromdp(12416568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_77_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_77->bram_rddata_a.bind(*p_77_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_77_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_77_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_77->bram_rst_b.bind(*p_77_bram_rst_b);
        p_77_bram_rst_b->set_sv_netview_offsetfromdp(12416680);
        xsim_sc_channel<0, bool > *p_77_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_77->bram_clk_b.bind(*p_77_bram_clk_b);
        p_77_bram_clk_b->set_sv_netview_offsetfromdp(12416736);
        xsim_sc_channel<0, bool > *p_77_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_77->bram_en_b.bind(*p_77_bram_en_b);
        p_77_bram_en_b->set_sv_netview_offsetfromdp(12416792);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_77_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_77->bram_we_b.bind(*p_77_bram_we_b);
        p_77_bram_we_b->set_sv_netview_offsetfromdp(12416848);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_77_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_77->bram_addr_b.bind(*p_77_bram_addr_b);
        p_77_bram_addr_b->set_sv_netview_offsetfromdp(12416904);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_77_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_77->bram_wrdata_b.bind(*p_77_bram_wrdata_b);
        p_77_bram_wrdata_b->set_sv_netview_offsetfromdp(12416960);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_77_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_77->bram_rddata_b.bind(*p_77_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_77_bram_rddata_b);
        sc_inst_78 = new bd_d216_plram_mem02_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem02");
        sc_inst_78->xsim_set_dbg_index(5143);
        xsim_sc_channel<0, bool > *p_78_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_aclk.bind(*p_78_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_78_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_aresetn.bind(*p_78_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_78_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_78->s_axi_awaddr.bind(*p_78_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_78_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_78->s_axi_awlen.bind(*p_78_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_78_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_78->s_axi_awsize.bind(*p_78_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_78_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_78->s_axi_awburst.bind(*p_78_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_78_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_awlock.bind(*p_78_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_78_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_78->s_axi_awcache.bind(*p_78_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_78_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_78->s_axi_awprot.bind(*p_78_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_78_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_awvalid.bind(*p_78_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_78_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_awready.bind(*p_78_s_axi_awready);
        p_78_s_axi_awready->set_sv_netview_offsetfromdp(12469344);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_78_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_78->s_axi_wdata.bind(*p_78_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_78_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_78->s_axi_wstrb.bind(*p_78_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_78_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_wlast.bind(*p_78_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_78_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_wvalid.bind(*p_78_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_78_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_wready.bind(*p_78_s_axi_wready);
        p_78_s_axi_wready->set_sv_netview_offsetfromdp(12469624);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_78_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_78->s_axi_bresp.bind(*p_78_s_axi_bresp);
        p_78_s_axi_bresp->set_sv_netview_offsetfromdp(12469680);
        xsim_sc_channel<0, bool > *p_78_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_bvalid.bind(*p_78_s_axi_bvalid);
        p_78_s_axi_bvalid->set_sv_netview_offsetfromdp(12469736);
        xsim_sc_channel<0, bool > *p_78_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_bready.bind(*p_78_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_78_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_78->s_axi_araddr.bind(*p_78_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_78_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_78->s_axi_arlen.bind(*p_78_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_78_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_78->s_axi_arsize.bind(*p_78_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_78_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_78->s_axi_arburst.bind(*p_78_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_78_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_arlock.bind(*p_78_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_78_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_78->s_axi_arcache.bind(*p_78_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_78_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_78->s_axi_arprot.bind(*p_78_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_78_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_arvalid.bind(*p_78_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_78_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_arready.bind(*p_78_s_axi_arready);
        p_78_s_axi_arready->set_sv_netview_offsetfromdp(12470296);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_78_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_78->s_axi_rdata.bind(*p_78_s_axi_rdata);
        p_78_s_axi_rdata->set_sv_netview_offsetfromdp(12470352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_78_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_78->s_axi_rresp.bind(*p_78_s_axi_rresp);
        p_78_s_axi_rresp->set_sv_netview_offsetfromdp(12470408);
        xsim_sc_channel<0, bool > *p_78_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_rlast.bind(*p_78_s_axi_rlast);
        p_78_s_axi_rlast->set_sv_netview_offsetfromdp(12470464);
        xsim_sc_channel<0, bool > *p_78_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_rvalid.bind(*p_78_s_axi_rvalid);
        p_78_s_axi_rvalid->set_sv_netview_offsetfromdp(12470520);
        xsim_sc_channel<0, bool > *p_78_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_78->s_axi_rready.bind(*p_78_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_78_s_axi_rready);
        xsim_sc_channel<0, bool > *p_78_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_78->bram_rst_a.bind(*p_78_bram_rst_a);
        p_78_bram_rst_a->set_sv_netview_offsetfromdp(12470632);
        xsim_sc_channel<0, bool > *p_78_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_78->bram_clk_a.bind(*p_78_bram_clk_a);
        p_78_bram_clk_a->set_sv_netview_offsetfromdp(12470688);
        xsim_sc_channel<0, bool > *p_78_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_78->bram_en_a.bind(*p_78_bram_en_a);
        p_78_bram_en_a->set_sv_netview_offsetfromdp(12470744);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_78_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_78->bram_we_a.bind(*p_78_bram_we_a);
        p_78_bram_we_a->set_sv_netview_offsetfromdp(12470800);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_78_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_78->bram_addr_a.bind(*p_78_bram_addr_a);
        p_78_bram_addr_a->set_sv_netview_offsetfromdp(12470856);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_78_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_78->bram_wrdata_a.bind(*p_78_bram_wrdata_a);
        p_78_bram_wrdata_a->set_sv_netview_offsetfromdp(12470912);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_78_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_78->bram_rddata_a.bind(*p_78_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_78_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_78_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_78->bram_rst_b.bind(*p_78_bram_rst_b);
        p_78_bram_rst_b->set_sv_netview_offsetfromdp(12471024);
        xsim_sc_channel<0, bool > *p_78_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_78->bram_clk_b.bind(*p_78_bram_clk_b);
        p_78_bram_clk_b->set_sv_netview_offsetfromdp(12471080);
        xsim_sc_channel<0, bool > *p_78_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_78->bram_en_b.bind(*p_78_bram_en_b);
        p_78_bram_en_b->set_sv_netview_offsetfromdp(12471136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_78_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_78->bram_we_b.bind(*p_78_bram_we_b);
        p_78_bram_we_b->set_sv_netview_offsetfromdp(12471192);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_78_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_78->bram_addr_b.bind(*p_78_bram_addr_b);
        p_78_bram_addr_b->set_sv_netview_offsetfromdp(12471248);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_78_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_78->bram_wrdata_b.bind(*p_78_bram_wrdata_b);
        p_78_bram_wrdata_b->set_sv_netview_offsetfromdp(12471304);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_78_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_78->bram_rddata_b.bind(*p_78_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_78_bram_rddata_b);
        sc_inst_79 = new bd_d216_plram_mem03_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem03");
        sc_inst_79->xsim_set_dbg_index(5145);
        xsim_sc_channel<0, bool > *p_79_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_aclk.bind(*p_79_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_79_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_aresetn.bind(*p_79_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_79_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_79->s_axi_awaddr.bind(*p_79_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_79_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_79->s_axi_awlen.bind(*p_79_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_79_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_79->s_axi_awsize.bind(*p_79_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_79_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_79->s_axi_awburst.bind(*p_79_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_79_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_awlock.bind(*p_79_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_79_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_79->s_axi_awcache.bind(*p_79_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_79_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_79->s_axi_awprot.bind(*p_79_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_79_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_awvalid.bind(*p_79_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_79_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_awready.bind(*p_79_s_axi_awready);
        p_79_s_axi_awready->set_sv_netview_offsetfromdp(12523688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_79_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_79->s_axi_wdata.bind(*p_79_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_79_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_79->s_axi_wstrb.bind(*p_79_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_79_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_wlast.bind(*p_79_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_79_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_wvalid.bind(*p_79_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_79_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_wready.bind(*p_79_s_axi_wready);
        p_79_s_axi_wready->set_sv_netview_offsetfromdp(12523968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_79_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_79->s_axi_bresp.bind(*p_79_s_axi_bresp);
        p_79_s_axi_bresp->set_sv_netview_offsetfromdp(12524024);
        xsim_sc_channel<0, bool > *p_79_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_bvalid.bind(*p_79_s_axi_bvalid);
        p_79_s_axi_bvalid->set_sv_netview_offsetfromdp(12524080);
        xsim_sc_channel<0, bool > *p_79_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_bready.bind(*p_79_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_79_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_79->s_axi_araddr.bind(*p_79_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_79_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_79->s_axi_arlen.bind(*p_79_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_79_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_79->s_axi_arsize.bind(*p_79_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_79_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_79->s_axi_arburst.bind(*p_79_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_79_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_arlock.bind(*p_79_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_79_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_79->s_axi_arcache.bind(*p_79_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_79_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_79->s_axi_arprot.bind(*p_79_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_79_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_arvalid.bind(*p_79_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_79_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_arready.bind(*p_79_s_axi_arready);
        p_79_s_axi_arready->set_sv_netview_offsetfromdp(12524640);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_79_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_79->s_axi_rdata.bind(*p_79_s_axi_rdata);
        p_79_s_axi_rdata->set_sv_netview_offsetfromdp(12524696);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_79_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_79->s_axi_rresp.bind(*p_79_s_axi_rresp);
        p_79_s_axi_rresp->set_sv_netview_offsetfromdp(12524752);
        xsim_sc_channel<0, bool > *p_79_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_rlast.bind(*p_79_s_axi_rlast);
        p_79_s_axi_rlast->set_sv_netview_offsetfromdp(12524808);
        xsim_sc_channel<0, bool > *p_79_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_rvalid.bind(*p_79_s_axi_rvalid);
        p_79_s_axi_rvalid->set_sv_netview_offsetfromdp(12524864);
        xsim_sc_channel<0, bool > *p_79_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_79->s_axi_rready.bind(*p_79_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_79_s_axi_rready);
        xsim_sc_channel<0, bool > *p_79_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_79->bram_rst_a.bind(*p_79_bram_rst_a);
        p_79_bram_rst_a->set_sv_netview_offsetfromdp(12524976);
        xsim_sc_channel<0, bool > *p_79_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_79->bram_clk_a.bind(*p_79_bram_clk_a);
        p_79_bram_clk_a->set_sv_netview_offsetfromdp(12525032);
        xsim_sc_channel<0, bool > *p_79_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_79->bram_en_a.bind(*p_79_bram_en_a);
        p_79_bram_en_a->set_sv_netview_offsetfromdp(12525088);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_79_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_79->bram_we_a.bind(*p_79_bram_we_a);
        p_79_bram_we_a->set_sv_netview_offsetfromdp(12525144);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_79_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_79->bram_addr_a.bind(*p_79_bram_addr_a);
        p_79_bram_addr_a->set_sv_netview_offsetfromdp(12525200);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_79_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_79->bram_wrdata_a.bind(*p_79_bram_wrdata_a);
        p_79_bram_wrdata_a->set_sv_netview_offsetfromdp(12525256);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_79_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_79->bram_rddata_a.bind(*p_79_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_79_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_79_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_79->bram_rst_b.bind(*p_79_bram_rst_b);
        p_79_bram_rst_b->set_sv_netview_offsetfromdp(12525368);
        xsim_sc_channel<0, bool > *p_79_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_79->bram_clk_b.bind(*p_79_bram_clk_b);
        p_79_bram_clk_b->set_sv_netview_offsetfromdp(12525424);
        xsim_sc_channel<0, bool > *p_79_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_79->bram_en_b.bind(*p_79_bram_en_b);
        p_79_bram_en_b->set_sv_netview_offsetfromdp(12525480);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_79_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_79->bram_we_b.bind(*p_79_bram_we_b);
        p_79_bram_we_b->set_sv_netview_offsetfromdp(12525536);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_79_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_79->bram_addr_b.bind(*p_79_bram_addr_b);
        p_79_bram_addr_b->set_sv_netview_offsetfromdp(12525592);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_79_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_79->bram_wrdata_b.bind(*p_79_bram_wrdata_b);
        p_79_bram_wrdata_b->set_sv_netview_offsetfromdp(12525648);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_79_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_79->bram_rddata_b.bind(*p_79_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_79_bram_rddata_b);
        sc_inst_80 = new bd_d216_plram_mem04_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem04");
        sc_inst_80->xsim_set_dbg_index(5147);
        xsim_sc_channel<0, bool > *p_80_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_aclk.bind(*p_80_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_80_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_aresetn.bind(*p_80_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_80_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_80->s_axi_awaddr.bind(*p_80_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_80_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_80->s_axi_awlen.bind(*p_80_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_80_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_80->s_axi_awsize.bind(*p_80_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_80_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_80->s_axi_awburst.bind(*p_80_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_80_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_awlock.bind(*p_80_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_80_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_80->s_axi_awcache.bind(*p_80_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_80_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_80->s_axi_awprot.bind(*p_80_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_80_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_awvalid.bind(*p_80_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_80_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_awready.bind(*p_80_s_axi_awready);
        p_80_s_axi_awready->set_sv_netview_offsetfromdp(12578032);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_80_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_80->s_axi_wdata.bind(*p_80_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_80_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_80->s_axi_wstrb.bind(*p_80_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_80_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_wlast.bind(*p_80_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_80_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_wvalid.bind(*p_80_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_80_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_wready.bind(*p_80_s_axi_wready);
        p_80_s_axi_wready->set_sv_netview_offsetfromdp(12578312);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_80_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_80->s_axi_bresp.bind(*p_80_s_axi_bresp);
        p_80_s_axi_bresp->set_sv_netview_offsetfromdp(12578368);
        xsim_sc_channel<0, bool > *p_80_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_bvalid.bind(*p_80_s_axi_bvalid);
        p_80_s_axi_bvalid->set_sv_netview_offsetfromdp(12578424);
        xsim_sc_channel<0, bool > *p_80_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_bready.bind(*p_80_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_80_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_80->s_axi_araddr.bind(*p_80_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_80_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_80->s_axi_arlen.bind(*p_80_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_80_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_80->s_axi_arsize.bind(*p_80_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_80_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_80->s_axi_arburst.bind(*p_80_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_80_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_arlock.bind(*p_80_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_80_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_80->s_axi_arcache.bind(*p_80_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_80_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_80->s_axi_arprot.bind(*p_80_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_80_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_arvalid.bind(*p_80_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_80_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_arready.bind(*p_80_s_axi_arready);
        p_80_s_axi_arready->set_sv_netview_offsetfromdp(12578984);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_80_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_80->s_axi_rdata.bind(*p_80_s_axi_rdata);
        p_80_s_axi_rdata->set_sv_netview_offsetfromdp(12579040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_80_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_80->s_axi_rresp.bind(*p_80_s_axi_rresp);
        p_80_s_axi_rresp->set_sv_netview_offsetfromdp(12579096);
        xsim_sc_channel<0, bool > *p_80_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_rlast.bind(*p_80_s_axi_rlast);
        p_80_s_axi_rlast->set_sv_netview_offsetfromdp(12579152);
        xsim_sc_channel<0, bool > *p_80_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_rvalid.bind(*p_80_s_axi_rvalid);
        p_80_s_axi_rvalid->set_sv_netview_offsetfromdp(12579208);
        xsim_sc_channel<0, bool > *p_80_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_80->s_axi_rready.bind(*p_80_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_80_s_axi_rready);
        xsim_sc_channel<0, bool > *p_80_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_80->bram_rst_a.bind(*p_80_bram_rst_a);
        p_80_bram_rst_a->set_sv_netview_offsetfromdp(12579320);
        xsim_sc_channel<0, bool > *p_80_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_80->bram_clk_a.bind(*p_80_bram_clk_a);
        p_80_bram_clk_a->set_sv_netview_offsetfromdp(12579376);
        xsim_sc_channel<0, bool > *p_80_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_80->bram_en_a.bind(*p_80_bram_en_a);
        p_80_bram_en_a->set_sv_netview_offsetfromdp(12579432);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_80_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_80->bram_we_a.bind(*p_80_bram_we_a);
        p_80_bram_we_a->set_sv_netview_offsetfromdp(12579488);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_80_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_80->bram_addr_a.bind(*p_80_bram_addr_a);
        p_80_bram_addr_a->set_sv_netview_offsetfromdp(12579544);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_80_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_80->bram_wrdata_a.bind(*p_80_bram_wrdata_a);
        p_80_bram_wrdata_a->set_sv_netview_offsetfromdp(12579600);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_80_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_80->bram_rddata_a.bind(*p_80_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_80_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_80_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_80->bram_rst_b.bind(*p_80_bram_rst_b);
        p_80_bram_rst_b->set_sv_netview_offsetfromdp(12579712);
        xsim_sc_channel<0, bool > *p_80_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_80->bram_clk_b.bind(*p_80_bram_clk_b);
        p_80_bram_clk_b->set_sv_netview_offsetfromdp(12579768);
        xsim_sc_channel<0, bool > *p_80_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_80->bram_en_b.bind(*p_80_bram_en_b);
        p_80_bram_en_b->set_sv_netview_offsetfromdp(12579824);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_80_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_80->bram_we_b.bind(*p_80_bram_we_b);
        p_80_bram_we_b->set_sv_netview_offsetfromdp(12579880);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_80_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_80->bram_addr_b.bind(*p_80_bram_addr_b);
        p_80_bram_addr_b->set_sv_netview_offsetfromdp(12579936);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_80_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_80->bram_wrdata_b.bind(*p_80_bram_wrdata_b);
        p_80_bram_wrdata_b->set_sv_netview_offsetfromdp(12579992);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_80_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_80->bram_rddata_b.bind(*p_80_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_80_bram_rddata_b);
        sc_inst_81 = new bd_d216_plram_mem05_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.memory_subsystem.inst.memory.plram_mem05");
        sc_inst_81->xsim_set_dbg_index(5149);
        xsim_sc_channel<0, bool > *p_81_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_aclk.bind(*p_81_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_81_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_aresetn.bind(*p_81_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_aresetn);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_81_s_axi_awaddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_81->s_axi_awaddr.bind(*p_81_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_81_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_81->s_axi_awlen.bind(*p_81_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_81_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_81->s_axi_awsize.bind(*p_81_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_81_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_81->s_axi_awburst.bind(*p_81_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awburst);
        xsim_sc_channel<0, bool > *p_81_s_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_awlock.bind(*p_81_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_81_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_81->s_axi_awcache.bind(*p_81_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_81_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_81->s_axi_awprot.bind(*p_81_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_81_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_awvalid.bind(*p_81_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_81_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_awready.bind(*p_81_s_axi_awready);
        p_81_s_axi_awready->set_sv_netview_offsetfromdp(12632376);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_81_s_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_81->s_axi_wdata.bind(*p_81_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_81_s_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_81->s_axi_wstrb.bind(*p_81_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_81_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_wlast.bind(*p_81_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_81_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_wvalid.bind(*p_81_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_81_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_wready.bind(*p_81_s_axi_wready);
        p_81_s_axi_wready->set_sv_netview_offsetfromdp(12632656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_81_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_81->s_axi_bresp.bind(*p_81_s_axi_bresp);
        p_81_s_axi_bresp->set_sv_netview_offsetfromdp(12632712);
        xsim_sc_channel<0, bool > *p_81_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_bvalid.bind(*p_81_s_axi_bvalid);
        p_81_s_axi_bvalid->set_sv_netview_offsetfromdp(12632768);
        xsim_sc_channel<0, bool > *p_81_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_bready.bind(*p_81_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_bready);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_81_s_axi_araddr = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_81->s_axi_araddr.bind(*p_81_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_81_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_81->s_axi_arlen.bind(*p_81_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_81_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_81->s_axi_arsize.bind(*p_81_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_81_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_81->s_axi_arburst.bind(*p_81_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arburst);
        xsim_sc_channel<0, bool > *p_81_s_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_arlock.bind(*p_81_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_81_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_81->s_axi_arcache.bind(*p_81_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_81_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_81->s_axi_arprot.bind(*p_81_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_81_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_arvalid.bind(*p_81_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_81_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_arready.bind(*p_81_s_axi_arready);
        p_81_s_axi_arready->set_sv_netview_offsetfromdp(12633328);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_81_s_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_81->s_axi_rdata.bind(*p_81_s_axi_rdata);
        p_81_s_axi_rdata->set_sv_netview_offsetfromdp(12633384);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_81_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_81->s_axi_rresp.bind(*p_81_s_axi_rresp);
        p_81_s_axi_rresp->set_sv_netview_offsetfromdp(12633440);
        xsim_sc_channel<0, bool > *p_81_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_rlast.bind(*p_81_s_axi_rlast);
        p_81_s_axi_rlast->set_sv_netview_offsetfromdp(12633496);
        xsim_sc_channel<0, bool > *p_81_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_rvalid.bind(*p_81_s_axi_rvalid);
        p_81_s_axi_rvalid->set_sv_netview_offsetfromdp(12633552);
        xsim_sc_channel<0, bool > *p_81_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_81->s_axi_rready.bind(*p_81_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_81_s_axi_rready);
        xsim_sc_channel<0, bool > *p_81_bram_rst_a = new xsim_sc_channel<0, bool >();
        sc_inst_81->bram_rst_a.bind(*p_81_bram_rst_a);
        p_81_bram_rst_a->set_sv_netview_offsetfromdp(12633664);
        xsim_sc_channel<0, bool > *p_81_bram_clk_a = new xsim_sc_channel<0, bool >();
        sc_inst_81->bram_clk_a.bind(*p_81_bram_clk_a);
        p_81_bram_clk_a->set_sv_netview_offsetfromdp(12633720);
        xsim_sc_channel<0, bool > *p_81_bram_en_a = new xsim_sc_channel<0, bool >();
        sc_inst_81->bram_en_a.bind(*p_81_bram_en_a);
        p_81_bram_en_a->set_sv_netview_offsetfromdp(12633776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_81_bram_we_a = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_81->bram_we_a.bind(*p_81_bram_we_a);
        p_81_bram_we_a->set_sv_netview_offsetfromdp(12633832);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_81_bram_addr_a = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_81->bram_addr_a.bind(*p_81_bram_addr_a);
        p_81_bram_addr_a->set_sv_netview_offsetfromdp(12633888);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_81_bram_wrdata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_81->bram_wrdata_a.bind(*p_81_bram_wrdata_a);
        p_81_bram_wrdata_a->set_sv_netview_offsetfromdp(12633944);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_81_bram_rddata_a = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_81->bram_rddata_a.bind(*p_81_bram_rddata_a);
        (*_glb_hdl_sc_channel_map).push_back(p_81_bram_rddata_a);
        xsim_sc_channel<0, bool > *p_81_bram_rst_b = new xsim_sc_channel<0, bool >();
        sc_inst_81->bram_rst_b.bind(*p_81_bram_rst_b);
        p_81_bram_rst_b->set_sv_netview_offsetfromdp(12634056);
        xsim_sc_channel<0, bool > *p_81_bram_clk_b = new xsim_sc_channel<0, bool >();
        sc_inst_81->bram_clk_b.bind(*p_81_bram_clk_b);
        p_81_bram_clk_b->set_sv_netview_offsetfromdp(12634112);
        xsim_sc_channel<0, bool > *p_81_bram_en_b = new xsim_sc_channel<0, bool >();
        sc_inst_81->bram_en_b.bind(*p_81_bram_en_b);
        p_81_bram_en_b->set_sv_netview_offsetfromdp(12634168);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_81_bram_we_b = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_81->bram_we_b.bind(*p_81_bram_we_b);
        p_81_bram_we_b->set_sv_netview_offsetfromdp(12634224);
        xsim_sc_channel<17, sc_dt::sc_bv<17> > *p_81_bram_addr_b = new xsim_sc_channel<17, sc_dt::sc_bv<17> >();
        sc_inst_81->bram_addr_b.bind(*p_81_bram_addr_b);
        p_81_bram_addr_b->set_sv_netview_offsetfromdp(12634280);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_81_bram_wrdata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_81->bram_wrdata_b.bind(*p_81_bram_wrdata_b);
        p_81_bram_wrdata_b->set_sv_netview_offsetfromdp(12634336);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_81_bram_rddata_b = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_81->bram_rddata_b.bind(*p_81_bram_rddata_b);
        (*_glb_hdl_sc_channel_map).push_back(p_81_bram_rddata_b);
        sc_inst_82 = new pfm_dynamic_sci(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.pfm_dynamic_sci_inst");
        sc_inst_82->xsim_set_dbg_index(59);
        sc_inst_83 = new pfm_dynamic_profile_vip_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.profile_vip_0");
        sc_inst_83->xsim_set_dbg_index(60);
        xsim_sc_channel<0, bool > *p_83_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_83->aclk.bind(*p_83_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_83_aclk);
        xsim_sc_channel<0, bool > *p_83_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_83->aresetn.bind(*p_83_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_83_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_83_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_83->s_axi_awaddr.bind(*p_83_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_83_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_83->s_axi_awlen.bind(*p_83_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->s_axi_awburst.bind(*p_83_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_83_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_83->s_axi_awlock.bind(*p_83_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->s_axi_awcache.bind(*p_83_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_83_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_83->s_axi_awprot.bind(*p_83_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->s_axi_awqos.bind(*p_83_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_83_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_awvalid.bind(*p_83_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_83_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_awready.bind(*p_83_s_axi_awready);
        p_83_s_axi_awready->set_sv_netview_offsetfromdp(12970736);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_83_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_83->s_axi_wdata.bind(*p_83_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_83_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_83->s_axi_wstrb.bind(*p_83_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_83_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_wlast.bind(*p_83_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_83_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_wvalid.bind(*p_83_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_83_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_wready.bind(*p_83_s_axi_wready);
        p_83_s_axi_wready->set_sv_netview_offsetfromdp(12971016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->s_axi_bresp.bind(*p_83_s_axi_bresp);
        p_83_s_axi_bresp->set_sv_netview_offsetfromdp(12971072);
        xsim_sc_channel<0, bool > *p_83_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_bvalid.bind(*p_83_s_axi_bvalid);
        p_83_s_axi_bvalid->set_sv_netview_offsetfromdp(12971128);
        xsim_sc_channel<0, bool > *p_83_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_bready.bind(*p_83_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_83_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_83->s_axi_araddr.bind(*p_83_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_83_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_83->s_axi_arlen.bind(*p_83_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->s_axi_arburst.bind(*p_83_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_83_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_83->s_axi_arlock.bind(*p_83_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->s_axi_arcache.bind(*p_83_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_83_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_83->s_axi_arprot.bind(*p_83_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->s_axi_arqos.bind(*p_83_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_83_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_arvalid.bind(*p_83_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_83_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_arready.bind(*p_83_s_axi_arready);
        p_83_s_axi_arready->set_sv_netview_offsetfromdp(12971688);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_83_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_83->s_axi_rdata.bind(*p_83_s_axi_rdata);
        p_83_s_axi_rdata->set_sv_netview_offsetfromdp(12971744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->s_axi_rresp.bind(*p_83_s_axi_rresp);
        p_83_s_axi_rresp->set_sv_netview_offsetfromdp(12971800);
        xsim_sc_channel<0, bool > *p_83_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_rlast.bind(*p_83_s_axi_rlast);
        p_83_s_axi_rlast->set_sv_netview_offsetfromdp(12971856);
        xsim_sc_channel<0, bool > *p_83_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_rvalid.bind(*p_83_s_axi_rvalid);
        p_83_s_axi_rvalid->set_sv_netview_offsetfromdp(12971912);
        xsim_sc_channel<0, bool > *p_83_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_83->s_axi_rready.bind(*p_83_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_83_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_83_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_83->m_axi_awaddr.bind(*p_83_m_axi_awaddr);
        p_83_m_axi_awaddr->set_sv_netview_offsetfromdp(12972024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_83_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_83->m_axi_awlen.bind(*p_83_m_axi_awlen);
        p_83_m_axi_awlen->set_sv_netview_offsetfromdp(12972080);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->m_axi_awburst.bind(*p_83_m_axi_awburst);
        p_83_m_axi_awburst->set_sv_netview_offsetfromdp(12972136);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_83_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_83->m_axi_awlock.bind(*p_83_m_axi_awlock);
        p_83_m_axi_awlock->set_sv_netview_offsetfromdp(12972192);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->m_axi_awcache.bind(*p_83_m_axi_awcache);
        p_83_m_axi_awcache->set_sv_netview_offsetfromdp(12972248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_83_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_83->m_axi_awprot.bind(*p_83_m_axi_awprot);
        p_83_m_axi_awprot->set_sv_netview_offsetfromdp(12972304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->m_axi_awqos.bind(*p_83_m_axi_awqos);
        p_83_m_axi_awqos->set_sv_netview_offsetfromdp(12972360);
        xsim_sc_channel<0, bool > *p_83_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_awvalid.bind(*p_83_m_axi_awvalid);
        p_83_m_axi_awvalid->set_sv_netview_offsetfromdp(12972416);
        xsim_sc_channel<0, bool > *p_83_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_awready.bind(*p_83_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_83_m_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_83->m_axi_wdata.bind(*p_83_m_axi_wdata);
        p_83_m_axi_wdata->set_sv_netview_offsetfromdp(12972528);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_83_m_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_83->m_axi_wstrb.bind(*p_83_m_axi_wstrb);
        p_83_m_axi_wstrb->set_sv_netview_offsetfromdp(12972584);
        xsim_sc_channel<0, bool > *p_83_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_wlast.bind(*p_83_m_axi_wlast);
        p_83_m_axi_wlast->set_sv_netview_offsetfromdp(12972640);
        xsim_sc_channel<0, bool > *p_83_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_wvalid.bind(*p_83_m_axi_wvalid);
        p_83_m_axi_wvalid->set_sv_netview_offsetfromdp(12972696);
        xsim_sc_channel<0, bool > *p_83_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_wready.bind(*p_83_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->m_axi_bresp.bind(*p_83_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_83_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_bvalid.bind(*p_83_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_83_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_bready.bind(*p_83_m_axi_bready);
        p_83_m_axi_bready->set_sv_netview_offsetfromdp(12972920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_83_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_83->m_axi_araddr.bind(*p_83_m_axi_araddr);
        p_83_m_axi_araddr->set_sv_netview_offsetfromdp(12972976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_83_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_83->m_axi_arlen.bind(*p_83_m_axi_arlen);
        p_83_m_axi_arlen->set_sv_netview_offsetfromdp(12973032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->m_axi_arburst.bind(*p_83_m_axi_arburst);
        p_83_m_axi_arburst->set_sv_netview_offsetfromdp(12973088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_83_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_83->m_axi_arlock.bind(*p_83_m_axi_arlock);
        p_83_m_axi_arlock->set_sv_netview_offsetfromdp(12973144);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->m_axi_arcache.bind(*p_83_m_axi_arcache);
        p_83_m_axi_arcache->set_sv_netview_offsetfromdp(12973200);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_83_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_83->m_axi_arprot.bind(*p_83_m_axi_arprot);
        p_83_m_axi_arprot->set_sv_netview_offsetfromdp(12973256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_83_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_83->m_axi_arqos.bind(*p_83_m_axi_arqos);
        p_83_m_axi_arqos->set_sv_netview_offsetfromdp(12973312);
        xsim_sc_channel<0, bool > *p_83_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_arvalid.bind(*p_83_m_axi_arvalid);
        p_83_m_axi_arvalid->set_sv_netview_offsetfromdp(12973368);
        xsim_sc_channel<0, bool > *p_83_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_arready.bind(*p_83_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_83_m_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_83->m_axi_rdata.bind(*p_83_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_83_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_83->m_axi_rresp.bind(*p_83_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_83_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_rlast.bind(*p_83_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_83_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_rvalid.bind(*p_83_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_83_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_83_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_83->m_axi_rready.bind(*p_83_m_axi_rready);
        p_83_m_axi_rready->set_sv_netview_offsetfromdp(12973704);
        sc_inst_84 = new pfm_dynamic_m01_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m01_couplers.m01_regslice");
        sc_inst_84->xsim_set_dbg_index(5628);
        xsim_sc_channel<0, bool > *p_84_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_84->aclk.bind(*p_84_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_84_aclk);
        xsim_sc_channel<0, bool > *p_84_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_84->aresetn.bind(*p_84_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_84_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_84_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_84->s_axi_awaddr.bind(*p_84_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_84_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_84->s_axi_awprot.bind(*p_84_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_84_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_awvalid.bind(*p_84_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_84_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_awready.bind(*p_84_s_axi_awready);
        p_84_s_axi_awready->set_sv_netview_offsetfromdp(13275664);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_84_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_84->s_axi_wdata.bind(*p_84_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_84_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_84->s_axi_wstrb.bind(*p_84_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_84_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_wvalid.bind(*p_84_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_84_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_wready.bind(*p_84_s_axi_wready);
        p_84_s_axi_wready->set_sv_netview_offsetfromdp(13275888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_84_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_84->s_axi_bresp.bind(*p_84_s_axi_bresp);
        p_84_s_axi_bresp->set_sv_netview_offsetfromdp(13275944);
        xsim_sc_channel<0, bool > *p_84_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_bvalid.bind(*p_84_s_axi_bvalid);
        p_84_s_axi_bvalid->set_sv_netview_offsetfromdp(13276000);
        xsim_sc_channel<0, bool > *p_84_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_bready.bind(*p_84_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_84_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_84->s_axi_araddr.bind(*p_84_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_84_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_84->s_axi_arprot.bind(*p_84_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_84_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_arvalid.bind(*p_84_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_84_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_arready.bind(*p_84_s_axi_arready);
        p_84_s_axi_arready->set_sv_netview_offsetfromdp(13276280);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_84_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_84->s_axi_rdata.bind(*p_84_s_axi_rdata);
        p_84_s_axi_rdata->set_sv_netview_offsetfromdp(13276336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_84_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_84->s_axi_rresp.bind(*p_84_s_axi_rresp);
        p_84_s_axi_rresp->set_sv_netview_offsetfromdp(13276392);
        xsim_sc_channel<0, bool > *p_84_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_rvalid.bind(*p_84_s_axi_rvalid);
        p_84_s_axi_rvalid->set_sv_netview_offsetfromdp(13276448);
        xsim_sc_channel<0, bool > *p_84_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_84->s_axi_rready.bind(*p_84_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_84_s_axi_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_84_m_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_84->m_axi_awaddr.bind(*p_84_m_axi_awaddr);
        p_84_m_axi_awaddr->set_sv_netview_offsetfromdp(13276560);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_84_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_84->m_axi_awprot.bind(*p_84_m_axi_awprot);
        p_84_m_axi_awprot->set_sv_netview_offsetfromdp(13276616);
        xsim_sc_channel<0, bool > *p_84_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_awvalid.bind(*p_84_m_axi_awvalid);
        p_84_m_axi_awvalid->set_sv_netview_offsetfromdp(13276672);
        xsim_sc_channel<0, bool > *p_84_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_awready.bind(*p_84_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_84_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_84->m_axi_wdata.bind(*p_84_m_axi_wdata);
        p_84_m_axi_wdata->set_sv_netview_offsetfromdp(13276784);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_84_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_84->m_axi_wstrb.bind(*p_84_m_axi_wstrb);
        p_84_m_axi_wstrb->set_sv_netview_offsetfromdp(13276840);
        xsim_sc_channel<0, bool > *p_84_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_wvalid.bind(*p_84_m_axi_wvalid);
        p_84_m_axi_wvalid->set_sv_netview_offsetfromdp(13276896);
        xsim_sc_channel<0, bool > *p_84_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_wready.bind(*p_84_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_84_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_84->m_axi_bresp.bind(*p_84_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_84_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_bvalid.bind(*p_84_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_84_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_bready.bind(*p_84_m_axi_bready);
        p_84_m_axi_bready->set_sv_netview_offsetfromdp(13277120);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_84_m_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_84->m_axi_araddr.bind(*p_84_m_axi_araddr);
        p_84_m_axi_araddr->set_sv_netview_offsetfromdp(13277176);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_84_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_84->m_axi_arprot.bind(*p_84_m_axi_arprot);
        p_84_m_axi_arprot->set_sv_netview_offsetfromdp(13277232);
        xsim_sc_channel<0, bool > *p_84_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_arvalid.bind(*p_84_m_axi_arvalid);
        p_84_m_axi_arvalid->set_sv_netview_offsetfromdp(13277288);
        xsim_sc_channel<0, bool > *p_84_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_arready.bind(*p_84_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_84_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_84->m_axi_rdata.bind(*p_84_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_84_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_84->m_axi_rresp.bind(*p_84_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_84_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_rvalid.bind(*p_84_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_84_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_84_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_84->m_axi_rready.bind(*p_84_m_axi_rready);
        p_84_m_axi_rready->set_sv_netview_offsetfromdp(13277568);
        sc_inst_85 = new pfm_dynamic_auto_cc_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.auto_cc");
        sc_inst_85->xsim_set_dbg_index(5669);
        xsim_sc_channel<0, bool > *p_85_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_aclk.bind(*p_85_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_85_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_aresetn.bind(*p_85_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_85_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_85->s_axi_awaddr.bind(*p_85_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_85_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_85->s_axi_awprot.bind(*p_85_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_85_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_awvalid.bind(*p_85_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_85_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_awready.bind(*p_85_s_axi_awready);
        p_85_s_axi_awready->set_sv_netview_offsetfromdp(13314592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_85_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_85->s_axi_wdata.bind(*p_85_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_85_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_85->s_axi_wstrb.bind(*p_85_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_85_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_wvalid.bind(*p_85_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_85_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_wready.bind(*p_85_s_axi_wready);
        p_85_s_axi_wready->set_sv_netview_offsetfromdp(13314816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_85_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_85->s_axi_bresp.bind(*p_85_s_axi_bresp);
        p_85_s_axi_bresp->set_sv_netview_offsetfromdp(13314872);
        xsim_sc_channel<0, bool > *p_85_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_bvalid.bind(*p_85_s_axi_bvalid);
        p_85_s_axi_bvalid->set_sv_netview_offsetfromdp(13314928);
        xsim_sc_channel<0, bool > *p_85_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_bready.bind(*p_85_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_85_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_85->s_axi_araddr.bind(*p_85_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_85_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_85->s_axi_arprot.bind(*p_85_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_85_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_arvalid.bind(*p_85_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_85_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_arready.bind(*p_85_s_axi_arready);
        p_85_s_axi_arready->set_sv_netview_offsetfromdp(13315208);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_85_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_85->s_axi_rdata.bind(*p_85_s_axi_rdata);
        p_85_s_axi_rdata->set_sv_netview_offsetfromdp(13315264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_85_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_85->s_axi_rresp.bind(*p_85_s_axi_rresp);
        p_85_s_axi_rresp->set_sv_netview_offsetfromdp(13315320);
        xsim_sc_channel<0, bool > *p_85_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_rvalid.bind(*p_85_s_axi_rvalid);
        p_85_s_axi_rvalid->set_sv_netview_offsetfromdp(13315376);
        xsim_sc_channel<0, bool > *p_85_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_85->s_axi_rready.bind(*p_85_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_85_s_axi_rready);
        xsim_sc_channel<0, bool > *p_85_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_aclk.bind(*p_85_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_85_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_aresetn.bind(*p_85_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_85_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_85->m_axi_awaddr.bind(*p_85_m_axi_awaddr);
        p_85_m_axi_awaddr->set_sv_netview_offsetfromdp(13315600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_85_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_85->m_axi_awprot.bind(*p_85_m_axi_awprot);
        p_85_m_axi_awprot->set_sv_netview_offsetfromdp(13315656);
        xsim_sc_channel<0, bool > *p_85_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_awvalid.bind(*p_85_m_axi_awvalid);
        p_85_m_axi_awvalid->set_sv_netview_offsetfromdp(13315712);
        xsim_sc_channel<0, bool > *p_85_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_awready.bind(*p_85_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_85_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_85->m_axi_wdata.bind(*p_85_m_axi_wdata);
        p_85_m_axi_wdata->set_sv_netview_offsetfromdp(13315824);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_85_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_85->m_axi_wstrb.bind(*p_85_m_axi_wstrb);
        p_85_m_axi_wstrb->set_sv_netview_offsetfromdp(13315880);
        xsim_sc_channel<0, bool > *p_85_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_wvalid.bind(*p_85_m_axi_wvalid);
        p_85_m_axi_wvalid->set_sv_netview_offsetfromdp(13315936);
        xsim_sc_channel<0, bool > *p_85_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_wready.bind(*p_85_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_85_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_85->m_axi_bresp.bind(*p_85_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_85_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_bvalid.bind(*p_85_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_85_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_bready.bind(*p_85_m_axi_bready);
        p_85_m_axi_bready->set_sv_netview_offsetfromdp(13316160);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_85_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_85->m_axi_araddr.bind(*p_85_m_axi_araddr);
        p_85_m_axi_araddr->set_sv_netview_offsetfromdp(13316216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_85_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_85->m_axi_arprot.bind(*p_85_m_axi_arprot);
        p_85_m_axi_arprot->set_sv_netview_offsetfromdp(13316272);
        xsim_sc_channel<0, bool > *p_85_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_arvalid.bind(*p_85_m_axi_arvalid);
        p_85_m_axi_arvalid->set_sv_netview_offsetfromdp(13316328);
        xsim_sc_channel<0, bool > *p_85_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_arready.bind(*p_85_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_85_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_85->m_axi_rdata.bind(*p_85_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_85_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_85->m_axi_rresp.bind(*p_85_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_85_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_rvalid.bind(*p_85_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_85_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_85_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_85->m_axi_rready.bind(*p_85_m_axi_rready);
        p_85_m_axi_rready->set_sv_netview_offsetfromdp(13316608);
        sc_inst_86 = new pfm_dynamic_m02_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m02_couplers.m02_regslice");
        sc_inst_86->xsim_set_dbg_index(5670);
        xsim_sc_channel<0, bool > *p_86_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_86->aclk.bind(*p_86_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_86_aclk);
        xsim_sc_channel<0, bool > *p_86_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_86->aresetn.bind(*p_86_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_86_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_86_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_86->s_axi_awaddr.bind(*p_86_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_86_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_86->s_axi_awprot.bind(*p_86_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_86_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_awvalid.bind(*p_86_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_86_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_awready.bind(*p_86_s_axi_awready);
        p_86_s_axi_awready->set_sv_netview_offsetfromdp(13316992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_86_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_86->s_axi_wdata.bind(*p_86_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_86_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_86->s_axi_wstrb.bind(*p_86_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_86_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_wvalid.bind(*p_86_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_86_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_wready.bind(*p_86_s_axi_wready);
        p_86_s_axi_wready->set_sv_netview_offsetfromdp(13317216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_86_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_86->s_axi_bresp.bind(*p_86_s_axi_bresp);
        p_86_s_axi_bresp->set_sv_netview_offsetfromdp(13317272);
        xsim_sc_channel<0, bool > *p_86_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_bvalid.bind(*p_86_s_axi_bvalid);
        p_86_s_axi_bvalid->set_sv_netview_offsetfromdp(13317328);
        xsim_sc_channel<0, bool > *p_86_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_bready.bind(*p_86_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_86_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_86->s_axi_araddr.bind(*p_86_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_86_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_86->s_axi_arprot.bind(*p_86_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_86_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_arvalid.bind(*p_86_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_86_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_arready.bind(*p_86_s_axi_arready);
        p_86_s_axi_arready->set_sv_netview_offsetfromdp(13317608);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_86_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_86->s_axi_rdata.bind(*p_86_s_axi_rdata);
        p_86_s_axi_rdata->set_sv_netview_offsetfromdp(13317664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_86_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_86->s_axi_rresp.bind(*p_86_s_axi_rresp);
        p_86_s_axi_rresp->set_sv_netview_offsetfromdp(13317720);
        xsim_sc_channel<0, bool > *p_86_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_rvalid.bind(*p_86_s_axi_rvalid);
        p_86_s_axi_rvalid->set_sv_netview_offsetfromdp(13317776);
        xsim_sc_channel<0, bool > *p_86_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_86->s_axi_rready.bind(*p_86_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_86_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_86_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_86->m_axi_awaddr.bind(*p_86_m_axi_awaddr);
        p_86_m_axi_awaddr->set_sv_netview_offsetfromdp(13317888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_86_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_86->m_axi_awprot.bind(*p_86_m_axi_awprot);
        p_86_m_axi_awprot->set_sv_netview_offsetfromdp(13317944);
        xsim_sc_channel<0, bool > *p_86_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_awvalid.bind(*p_86_m_axi_awvalid);
        p_86_m_axi_awvalid->set_sv_netview_offsetfromdp(13318000);
        xsim_sc_channel<0, bool > *p_86_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_awready.bind(*p_86_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_86_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_86->m_axi_wdata.bind(*p_86_m_axi_wdata);
        p_86_m_axi_wdata->set_sv_netview_offsetfromdp(13318112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_86_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_86->m_axi_wstrb.bind(*p_86_m_axi_wstrb);
        p_86_m_axi_wstrb->set_sv_netview_offsetfromdp(13318168);
        xsim_sc_channel<0, bool > *p_86_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_wvalid.bind(*p_86_m_axi_wvalid);
        p_86_m_axi_wvalid->set_sv_netview_offsetfromdp(13318224);
        xsim_sc_channel<0, bool > *p_86_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_wready.bind(*p_86_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_86_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_86->m_axi_bresp.bind(*p_86_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_86_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_bvalid.bind(*p_86_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_86_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_bready.bind(*p_86_m_axi_bready);
        p_86_m_axi_bready->set_sv_netview_offsetfromdp(13318448);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_86_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_86->m_axi_araddr.bind(*p_86_m_axi_araddr);
        p_86_m_axi_araddr->set_sv_netview_offsetfromdp(13318504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_86_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_86->m_axi_arprot.bind(*p_86_m_axi_arprot);
        p_86_m_axi_arprot->set_sv_netview_offsetfromdp(13318560);
        xsim_sc_channel<0, bool > *p_86_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_arvalid.bind(*p_86_m_axi_arvalid);
        p_86_m_axi_arvalid->set_sv_netview_offsetfromdp(13318616);
        xsim_sc_channel<0, bool > *p_86_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_arready.bind(*p_86_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_86_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_86->m_axi_rdata.bind(*p_86_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_86_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_86->m_axi_rresp.bind(*p_86_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_86_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_rvalid.bind(*p_86_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_86_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_86_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_86->m_axi_rready.bind(*p_86_m_axi_rready);
        p_86_m_axi_rready->set_sv_netview_offsetfromdp(13318896);
        sc_inst_87 = new pfm_dynamic_auto_cc_1(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.auto_cc");
        sc_inst_87->xsim_set_dbg_index(5713);
        xsim_sc_channel<0, bool > *p_87_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_aclk.bind(*p_87_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_87_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_aresetn.bind(*p_87_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_87_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_87->s_axi_awaddr.bind(*p_87_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_87_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_87->s_axi_awprot.bind(*p_87_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_87_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_awvalid.bind(*p_87_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_87_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_awready.bind(*p_87_s_axi_awready);
        p_87_s_axi_awready->set_sv_netview_offsetfromdp(13355920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_87_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_87->s_axi_wdata.bind(*p_87_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_87_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_87->s_axi_wstrb.bind(*p_87_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_87_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_wvalid.bind(*p_87_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_87_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_wready.bind(*p_87_s_axi_wready);
        p_87_s_axi_wready->set_sv_netview_offsetfromdp(13356144);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_87_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_87->s_axi_bresp.bind(*p_87_s_axi_bresp);
        p_87_s_axi_bresp->set_sv_netview_offsetfromdp(13356200);
        xsim_sc_channel<0, bool > *p_87_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_bvalid.bind(*p_87_s_axi_bvalid);
        p_87_s_axi_bvalid->set_sv_netview_offsetfromdp(13356256);
        xsim_sc_channel<0, bool > *p_87_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_bready.bind(*p_87_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_87_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_87->s_axi_araddr.bind(*p_87_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_87_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_87->s_axi_arprot.bind(*p_87_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_87_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_arvalid.bind(*p_87_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_87_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_arready.bind(*p_87_s_axi_arready);
        p_87_s_axi_arready->set_sv_netview_offsetfromdp(13356536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_87_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_87->s_axi_rdata.bind(*p_87_s_axi_rdata);
        p_87_s_axi_rdata->set_sv_netview_offsetfromdp(13356592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_87_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_87->s_axi_rresp.bind(*p_87_s_axi_rresp);
        p_87_s_axi_rresp->set_sv_netview_offsetfromdp(13356648);
        xsim_sc_channel<0, bool > *p_87_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_rvalid.bind(*p_87_s_axi_rvalid);
        p_87_s_axi_rvalid->set_sv_netview_offsetfromdp(13356704);
        xsim_sc_channel<0, bool > *p_87_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_87->s_axi_rready.bind(*p_87_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_87_s_axi_rready);
        xsim_sc_channel<0, bool > *p_87_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_aclk.bind(*p_87_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_87_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_aresetn.bind(*p_87_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_87_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_87->m_axi_awaddr.bind(*p_87_m_axi_awaddr);
        p_87_m_axi_awaddr->set_sv_netview_offsetfromdp(13356928);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_87_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_87->m_axi_awprot.bind(*p_87_m_axi_awprot);
        p_87_m_axi_awprot->set_sv_netview_offsetfromdp(13356984);
        xsim_sc_channel<0, bool > *p_87_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_awvalid.bind(*p_87_m_axi_awvalid);
        p_87_m_axi_awvalid->set_sv_netview_offsetfromdp(13357040);
        xsim_sc_channel<0, bool > *p_87_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_awready.bind(*p_87_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_87_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_87->m_axi_wdata.bind(*p_87_m_axi_wdata);
        p_87_m_axi_wdata->set_sv_netview_offsetfromdp(13357152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_87_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_87->m_axi_wstrb.bind(*p_87_m_axi_wstrb);
        p_87_m_axi_wstrb->set_sv_netview_offsetfromdp(13357208);
        xsim_sc_channel<0, bool > *p_87_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_wvalid.bind(*p_87_m_axi_wvalid);
        p_87_m_axi_wvalid->set_sv_netview_offsetfromdp(13357264);
        xsim_sc_channel<0, bool > *p_87_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_wready.bind(*p_87_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_87_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_87->m_axi_bresp.bind(*p_87_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_87_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_bvalid.bind(*p_87_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_87_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_bready.bind(*p_87_m_axi_bready);
        p_87_m_axi_bready->set_sv_netview_offsetfromdp(13357488);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_87_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_87->m_axi_araddr.bind(*p_87_m_axi_araddr);
        p_87_m_axi_araddr->set_sv_netview_offsetfromdp(13357544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_87_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_87->m_axi_arprot.bind(*p_87_m_axi_arprot);
        p_87_m_axi_arprot->set_sv_netview_offsetfromdp(13357600);
        xsim_sc_channel<0, bool > *p_87_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_arvalid.bind(*p_87_m_axi_arvalid);
        p_87_m_axi_arvalid->set_sv_netview_offsetfromdp(13357656);
        xsim_sc_channel<0, bool > *p_87_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_arready.bind(*p_87_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_87_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_87->m_axi_rdata.bind(*p_87_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_87_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_87->m_axi_rresp.bind(*p_87_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_87_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_rvalid.bind(*p_87_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_87_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_87_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_87->m_axi_rready.bind(*p_87_m_axi_rready);
        p_87_m_axi_rready->set_sv_netview_offsetfromdp(13357936);
        sc_inst_88 = new pfm_dynamic_m03_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m03_couplers.m03_regslice");
        sc_inst_88->xsim_set_dbg_index(5714);
        xsim_sc_channel<0, bool > *p_88_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_88->aclk.bind(*p_88_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_88_aclk);
        xsim_sc_channel<0, bool > *p_88_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_88->aresetn.bind(*p_88_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_88_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_88_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_88->s_axi_awaddr.bind(*p_88_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_88_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_88->s_axi_awprot.bind(*p_88_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_88_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_awvalid.bind(*p_88_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_88_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_awready.bind(*p_88_s_axi_awready);
        p_88_s_axi_awready->set_sv_netview_offsetfromdp(13358320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_88_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_88->s_axi_wdata.bind(*p_88_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_88_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_88->s_axi_wstrb.bind(*p_88_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_88_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_wvalid.bind(*p_88_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_88_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_wready.bind(*p_88_s_axi_wready);
        p_88_s_axi_wready->set_sv_netview_offsetfromdp(13358544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_88_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_88->s_axi_bresp.bind(*p_88_s_axi_bresp);
        p_88_s_axi_bresp->set_sv_netview_offsetfromdp(13358600);
        xsim_sc_channel<0, bool > *p_88_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_bvalid.bind(*p_88_s_axi_bvalid);
        p_88_s_axi_bvalid->set_sv_netview_offsetfromdp(13358656);
        xsim_sc_channel<0, bool > *p_88_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_bready.bind(*p_88_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_88_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_88->s_axi_araddr.bind(*p_88_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_88_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_88->s_axi_arprot.bind(*p_88_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_88_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_arvalid.bind(*p_88_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_88_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_arready.bind(*p_88_s_axi_arready);
        p_88_s_axi_arready->set_sv_netview_offsetfromdp(13358936);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_88_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_88->s_axi_rdata.bind(*p_88_s_axi_rdata);
        p_88_s_axi_rdata->set_sv_netview_offsetfromdp(13358992);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_88_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_88->s_axi_rresp.bind(*p_88_s_axi_rresp);
        p_88_s_axi_rresp->set_sv_netview_offsetfromdp(13359048);
        xsim_sc_channel<0, bool > *p_88_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_rvalid.bind(*p_88_s_axi_rvalid);
        p_88_s_axi_rvalid->set_sv_netview_offsetfromdp(13359104);
        xsim_sc_channel<0, bool > *p_88_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_88->s_axi_rready.bind(*p_88_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_88_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_88_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_88->m_axi_awaddr.bind(*p_88_m_axi_awaddr);
        p_88_m_axi_awaddr->set_sv_netview_offsetfromdp(13359216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_88_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_88->m_axi_awprot.bind(*p_88_m_axi_awprot);
        p_88_m_axi_awprot->set_sv_netview_offsetfromdp(13359272);
        xsim_sc_channel<0, bool > *p_88_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_awvalid.bind(*p_88_m_axi_awvalid);
        p_88_m_axi_awvalid->set_sv_netview_offsetfromdp(13359328);
        xsim_sc_channel<0, bool > *p_88_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_awready.bind(*p_88_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_88_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_88->m_axi_wdata.bind(*p_88_m_axi_wdata);
        p_88_m_axi_wdata->set_sv_netview_offsetfromdp(13359440);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_88_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_88->m_axi_wstrb.bind(*p_88_m_axi_wstrb);
        p_88_m_axi_wstrb->set_sv_netview_offsetfromdp(13359496);
        xsim_sc_channel<0, bool > *p_88_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_wvalid.bind(*p_88_m_axi_wvalid);
        p_88_m_axi_wvalid->set_sv_netview_offsetfromdp(13359552);
        xsim_sc_channel<0, bool > *p_88_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_wready.bind(*p_88_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_88_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_88->m_axi_bresp.bind(*p_88_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_88_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_bvalid.bind(*p_88_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_88_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_bready.bind(*p_88_m_axi_bready);
        p_88_m_axi_bready->set_sv_netview_offsetfromdp(13359776);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_88_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_88->m_axi_araddr.bind(*p_88_m_axi_araddr);
        p_88_m_axi_araddr->set_sv_netview_offsetfromdp(13359832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_88_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_88->m_axi_arprot.bind(*p_88_m_axi_arprot);
        p_88_m_axi_arprot->set_sv_netview_offsetfromdp(13359888);
        xsim_sc_channel<0, bool > *p_88_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_arvalid.bind(*p_88_m_axi_arvalid);
        p_88_m_axi_arvalid->set_sv_netview_offsetfromdp(13359944);
        xsim_sc_channel<0, bool > *p_88_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_arready.bind(*p_88_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_88_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_88->m_axi_rdata.bind(*p_88_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_88_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_88->m_axi_rresp.bind(*p_88_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_88_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_rvalid.bind(*p_88_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_88_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_88_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_88->m_axi_rready.bind(*p_88_m_axi_rready);
        p_88_m_axi_rready->set_sv_netview_offsetfromdp(13360224);
        sc_inst_89 = new pfm_dynamic_auto_cc_2(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m04_couplers.auto_cc");
        sc_inst_89->xsim_set_dbg_index(5757);
        xsim_sc_channel<0, bool > *p_89_s_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_aclk.bind(*p_89_s_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_aclk);
        xsim_sc_channel<0, bool > *p_89_s_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_aresetn.bind(*p_89_s_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_89_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_89->s_axi_awaddr.bind(*p_89_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_89_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_89->s_axi_awprot.bind(*p_89_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_89_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_awvalid.bind(*p_89_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_89_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_awready.bind(*p_89_s_axi_awready);
        p_89_s_axi_awready->set_sv_netview_offsetfromdp(13397248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_89_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_89->s_axi_wdata.bind(*p_89_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_89_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_89->s_axi_wstrb.bind(*p_89_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_89_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_wvalid.bind(*p_89_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_89_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_wready.bind(*p_89_s_axi_wready);
        p_89_s_axi_wready->set_sv_netview_offsetfromdp(13397472);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_89_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_89->s_axi_bresp.bind(*p_89_s_axi_bresp);
        p_89_s_axi_bresp->set_sv_netview_offsetfromdp(13397528);
        xsim_sc_channel<0, bool > *p_89_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_bvalid.bind(*p_89_s_axi_bvalid);
        p_89_s_axi_bvalid->set_sv_netview_offsetfromdp(13397584);
        xsim_sc_channel<0, bool > *p_89_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_bready.bind(*p_89_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_89_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_89->s_axi_araddr.bind(*p_89_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_89_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_89->s_axi_arprot.bind(*p_89_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_89_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_arvalid.bind(*p_89_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_89_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_arready.bind(*p_89_s_axi_arready);
        p_89_s_axi_arready->set_sv_netview_offsetfromdp(13397864);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_89_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_89->s_axi_rdata.bind(*p_89_s_axi_rdata);
        p_89_s_axi_rdata->set_sv_netview_offsetfromdp(13397920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_89_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_89->s_axi_rresp.bind(*p_89_s_axi_rresp);
        p_89_s_axi_rresp->set_sv_netview_offsetfromdp(13397976);
        xsim_sc_channel<0, bool > *p_89_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_rvalid.bind(*p_89_s_axi_rvalid);
        p_89_s_axi_rvalid->set_sv_netview_offsetfromdp(13398032);
        xsim_sc_channel<0, bool > *p_89_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_89->s_axi_rready.bind(*p_89_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_89_s_axi_rready);
        xsim_sc_channel<0, bool > *p_89_m_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_aclk.bind(*p_89_m_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_aclk);
        xsim_sc_channel<0, bool > *p_89_m_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_aresetn.bind(*p_89_m_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_89_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_89->m_axi_awaddr.bind(*p_89_m_axi_awaddr);
        p_89_m_axi_awaddr->set_sv_netview_offsetfromdp(13398256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_89_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_89->m_axi_awprot.bind(*p_89_m_axi_awprot);
        p_89_m_axi_awprot->set_sv_netview_offsetfromdp(13398312);
        xsim_sc_channel<0, bool > *p_89_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_awvalid.bind(*p_89_m_axi_awvalid);
        p_89_m_axi_awvalid->set_sv_netview_offsetfromdp(13398368);
        xsim_sc_channel<0, bool > *p_89_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_awready.bind(*p_89_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_89_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_89->m_axi_wdata.bind(*p_89_m_axi_wdata);
        p_89_m_axi_wdata->set_sv_netview_offsetfromdp(13398480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_89_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_89->m_axi_wstrb.bind(*p_89_m_axi_wstrb);
        p_89_m_axi_wstrb->set_sv_netview_offsetfromdp(13398536);
        xsim_sc_channel<0, bool > *p_89_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_wvalid.bind(*p_89_m_axi_wvalid);
        p_89_m_axi_wvalid->set_sv_netview_offsetfromdp(13398592);
        xsim_sc_channel<0, bool > *p_89_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_wready.bind(*p_89_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_89_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_89->m_axi_bresp.bind(*p_89_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_89_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_bvalid.bind(*p_89_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_89_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_bready.bind(*p_89_m_axi_bready);
        p_89_m_axi_bready->set_sv_netview_offsetfromdp(13398816);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_89_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_89->m_axi_araddr.bind(*p_89_m_axi_araddr);
        p_89_m_axi_araddr->set_sv_netview_offsetfromdp(13398872);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_89_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_89->m_axi_arprot.bind(*p_89_m_axi_arprot);
        p_89_m_axi_arprot->set_sv_netview_offsetfromdp(13398928);
        xsim_sc_channel<0, bool > *p_89_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_arvalid.bind(*p_89_m_axi_arvalid);
        p_89_m_axi_arvalid->set_sv_netview_offsetfromdp(13398984);
        xsim_sc_channel<0, bool > *p_89_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_arready.bind(*p_89_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_89_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_89->m_axi_rdata.bind(*p_89_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_89_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_89->m_axi_rresp.bind(*p_89_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_89_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_rvalid.bind(*p_89_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_89_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_89_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_89->m_axi_rready.bind(*p_89_m_axi_rready);
        p_89_m_axi_rready->set_sv_netview_offsetfromdp(13399264);
        sc_inst_90 = new pfm_dynamic_m04_regslice_4(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.m04_couplers.m04_regslice");
        sc_inst_90->xsim_set_dbg_index(5758);
        xsim_sc_channel<0, bool > *p_90_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_90->aclk.bind(*p_90_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_90_aclk);
        xsim_sc_channel<0, bool > *p_90_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_90->aresetn.bind(*p_90_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_90_aresetn);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_90_s_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_90->s_axi_awaddr.bind(*p_90_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_90_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_90->s_axi_awprot.bind(*p_90_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_90_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_awvalid.bind(*p_90_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_90_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_awready.bind(*p_90_s_axi_awready);
        p_90_s_axi_awready->set_sv_netview_offsetfromdp(13399648);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_90_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_90->s_axi_wdata.bind(*p_90_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_90_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_90->s_axi_wstrb.bind(*p_90_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_90_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_wvalid.bind(*p_90_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_90_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_wready.bind(*p_90_s_axi_wready);
        p_90_s_axi_wready->set_sv_netview_offsetfromdp(13399872);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_90_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_90->s_axi_bresp.bind(*p_90_s_axi_bresp);
        p_90_s_axi_bresp->set_sv_netview_offsetfromdp(13399928);
        xsim_sc_channel<0, bool > *p_90_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_bvalid.bind(*p_90_s_axi_bvalid);
        p_90_s_axi_bvalid->set_sv_netview_offsetfromdp(13399984);
        xsim_sc_channel<0, bool > *p_90_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_bready.bind(*p_90_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_bready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_90_s_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_90->s_axi_araddr.bind(*p_90_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_90_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_90->s_axi_arprot.bind(*p_90_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_90_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_arvalid.bind(*p_90_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_90_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_arready.bind(*p_90_s_axi_arready);
        p_90_s_axi_arready->set_sv_netview_offsetfromdp(13400264);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_90_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_90->s_axi_rdata.bind(*p_90_s_axi_rdata);
        p_90_s_axi_rdata->set_sv_netview_offsetfromdp(13400320);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_90_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_90->s_axi_rresp.bind(*p_90_s_axi_rresp);
        p_90_s_axi_rresp->set_sv_netview_offsetfromdp(13400376);
        xsim_sc_channel<0, bool > *p_90_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_rvalid.bind(*p_90_s_axi_rvalid);
        p_90_s_axi_rvalid->set_sv_netview_offsetfromdp(13400432);
        xsim_sc_channel<0, bool > *p_90_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_90->s_axi_rready.bind(*p_90_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_90_s_axi_rready);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_90_m_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_90->m_axi_awaddr.bind(*p_90_m_axi_awaddr);
        p_90_m_axi_awaddr->set_sv_netview_offsetfromdp(13400544);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_90_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_90->m_axi_awprot.bind(*p_90_m_axi_awprot);
        p_90_m_axi_awprot->set_sv_netview_offsetfromdp(13400600);
        xsim_sc_channel<0, bool > *p_90_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_awvalid.bind(*p_90_m_axi_awvalid);
        p_90_m_axi_awvalid->set_sv_netview_offsetfromdp(13400656);
        xsim_sc_channel<0, bool > *p_90_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_awready.bind(*p_90_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_90_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_90->m_axi_wdata.bind(*p_90_m_axi_wdata);
        p_90_m_axi_wdata->set_sv_netview_offsetfromdp(13400768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_90_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_90->m_axi_wstrb.bind(*p_90_m_axi_wstrb);
        p_90_m_axi_wstrb->set_sv_netview_offsetfromdp(13400824);
        xsim_sc_channel<0, bool > *p_90_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_wvalid.bind(*p_90_m_axi_wvalid);
        p_90_m_axi_wvalid->set_sv_netview_offsetfromdp(13400880);
        xsim_sc_channel<0, bool > *p_90_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_wready.bind(*p_90_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_90_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_90->m_axi_bresp.bind(*p_90_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_bresp);
        xsim_sc_channel<0, bool > *p_90_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_bvalid.bind(*p_90_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_90_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_bready.bind(*p_90_m_axi_bready);
        p_90_m_axi_bready->set_sv_netview_offsetfromdp(13401104);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_90_m_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_90->m_axi_araddr.bind(*p_90_m_axi_araddr);
        p_90_m_axi_araddr->set_sv_netview_offsetfromdp(13401160);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_90_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_90->m_axi_arprot.bind(*p_90_m_axi_arprot);
        p_90_m_axi_arprot->set_sv_netview_offsetfromdp(13401216);
        xsim_sc_channel<0, bool > *p_90_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_arvalid.bind(*p_90_m_axi_arvalid);
        p_90_m_axi_arvalid->set_sv_netview_offsetfromdp(13401272);
        xsim_sc_channel<0, bool > *p_90_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_arready.bind(*p_90_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_90_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_90->m_axi_rdata.bind(*p_90_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_90_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_90->m_axi_rresp.bind(*p_90_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_90_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_rvalid.bind(*p_90_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_90_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_90_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_90->m_axi_rready.bind(*p_90_m_axi_rready);
        p_90_m_axi_rready->set_sv_netview_offsetfromdp(13401552);
        sc_inst_91 = new pfm_dynamic_xbar_3(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.slr0.interconnect_axilite_user_0.xbar");
        sc_inst_91->xsim_set_dbg_index(2275);
        xsim_sc_channel<0, bool > *p_91_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_91->aclk.bind(*p_91_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_91_aclk);
        xsim_sc_channel<0, bool > *p_91_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_91->aresetn.bind(*p_91_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_91_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_91_s_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_91->s_axi_awaddr.bind(*p_91_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_91_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_91->s_axi_awprot.bind(*p_91_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_awprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_awvalid.bind(*p_91_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_awready.bind(*p_91_s_axi_awready);
        p_91_s_axi_awready->set_sv_netview_offsetfromdp(13412112);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_91_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_91->s_axi_wdata.bind(*p_91_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_91_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_91->s_axi_wstrb.bind(*p_91_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_wvalid.bind(*p_91_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_wready.bind(*p_91_s_axi_wready);
        p_91_s_axi_wready->set_sv_netview_offsetfromdp(13412336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_91_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_91->s_axi_bresp.bind(*p_91_s_axi_bresp);
        p_91_s_axi_bresp->set_sv_netview_offsetfromdp(13412392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_bvalid.bind(*p_91_s_axi_bvalid);
        p_91_s_axi_bvalid->set_sv_netview_offsetfromdp(13412448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_bready.bind(*p_91_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_91_s_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_91->s_axi_araddr.bind(*p_91_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_91_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_91->s_axi_arprot.bind(*p_91_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_arprot);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_arvalid.bind(*p_91_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_arready.bind(*p_91_s_axi_arready);
        p_91_s_axi_arready->set_sv_netview_offsetfromdp(13412728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_91_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_91->s_axi_rdata.bind(*p_91_s_axi_rdata);
        p_91_s_axi_rdata->set_sv_netview_offsetfromdp(13412784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_91_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_91->s_axi_rresp.bind(*p_91_s_axi_rresp);
        p_91_s_axi_rresp->set_sv_netview_offsetfromdp(13412840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_rvalid.bind(*p_91_s_axi_rvalid);
        p_91_s_axi_rvalid->set_sv_netview_offsetfromdp(13412896);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_91_s_axi_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_91->s_axi_rready.bind(*p_91_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_91_s_axi_rready);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_91_m_axi_awaddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_91->m_axi_awaddr.bind(*p_91_m_axi_awaddr);
        p_91_m_axi_awaddr->set_sv_netview_offsetfromdp(13413008);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_91_m_axi_awprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_91->m_axi_awprot.bind(*p_91_m_axi_awprot);
        p_91_m_axi_awprot->set_sv_netview_offsetfromdp(13413064);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_awvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_awvalid.bind(*p_91_m_axi_awvalid);
        p_91_m_axi_awvalid->set_sv_netview_offsetfromdp(13413120);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_awready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_awready.bind(*p_91_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_awready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_91_m_axi_wdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_91->m_axi_wdata.bind(*p_91_m_axi_wdata);
        p_91_m_axi_wdata->set_sv_netview_offsetfromdp(13413232);
        xsim_sc_channel<20, sc_dt::sc_bv<20> > *p_91_m_axi_wstrb = new xsim_sc_channel<20, sc_dt::sc_bv<20> >();
        sc_inst_91->m_axi_wstrb.bind(*p_91_m_axi_wstrb);
        p_91_m_axi_wstrb->set_sv_netview_offsetfromdp(13413288);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_wvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_wvalid.bind(*p_91_m_axi_wvalid);
        p_91_m_axi_wvalid->set_sv_netview_offsetfromdp(13413344);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_wready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_wready.bind(*p_91_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_wready);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_91_m_axi_bresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_91->m_axi_bresp.bind(*p_91_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_bresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_bvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_bvalid.bind(*p_91_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_bvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_bready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_bready.bind(*p_91_m_axi_bready);
        p_91_m_axi_bready->set_sv_netview_offsetfromdp(13413568);
        xsim_sc_channel<320, sc_dt::sc_bv<320> > *p_91_m_axi_araddr = new xsim_sc_channel<320, sc_dt::sc_bv<320> >();
        sc_inst_91->m_axi_araddr.bind(*p_91_m_axi_araddr);
        p_91_m_axi_araddr->set_sv_netview_offsetfromdp(13413624);
        xsim_sc_channel<15, sc_dt::sc_bv<15> > *p_91_m_axi_arprot = new xsim_sc_channel<15, sc_dt::sc_bv<15> >();
        sc_inst_91->m_axi_arprot.bind(*p_91_m_axi_arprot);
        p_91_m_axi_arprot->set_sv_netview_offsetfromdp(13413680);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_arvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_arvalid.bind(*p_91_m_axi_arvalid);
        p_91_m_axi_arvalid->set_sv_netview_offsetfromdp(13413736);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_arready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_arready.bind(*p_91_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_arready);
        xsim_sc_channel<160, sc_dt::sc_bv<160> > *p_91_m_axi_rdata = new xsim_sc_channel<160, sc_dt::sc_bv<160> >();
        sc_inst_91->m_axi_rdata.bind(*p_91_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_rdata);
        xsim_sc_channel<10, sc_dt::sc_bv<10> > *p_91_m_axi_rresp = new xsim_sc_channel<10, sc_dt::sc_bv<10> >();
        sc_inst_91->m_axi_rresp.bind(*p_91_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_rresp);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_rvalid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_rvalid.bind(*p_91_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_91_m_axi_rvalid);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_91_m_axi_rready = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_91->m_axi_rready.bind(*p_91_m_axi_rready);
        p_91_m_axi_rready->set_sv_netview_offsetfromdp(13414016);
        sc_inst_92 = new pfm_dynamic_smartconn_data_0_0(".pfm_top_wrapper.pfm_top_i.pfm_dynamic_inst.smartconn_data_0");
        sc_inst_92->xsim_set_dbg_index(68);
        xsim_sc_channel<0, bool > *p_92_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_92->aclk.bind(*p_92_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_92_aclk);
        xsim_sc_channel<0, bool > *p_92_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_92->aresetn.bind(*p_92_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_92_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->S00_AXI_awid.bind(*p_92_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_92_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_92->S00_AXI_awaddr.bind(*p_92_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->S00_AXI_awlen.bind(*p_92_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->S00_AXI_awsize.bind(*p_92_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->S00_AXI_awburst.bind(*p_92_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->S00_AXI_awlock.bind(*p_92_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->S00_AXI_awcache.bind(*p_92_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->S00_AXI_awprot.bind(*p_92_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->S00_AXI_awqos.bind(*p_92_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awqos);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_awvalid.bind(*p_92_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_awready.bind(*p_92_S00_AXI_awready);
        p_92_S00_AXI_awready->set_sv_netview_offsetfromdp(14670720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->S00_AXI_wdata.bind(*p_92_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->S00_AXI_wstrb.bind(*p_92_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_wlast.bind(*p_92_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_wlast);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_wvalid.bind(*p_92_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_wready.bind(*p_92_S00_AXI_wready);
        p_92_S00_AXI_wready->set_sv_netview_offsetfromdp(14671000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->S00_AXI_bid.bind(*p_92_S00_AXI_bid);
        p_92_S00_AXI_bid->set_sv_netview_offsetfromdp(14671056);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->S00_AXI_bresp.bind(*p_92_S00_AXI_bresp);
        p_92_S00_AXI_bresp->set_sv_netview_offsetfromdp(14671112);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_bvalid.bind(*p_92_S00_AXI_bvalid);
        p_92_S00_AXI_bvalid->set_sv_netview_offsetfromdp(14671168);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_bready.bind(*p_92_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->S00_AXI_arid.bind(*p_92_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_92_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_92->S00_AXI_araddr.bind(*p_92_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->S00_AXI_arlen.bind(*p_92_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->S00_AXI_arsize.bind(*p_92_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->S00_AXI_arburst.bind(*p_92_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->S00_AXI_arlock.bind(*p_92_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->S00_AXI_arcache.bind(*p_92_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->S00_AXI_arprot.bind(*p_92_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->S00_AXI_arqos.bind(*p_92_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arqos);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_arvalid.bind(*p_92_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_arready.bind(*p_92_S00_AXI_arready);
        p_92_S00_AXI_arready->set_sv_netview_offsetfromdp(14671840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->S00_AXI_rid.bind(*p_92_S00_AXI_rid);
        p_92_S00_AXI_rid->set_sv_netview_offsetfromdp(14671896);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->S00_AXI_rdata.bind(*p_92_S00_AXI_rdata);
        p_92_S00_AXI_rdata->set_sv_netview_offsetfromdp(14671952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->S00_AXI_rresp.bind(*p_92_S00_AXI_rresp);
        p_92_S00_AXI_rresp->set_sv_netview_offsetfromdp(14672008);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_rlast.bind(*p_92_S00_AXI_rlast);
        p_92_S00_AXI_rlast->set_sv_netview_offsetfromdp(14672064);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_rvalid.bind(*p_92_S00_AXI_rvalid);
        p_92_S00_AXI_rvalid->set_sv_netview_offsetfromdp(14672120);
        xsim_sc_channel<0, bool > *p_92_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_92->S00_AXI_rready.bind(*p_92_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_S00_AXI_rready);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_92_M00_AXI_awaddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_92->M00_AXI_awaddr.bind(*p_92_M00_AXI_awaddr);
        p_92_M00_AXI_awaddr->set_sv_netview_offsetfromdp(14672232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M00_AXI_awlen.bind(*p_92_M00_AXI_awlen);
        p_92_M00_AXI_awlen->set_sv_netview_offsetfromdp(14672288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M00_AXI_awsize.bind(*p_92_M00_AXI_awsize);
        p_92_M00_AXI_awsize->set_sv_netview_offsetfromdp(14672344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M00_AXI_awburst.bind(*p_92_M00_AXI_awburst);
        p_92_M00_AXI_awburst->set_sv_netview_offsetfromdp(14672400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M00_AXI_awlock.bind(*p_92_M00_AXI_awlock);
        p_92_M00_AXI_awlock->set_sv_netview_offsetfromdp(14672456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M00_AXI_awcache.bind(*p_92_M00_AXI_awcache);
        p_92_M00_AXI_awcache->set_sv_netview_offsetfromdp(14672512);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M00_AXI_awprot.bind(*p_92_M00_AXI_awprot);
        p_92_M00_AXI_awprot->set_sv_netview_offsetfromdp(14672568);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M00_AXI_awqos.bind(*p_92_M00_AXI_awqos);
        p_92_M00_AXI_awqos->set_sv_netview_offsetfromdp(14672624);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_awvalid.bind(*p_92_M00_AXI_awvalid);
        p_92_M00_AXI_awvalid->set_sv_netview_offsetfromdp(14672680);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_awready.bind(*p_92_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->M00_AXI_wdata.bind(*p_92_M00_AXI_wdata);
        p_92_M00_AXI_wdata->set_sv_netview_offsetfromdp(14672792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M00_AXI_wstrb.bind(*p_92_M00_AXI_wstrb);
        p_92_M00_AXI_wstrb->set_sv_netview_offsetfromdp(14672848);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_wlast.bind(*p_92_M00_AXI_wlast);
        p_92_M00_AXI_wlast->set_sv_netview_offsetfromdp(14672904);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_wvalid.bind(*p_92_M00_AXI_wvalid);
        p_92_M00_AXI_wvalid->set_sv_netview_offsetfromdp(14672960);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_wready.bind(*p_92_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M00_AXI_bresp.bind(*p_92_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_bresp);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_bvalid.bind(*p_92_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_bready.bind(*p_92_M00_AXI_bready);
        p_92_M00_AXI_bready->set_sv_netview_offsetfromdp(14673184);
        xsim_sc_channel<38, sc_dt::sc_bv<38> > *p_92_M00_AXI_araddr = new xsim_sc_channel<38, sc_dt::sc_bv<38> >();
        sc_inst_92->M00_AXI_araddr.bind(*p_92_M00_AXI_araddr);
        p_92_M00_AXI_araddr->set_sv_netview_offsetfromdp(14673240);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M00_AXI_arlen.bind(*p_92_M00_AXI_arlen);
        p_92_M00_AXI_arlen->set_sv_netview_offsetfromdp(14673296);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M00_AXI_arsize.bind(*p_92_M00_AXI_arsize);
        p_92_M00_AXI_arsize->set_sv_netview_offsetfromdp(14673352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M00_AXI_arburst.bind(*p_92_M00_AXI_arburst);
        p_92_M00_AXI_arburst->set_sv_netview_offsetfromdp(14673408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M00_AXI_arlock.bind(*p_92_M00_AXI_arlock);
        p_92_M00_AXI_arlock->set_sv_netview_offsetfromdp(14673464);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M00_AXI_arcache.bind(*p_92_M00_AXI_arcache);
        p_92_M00_AXI_arcache->set_sv_netview_offsetfromdp(14673520);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M00_AXI_arprot.bind(*p_92_M00_AXI_arprot);
        p_92_M00_AXI_arprot->set_sv_netview_offsetfromdp(14673576);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M00_AXI_arqos.bind(*p_92_M00_AXI_arqos);
        p_92_M00_AXI_arqos->set_sv_netview_offsetfromdp(14673632);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_arvalid.bind(*p_92_M00_AXI_arvalid);
        p_92_M00_AXI_arvalid->set_sv_netview_offsetfromdp(14673688);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_arready.bind(*p_92_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->M00_AXI_rdata.bind(*p_92_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M00_AXI_rresp.bind(*p_92_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_rlast.bind(*p_92_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_rvalid.bind(*p_92_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_92_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M00_AXI_rready.bind(*p_92_M00_AXI_rready);
        p_92_M00_AXI_rready->set_sv_netview_offsetfromdp(14674024);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_92_M01_AXI_awaddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_92->M01_AXI_awaddr.bind(*p_92_M01_AXI_awaddr);
        p_92_M01_AXI_awaddr->set_sv_netview_offsetfromdp(14674080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M01_AXI_awlen.bind(*p_92_M01_AXI_awlen);
        p_92_M01_AXI_awlen->set_sv_netview_offsetfromdp(14674136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M01_AXI_awsize.bind(*p_92_M01_AXI_awsize);
        p_92_M01_AXI_awsize->set_sv_netview_offsetfromdp(14674192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M01_AXI_awburst.bind(*p_92_M01_AXI_awburst);
        p_92_M01_AXI_awburst->set_sv_netview_offsetfromdp(14674248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M01_AXI_awlock.bind(*p_92_M01_AXI_awlock);
        p_92_M01_AXI_awlock->set_sv_netview_offsetfromdp(14674304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M01_AXI_awcache.bind(*p_92_M01_AXI_awcache);
        p_92_M01_AXI_awcache->set_sv_netview_offsetfromdp(14674360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M01_AXI_awprot.bind(*p_92_M01_AXI_awprot);
        p_92_M01_AXI_awprot->set_sv_netview_offsetfromdp(14674416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M01_AXI_awqos.bind(*p_92_M01_AXI_awqos);
        p_92_M01_AXI_awqos->set_sv_netview_offsetfromdp(14674472);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_awvalid.bind(*p_92_M01_AXI_awvalid);
        p_92_M01_AXI_awvalid->set_sv_netview_offsetfromdp(14674528);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_awready.bind(*p_92_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->M01_AXI_wdata.bind(*p_92_M01_AXI_wdata);
        p_92_M01_AXI_wdata->set_sv_netview_offsetfromdp(14674640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M01_AXI_wstrb.bind(*p_92_M01_AXI_wstrb);
        p_92_M01_AXI_wstrb->set_sv_netview_offsetfromdp(14674696);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_wlast.bind(*p_92_M01_AXI_wlast);
        p_92_M01_AXI_wlast->set_sv_netview_offsetfromdp(14674752);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_wvalid.bind(*p_92_M01_AXI_wvalid);
        p_92_M01_AXI_wvalid->set_sv_netview_offsetfromdp(14674808);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_wready.bind(*p_92_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M01_AXI_bresp.bind(*p_92_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_bresp);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_bvalid.bind(*p_92_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_bready.bind(*p_92_M01_AXI_bready);
        p_92_M01_AXI_bready->set_sv_netview_offsetfromdp(14675032);
        xsim_sc_channel<37, sc_dt::sc_bv<37> > *p_92_M01_AXI_araddr = new xsim_sc_channel<37, sc_dt::sc_bv<37> >();
        sc_inst_92->M01_AXI_araddr.bind(*p_92_M01_AXI_araddr);
        p_92_M01_AXI_araddr->set_sv_netview_offsetfromdp(14675088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M01_AXI_arlen.bind(*p_92_M01_AXI_arlen);
        p_92_M01_AXI_arlen->set_sv_netview_offsetfromdp(14675144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M01_AXI_arsize.bind(*p_92_M01_AXI_arsize);
        p_92_M01_AXI_arsize->set_sv_netview_offsetfromdp(14675200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M01_AXI_arburst.bind(*p_92_M01_AXI_arburst);
        p_92_M01_AXI_arburst->set_sv_netview_offsetfromdp(14675256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M01_AXI_arlock.bind(*p_92_M01_AXI_arlock);
        p_92_M01_AXI_arlock->set_sv_netview_offsetfromdp(14675312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M01_AXI_arcache.bind(*p_92_M01_AXI_arcache);
        p_92_M01_AXI_arcache->set_sv_netview_offsetfromdp(14675368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M01_AXI_arprot.bind(*p_92_M01_AXI_arprot);
        p_92_M01_AXI_arprot->set_sv_netview_offsetfromdp(14675424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M01_AXI_arqos.bind(*p_92_M01_AXI_arqos);
        p_92_M01_AXI_arqos->set_sv_netview_offsetfromdp(14675480);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_arvalid.bind(*p_92_M01_AXI_arvalid);
        p_92_M01_AXI_arvalid->set_sv_netview_offsetfromdp(14675536);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_arready.bind(*p_92_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->M01_AXI_rdata.bind(*p_92_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M01_AXI_rresp.bind(*p_92_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_rlast.bind(*p_92_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_rvalid.bind(*p_92_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_92_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M01_AXI_rready.bind(*p_92_M01_AXI_rready);
        p_92_M01_AXI_rready->set_sv_netview_offsetfromdp(14675872);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_92_M02_AXI_awaddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_92->M02_AXI_awaddr.bind(*p_92_M02_AXI_awaddr);
        p_92_M02_AXI_awaddr->set_sv_netview_offsetfromdp(14675928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M02_AXI_awlen.bind(*p_92_M02_AXI_awlen);
        p_92_M02_AXI_awlen->set_sv_netview_offsetfromdp(14675984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M02_AXI_awsize.bind(*p_92_M02_AXI_awsize);
        p_92_M02_AXI_awsize->set_sv_netview_offsetfromdp(14676040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M02_AXI_awburst.bind(*p_92_M02_AXI_awburst);
        p_92_M02_AXI_awburst->set_sv_netview_offsetfromdp(14676096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M02_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M02_AXI_awlock.bind(*p_92_M02_AXI_awlock);
        p_92_M02_AXI_awlock->set_sv_netview_offsetfromdp(14676152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M02_AXI_awcache.bind(*p_92_M02_AXI_awcache);
        p_92_M02_AXI_awcache->set_sv_netview_offsetfromdp(14676208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M02_AXI_awprot.bind(*p_92_M02_AXI_awprot);
        p_92_M02_AXI_awprot->set_sv_netview_offsetfromdp(14676264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M02_AXI_awqos.bind(*p_92_M02_AXI_awqos);
        p_92_M02_AXI_awqos->set_sv_netview_offsetfromdp(14676320);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_awvalid.bind(*p_92_M02_AXI_awvalid);
        p_92_M02_AXI_awvalid->set_sv_netview_offsetfromdp(14676376);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_awready.bind(*p_92_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_92_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_92->M02_AXI_wdata.bind(*p_92_M02_AXI_wdata);
        p_92_M02_AXI_wdata->set_sv_netview_offsetfromdp(14676488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_92_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_92->M02_AXI_wstrb.bind(*p_92_M02_AXI_wstrb);
        p_92_M02_AXI_wstrb->set_sv_netview_offsetfromdp(14676544);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_wlast.bind(*p_92_M02_AXI_wlast);
        p_92_M02_AXI_wlast->set_sv_netview_offsetfromdp(14676600);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_wvalid.bind(*p_92_M02_AXI_wvalid);
        p_92_M02_AXI_wvalid->set_sv_netview_offsetfromdp(14676656);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_wready.bind(*p_92_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M02_AXI_bresp.bind(*p_92_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_bresp);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_bvalid.bind(*p_92_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_bready.bind(*p_92_M02_AXI_bready);
        p_92_M02_AXI_bready->set_sv_netview_offsetfromdp(14676880);
        xsim_sc_channel<33, sc_dt::sc_bv<33> > *p_92_M02_AXI_araddr = new xsim_sc_channel<33, sc_dt::sc_bv<33> >();
        sc_inst_92->M02_AXI_araddr.bind(*p_92_M02_AXI_araddr);
        p_92_M02_AXI_araddr->set_sv_netview_offsetfromdp(14676936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M02_AXI_arlen.bind(*p_92_M02_AXI_arlen);
        p_92_M02_AXI_arlen->set_sv_netview_offsetfromdp(14676992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M02_AXI_arsize.bind(*p_92_M02_AXI_arsize);
        p_92_M02_AXI_arsize->set_sv_netview_offsetfromdp(14677048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M02_AXI_arburst.bind(*p_92_M02_AXI_arburst);
        p_92_M02_AXI_arburst->set_sv_netview_offsetfromdp(14677104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M02_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M02_AXI_arlock.bind(*p_92_M02_AXI_arlock);
        p_92_M02_AXI_arlock->set_sv_netview_offsetfromdp(14677160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M02_AXI_arcache.bind(*p_92_M02_AXI_arcache);
        p_92_M02_AXI_arcache->set_sv_netview_offsetfromdp(14677216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M02_AXI_arprot.bind(*p_92_M02_AXI_arprot);
        p_92_M02_AXI_arprot->set_sv_netview_offsetfromdp(14677272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M02_AXI_arqos.bind(*p_92_M02_AXI_arqos);
        p_92_M02_AXI_arqos->set_sv_netview_offsetfromdp(14677328);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_arvalid.bind(*p_92_M02_AXI_arvalid);
        p_92_M02_AXI_arvalid->set_sv_netview_offsetfromdp(14677384);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_arready.bind(*p_92_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_92_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_92->M02_AXI_rdata.bind(*p_92_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M02_AXI_rresp.bind(*p_92_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_rresp);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_rlast.bind(*p_92_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_rlast);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_rvalid.bind(*p_92_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M02_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_92_M02_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M02_AXI_rready.bind(*p_92_M02_AXI_rready);
        p_92_M02_AXI_rready->set_sv_netview_offsetfromdp(14677720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_M03_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->M03_AXI_awaddr.bind(*p_92_M03_AXI_awaddr);
        p_92_M03_AXI_awaddr->set_sv_netview_offsetfromdp(14677776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M03_AXI_awlen.bind(*p_92_M03_AXI_awlen);
        p_92_M03_AXI_awlen->set_sv_netview_offsetfromdp(14677832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M03_AXI_awsize.bind(*p_92_M03_AXI_awsize);
        p_92_M03_AXI_awsize->set_sv_netview_offsetfromdp(14677888);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M03_AXI_awburst.bind(*p_92_M03_AXI_awburst);
        p_92_M03_AXI_awburst->set_sv_netview_offsetfromdp(14677944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M03_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M03_AXI_awlock.bind(*p_92_M03_AXI_awlock);
        p_92_M03_AXI_awlock->set_sv_netview_offsetfromdp(14678000);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M03_AXI_awcache.bind(*p_92_M03_AXI_awcache);
        p_92_M03_AXI_awcache->set_sv_netview_offsetfromdp(14678056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M03_AXI_awprot.bind(*p_92_M03_AXI_awprot);
        p_92_M03_AXI_awprot->set_sv_netview_offsetfromdp(14678112);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M03_AXI_awqos.bind(*p_92_M03_AXI_awqos);
        p_92_M03_AXI_awqos->set_sv_netview_offsetfromdp(14678168);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_awvalid.bind(*p_92_M03_AXI_awvalid);
        p_92_M03_AXI_awvalid->set_sv_netview_offsetfromdp(14678224);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_awready.bind(*p_92_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_92_M03_AXI_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_92->M03_AXI_wdata.bind(*p_92_M03_AXI_wdata);
        p_92_M03_AXI_wdata->set_sv_netview_offsetfromdp(14678336);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M03_AXI_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M03_AXI_wstrb.bind(*p_92_M03_AXI_wstrb);
        p_92_M03_AXI_wstrb->set_sv_netview_offsetfromdp(14678392);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_wlast.bind(*p_92_M03_AXI_wlast);
        p_92_M03_AXI_wlast->set_sv_netview_offsetfromdp(14678448);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_wvalid.bind(*p_92_M03_AXI_wvalid);
        p_92_M03_AXI_wvalid->set_sv_netview_offsetfromdp(14678504);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_wready.bind(*p_92_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M03_AXI_bresp.bind(*p_92_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_bresp);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_bvalid.bind(*p_92_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_bready.bind(*p_92_M03_AXI_bready);
        p_92_M03_AXI_bready->set_sv_netview_offsetfromdp(14678728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_92_M03_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_92->M03_AXI_araddr.bind(*p_92_M03_AXI_araddr);
        p_92_M03_AXI_araddr->set_sv_netview_offsetfromdp(14678784);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_92_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_92->M03_AXI_arlen.bind(*p_92_M03_AXI_arlen);
        p_92_M03_AXI_arlen->set_sv_netview_offsetfromdp(14678840);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M03_AXI_arsize.bind(*p_92_M03_AXI_arsize);
        p_92_M03_AXI_arsize->set_sv_netview_offsetfromdp(14678896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M03_AXI_arburst.bind(*p_92_M03_AXI_arburst);
        p_92_M03_AXI_arburst->set_sv_netview_offsetfromdp(14678952);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_92_M03_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_92->M03_AXI_arlock.bind(*p_92_M03_AXI_arlock);
        p_92_M03_AXI_arlock->set_sv_netview_offsetfromdp(14679008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M03_AXI_arcache.bind(*p_92_M03_AXI_arcache);
        p_92_M03_AXI_arcache->set_sv_netview_offsetfromdp(14679064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_92_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_92->M03_AXI_arprot.bind(*p_92_M03_AXI_arprot);
        p_92_M03_AXI_arprot->set_sv_netview_offsetfromdp(14679120);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_92_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_92->M03_AXI_arqos.bind(*p_92_M03_AXI_arqos);
        p_92_M03_AXI_arqos->set_sv_netview_offsetfromdp(14679176);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_arvalid.bind(*p_92_M03_AXI_arvalid);
        p_92_M03_AXI_arvalid->set_sv_netview_offsetfromdp(14679232);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_arready.bind(*p_92_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_arready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_92_M03_AXI_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_92->M03_AXI_rdata.bind(*p_92_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_92_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_92->M03_AXI_rresp.bind(*p_92_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_rresp);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_rlast.bind(*p_92_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_rlast);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_rvalid.bind(*p_92_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_92_M03_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_92_M03_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_92->M03_AXI_rready.bind(*p_92_M03_AXI_rready);
        p_92_M03_AXI_rready->set_sv_netview_offsetfromdp(14679568);
        sc_inst_93 = new pfm_top_sci(".pfm_top_wrapper.pfm_top_i.pfm_top_sci_inst");
        sc_inst_93->xsim_set_dbg_index(40);
        sc_inst_94 = new pfm_top_axi_vip_0_0(".pfm_top_wrapper.pfm_top_i.static_region.axi_vip_0");
        sc_inst_94->xsim_set_dbg_index(254);
        xsim_sc_channel<0, bool > *p_94_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_94->aclk.bind(*p_94_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_94_aclk);
        xsim_sc_channel<0, bool > *p_94_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_94->aresetn.bind(*p_94_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_94_aresetn);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->s_axi_awaddr.bind(*p_94_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_94_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_94->s_axi_awlen.bind(*p_94_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->s_axi_awburst.bind(*p_94_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_94_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_94->s_axi_awlock.bind(*p_94_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->s_axi_awcache.bind(*p_94_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_94_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_94->s_axi_awprot.bind(*p_94_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->s_axi_awqos.bind(*p_94_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->s_axi_awuser.bind(*p_94_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_94_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_awvalid.bind(*p_94_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_94_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_awready.bind(*p_94_s_axi_awready);
        p_94_s_axi_awready->set_sv_netview_offsetfromdp(14859424);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->s_axi_wdata.bind(*p_94_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->s_axi_wstrb.bind(*p_94_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_94_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_wlast.bind(*p_94_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_94_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_wvalid.bind(*p_94_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_94_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_wready.bind(*p_94_s_axi_wready);
        p_94_s_axi_wready->set_sv_netview_offsetfromdp(14859704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->s_axi_bresp.bind(*p_94_s_axi_bresp);
        p_94_s_axi_bresp->set_sv_netview_offsetfromdp(14859760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_94_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_94->s_axi_buser.bind(*p_94_s_axi_buser);
        p_94_s_axi_buser->set_sv_netview_offsetfromdp(14859816);
        xsim_sc_channel<0, bool > *p_94_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_bvalid.bind(*p_94_s_axi_bvalid);
        p_94_s_axi_bvalid->set_sv_netview_offsetfromdp(14859872);
        xsim_sc_channel<0, bool > *p_94_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_bready.bind(*p_94_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->s_axi_araddr.bind(*p_94_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_94_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_94->s_axi_arlen.bind(*p_94_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arlen);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->s_axi_arburst.bind(*p_94_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_94_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_94->s_axi_arlock.bind(*p_94_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->s_axi_arcache.bind(*p_94_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_94_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_94->s_axi_arprot.bind(*p_94_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->s_axi_arqos.bind(*p_94_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->s_axi_aruser.bind(*p_94_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_94_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_arvalid.bind(*p_94_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_94_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_arready.bind(*p_94_s_axi_arready);
        p_94_s_axi_arready->set_sv_netview_offsetfromdp(14860488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->s_axi_rdata.bind(*p_94_s_axi_rdata);
        p_94_s_axi_rdata->set_sv_netview_offsetfromdp(14860544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->s_axi_rresp.bind(*p_94_s_axi_rresp);
        p_94_s_axi_rresp->set_sv_netview_offsetfromdp(14860600);
        xsim_sc_channel<0, bool > *p_94_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_rlast.bind(*p_94_s_axi_rlast);
        p_94_s_axi_rlast->set_sv_netview_offsetfromdp(14860656);
        xsim_sc_channel<0, bool > *p_94_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_rvalid.bind(*p_94_s_axi_rvalid);
        p_94_s_axi_rvalid->set_sv_netview_offsetfromdp(14860712);
        xsim_sc_channel<0, bool > *p_94_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_94->s_axi_rready.bind(*p_94_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_94_s_axi_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_m_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->m_axi_awaddr.bind(*p_94_m_axi_awaddr);
        p_94_m_axi_awaddr->set_sv_netview_offsetfromdp(14860824);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_94_m_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_94->m_axi_awlen.bind(*p_94_m_axi_awlen);
        p_94_m_axi_awlen->set_sv_netview_offsetfromdp(14860880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_m_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->m_axi_awburst.bind(*p_94_m_axi_awburst);
        p_94_m_axi_awburst->set_sv_netview_offsetfromdp(14860936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_94_m_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_94->m_axi_awlock.bind(*p_94_m_axi_awlock);
        p_94_m_axi_awlock->set_sv_netview_offsetfromdp(14860992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_m_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->m_axi_awcache.bind(*p_94_m_axi_awcache);
        p_94_m_axi_awcache->set_sv_netview_offsetfromdp(14861048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_94_m_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_94->m_axi_awprot.bind(*p_94_m_axi_awprot);
        p_94_m_axi_awprot->set_sv_netview_offsetfromdp(14861104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_m_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->m_axi_awqos.bind(*p_94_m_axi_awqos);
        p_94_m_axi_awqos->set_sv_netview_offsetfromdp(14861160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_m_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->m_axi_awuser.bind(*p_94_m_axi_awuser);
        p_94_m_axi_awuser->set_sv_netview_offsetfromdp(14861216);
        xsim_sc_channel<0, bool > *p_94_m_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_awvalid.bind(*p_94_m_axi_awvalid);
        p_94_m_axi_awvalid->set_sv_netview_offsetfromdp(14861272);
        xsim_sc_channel<0, bool > *p_94_m_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_awready.bind(*p_94_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_m_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->m_axi_wdata.bind(*p_94_m_axi_wdata);
        p_94_m_axi_wdata->set_sv_netview_offsetfromdp(14861384);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_m_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->m_axi_wstrb.bind(*p_94_m_axi_wstrb);
        p_94_m_axi_wstrb->set_sv_netview_offsetfromdp(14861440);
        xsim_sc_channel<0, bool > *p_94_m_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_wlast.bind(*p_94_m_axi_wlast);
        p_94_m_axi_wlast->set_sv_netview_offsetfromdp(14861496);
        xsim_sc_channel<0, bool > *p_94_m_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_wvalid.bind(*p_94_m_axi_wvalid);
        p_94_m_axi_wvalid->set_sv_netview_offsetfromdp(14861552);
        xsim_sc_channel<0, bool > *p_94_m_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_wready.bind(*p_94_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_m_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->m_axi_bresp.bind(*p_94_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_94_m_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_94->m_axi_buser.bind(*p_94_m_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_buser);
        xsim_sc_channel<0, bool > *p_94_m_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_bvalid.bind(*p_94_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_bvalid);
        xsim_sc_channel<0, bool > *p_94_m_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_bready.bind(*p_94_m_axi_bready);
        p_94_m_axi_bready->set_sv_netview_offsetfromdp(14861832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_m_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->m_axi_araddr.bind(*p_94_m_axi_araddr);
        p_94_m_axi_araddr->set_sv_netview_offsetfromdp(14861888);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_94_m_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_94->m_axi_arlen.bind(*p_94_m_axi_arlen);
        p_94_m_axi_arlen->set_sv_netview_offsetfromdp(14861944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_m_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->m_axi_arburst.bind(*p_94_m_axi_arburst);
        p_94_m_axi_arburst->set_sv_netview_offsetfromdp(14862000);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_94_m_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_94->m_axi_arlock.bind(*p_94_m_axi_arlock);
        p_94_m_axi_arlock->set_sv_netview_offsetfromdp(14862056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_m_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->m_axi_arcache.bind(*p_94_m_axi_arcache);
        p_94_m_axi_arcache->set_sv_netview_offsetfromdp(14862112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_94_m_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_94->m_axi_arprot.bind(*p_94_m_axi_arprot);
        p_94_m_axi_arprot->set_sv_netview_offsetfromdp(14862168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_94_m_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_94->m_axi_arqos.bind(*p_94_m_axi_arqos);
        p_94_m_axi_arqos->set_sv_netview_offsetfromdp(14862224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_m_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->m_axi_aruser.bind(*p_94_m_axi_aruser);
        p_94_m_axi_aruser->set_sv_netview_offsetfromdp(14862280);
        xsim_sc_channel<0, bool > *p_94_m_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_arvalid.bind(*p_94_m_axi_arvalid);
        p_94_m_axi_arvalid->set_sv_netview_offsetfromdp(14862336);
        xsim_sc_channel<0, bool > *p_94_m_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_arready.bind(*p_94_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_94_m_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_94->m_axi_rdata.bind(*p_94_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_94_m_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_94->m_axi_rresp.bind(*p_94_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_rresp);
        xsim_sc_channel<0, bool > *p_94_m_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_rlast.bind(*p_94_m_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_rlast);
        xsim_sc_channel<0, bool > *p_94_m_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_rvalid.bind(*p_94_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_94_m_axi_rvalid);
        xsim_sc_channel<0, bool > *p_94_m_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_94->m_axi_rready.bind(*p_94_m_axi_rready);
        p_94_m_axi_rready->set_sv_netview_offsetfromdp(14862672);
        sc_inst_95 = new pfm_top_xbar_0(".pfm_top_wrapper.pfm_top_i.static_region.connect_to_es_cu.xbar");
        sc_inst_95->xsim_set_dbg_index(810);
        xsim_sc_channel<0, bool > *p_95_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_95->aclk.bind(*p_95_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_95_aclk);
        xsim_sc_channel<0, bool > *p_95_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_95->aresetn.bind(*p_95_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_95_aresetn);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_95_s_axi_awaddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_95->s_axi_awaddr.bind(*p_95_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_awaddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_95_s_axi_awprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_95->s_axi_awprot.bind(*p_95_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_awprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_awvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_awvalid.bind(*p_95_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_awvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_awready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_awready.bind(*p_95_s_axi_awready);
        p_95_s_axi_awready->set_sv_netview_offsetfromdp(14977696);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_95_s_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_95->s_axi_wdata.bind(*p_95_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_95_s_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_95->s_axi_wstrb.bind(*p_95_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_wstrb);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_wvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_wvalid.bind(*p_95_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_wvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_wready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_wready.bind(*p_95_s_axi_wready);
        p_95_s_axi_wready->set_sv_netview_offsetfromdp(14977920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_s_axi_bresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->s_axi_bresp.bind(*p_95_s_axi_bresp);
        p_95_s_axi_bresp->set_sv_netview_offsetfromdp(14977976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_bvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_bvalid.bind(*p_95_s_axi_bvalid);
        p_95_s_axi_bvalid->set_sv_netview_offsetfromdp(14978032);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_bready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_bready.bind(*p_95_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_bready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_95_s_axi_araddr = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_95->s_axi_araddr.bind(*p_95_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_araddr);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_95_s_axi_arprot = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_95->s_axi_arprot.bind(*p_95_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_arprot);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_arvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_arvalid.bind(*p_95_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_arvalid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_arready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_arready.bind(*p_95_s_axi_arready);
        p_95_s_axi_arready->set_sv_netview_offsetfromdp(14978312);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_95_s_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_95->s_axi_rdata.bind(*p_95_s_axi_rdata);
        p_95_s_axi_rdata->set_sv_netview_offsetfromdp(14978368);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_s_axi_rresp = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->s_axi_rresp.bind(*p_95_s_axi_rresp);
        p_95_s_axi_rresp->set_sv_netview_offsetfromdp(14978424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_rvalid = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_rvalid.bind(*p_95_s_axi_rvalid);
        p_95_s_axi_rvalid->set_sv_netview_offsetfromdp(14978480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_95_s_axi_rready = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_95->s_axi_rready.bind(*p_95_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_95_s_axi_rready);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_95_m_axi_awaddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_95->m_axi_awaddr.bind(*p_95_m_axi_awaddr);
        p_95_m_axi_awaddr->set_sv_netview_offsetfromdp(14978592);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_95_m_axi_awprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_95->m_axi_awprot.bind(*p_95_m_axi_awprot);
        p_95_m_axi_awprot->set_sv_netview_offsetfromdp(14978648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_awvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_awvalid.bind(*p_95_m_axi_awvalid);
        p_95_m_axi_awvalid->set_sv_netview_offsetfromdp(14978704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_awready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_awready.bind(*p_95_m_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_awready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_95_m_axi_wdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_95->m_axi_wdata.bind(*p_95_m_axi_wdata);
        p_95_m_axi_wdata->set_sv_netview_offsetfromdp(14978816);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_95_m_axi_wstrb = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_95->m_axi_wstrb.bind(*p_95_m_axi_wstrb);
        p_95_m_axi_wstrb->set_sv_netview_offsetfromdp(14978872);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_wvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_wvalid.bind(*p_95_m_axi_wvalid);
        p_95_m_axi_wvalid->set_sv_netview_offsetfromdp(14978928);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_wready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_wready.bind(*p_95_m_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_wready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_95_m_axi_bresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_95->m_axi_bresp.bind(*p_95_m_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_bresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_bvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_bvalid.bind(*p_95_m_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_bvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_bready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_bready.bind(*p_95_m_axi_bready);
        p_95_m_axi_bready->set_sv_netview_offsetfromdp(14979152);
        xsim_sc_channel<256, sc_dt::sc_bv<256> > *p_95_m_axi_araddr = new xsim_sc_channel<256, sc_dt::sc_bv<256> >();
        sc_inst_95->m_axi_araddr.bind(*p_95_m_axi_araddr);
        p_95_m_axi_araddr->set_sv_netview_offsetfromdp(14979208);
        xsim_sc_channel<12, sc_dt::sc_bv<12> > *p_95_m_axi_arprot = new xsim_sc_channel<12, sc_dt::sc_bv<12> >();
        sc_inst_95->m_axi_arprot.bind(*p_95_m_axi_arprot);
        p_95_m_axi_arprot->set_sv_netview_offsetfromdp(14979264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_arvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_arvalid.bind(*p_95_m_axi_arvalid);
        p_95_m_axi_arvalid->set_sv_netview_offsetfromdp(14979320);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_arready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_arready.bind(*p_95_m_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_arready);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_95_m_axi_rdata = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_95->m_axi_rdata.bind(*p_95_m_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_rdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_95_m_axi_rresp = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_95->m_axi_rresp.bind(*p_95_m_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_rresp);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_rvalid = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_rvalid.bind(*p_95_m_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_95_m_axi_rvalid);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_95_m_axi_rready = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_95->m_axi_rready.bind(*p_95_m_axi_rready);
        p_95_m_axi_rready->set_sv_netview_offsetfromdp(14979600);
        sc_inst_96 = new pfm_top_embedded_schedular_0(".pfm_top_wrapper.pfm_top_i.static_region.embedded_schedular");
        sc_inst_96->xsim_set_dbg_index(258);
        xsim_sc_channel<128, sc_dt::sc_bv<128> > *p_96_interrupt_cu = new xsim_sc_channel<128, sc_dt::sc_bv<128> >();
        sc_inst_96->interrupt_cu.bind(*p_96_interrupt_cu);
        (*_glb_hdl_sc_channel_map).push_back(p_96_interrupt_cu);
        xsim_sc_channel<0, bool > *p_96_interrupt_m2m = new xsim_sc_channel<0, bool >();
        sc_inst_96->interrupt_m2m.bind(*p_96_interrupt_m2m);
        p_96_interrupt_m2m->set_sv_netview_offsetfromdp(14981432);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_aresetn.bind(*p_96_s_axi_ctrl_user_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_aresetn);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_aresetn.bind(*p_96_s_axi_data_p2p_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_aresetn);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_aresetn.bind(*p_96_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_96_m_axi_data_m2m_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_96->m_axi_data_m2m_aresetn.bind(*p_96_m_axi_data_m2m_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_96_m_axi_data_m2m_aresetn);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_aclk.bind(*p_96_s_axi_ctrl_user_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_aclk);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_aclk.bind(*p_96_s_axi_data_p2p_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_aclk);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_aclk.bind(*p_96_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_96_m_axi_data_m2m_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_96->m_axi_data_m2m_aclk.bind(*p_96_m_axi_data_m2m_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_96_m_axi_data_m2m_aclk);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_96_s_axi_data_p2p_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_96->s_axi_data_p2p_awaddr.bind(*p_96_s_axi_data_p2p_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_96_s_axi_data_p2p_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_96->s_axi_data_p2p_awlen.bind(*p_96_s_axi_data_p2p_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_s_axi_data_p2p_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->s_axi_data_p2p_awsize.bind(*p_96_s_axi_data_p2p_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_s_axi_data_p2p_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->s_axi_data_p2p_awburst.bind(*p_96_s_axi_data_p2p_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awburst);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_awlock.bind(*p_96_s_axi_data_p2p_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_awcache.bind(*p_96_s_axi_data_p2p_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_s_axi_data_p2p_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->s_axi_data_p2p_awprot.bind(*p_96_s_axi_data_p2p_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_awregion.bind(*p_96_s_axi_data_p2p_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_awqos.bind(*p_96_s_axi_data_p2p_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_s_axi_data_p2p_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->s_axi_data_p2p_awuser.bind(*p_96_s_axi_data_p2p_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awuser);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_awvalid.bind(*p_96_s_axi_data_p2p_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_awvalid);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_awready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_awready.bind(*p_96_s_axi_data_p2p_awready);
        p_96_s_axi_data_p2p_awready->set_sv_netview_offsetfromdp(14982552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_s_axi_data_p2p_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->s_axi_data_p2p_wdata.bind(*p_96_s_axi_data_p2p_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_wstrb.bind(*p_96_s_axi_data_p2p_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_wstrb);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_wlast.bind(*p_96_s_axi_data_p2p_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_wlast);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_wvalid.bind(*p_96_s_axi_data_p2p_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_wvalid);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_wready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_wready.bind(*p_96_s_axi_data_p2p_wready);
        p_96_s_axi_data_p2p_wready->set_sv_netview_offsetfromdp(14982832);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_s_axi_data_p2p_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->s_axi_data_p2p_bresp.bind(*p_96_s_axi_data_p2p_bresp);
        p_96_s_axi_data_p2p_bresp->set_sv_netview_offsetfromdp(14982888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_96_s_axi_data_p2p_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_96->s_axi_data_p2p_buser.bind(*p_96_s_axi_data_p2p_buser);
        p_96_s_axi_data_p2p_buser->set_sv_netview_offsetfromdp(14982944);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_bvalid.bind(*p_96_s_axi_data_p2p_bvalid);
        p_96_s_axi_data_p2p_bvalid->set_sv_netview_offsetfromdp(14983000);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_bready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_bready.bind(*p_96_s_axi_data_p2p_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_96_s_axi_data_p2p_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_96->s_axi_data_p2p_araddr.bind(*p_96_s_axi_data_p2p_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_96_s_axi_data_p2p_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_96->s_axi_data_p2p_arlen.bind(*p_96_s_axi_data_p2p_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_s_axi_data_p2p_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->s_axi_data_p2p_arsize.bind(*p_96_s_axi_data_p2p_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_s_axi_data_p2p_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->s_axi_data_p2p_arburst.bind(*p_96_s_axi_data_p2p_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arburst);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_arlock.bind(*p_96_s_axi_data_p2p_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_arcache.bind(*p_96_s_axi_data_p2p_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_s_axi_data_p2p_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->s_axi_data_p2p_arprot.bind(*p_96_s_axi_data_p2p_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_arregion.bind(*p_96_s_axi_data_p2p_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_data_p2p_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_data_p2p_arqos.bind(*p_96_s_axi_data_p2p_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_s_axi_data_p2p_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->s_axi_data_p2p_aruser.bind(*p_96_s_axi_data_p2p_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_aruser);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_arvalid.bind(*p_96_s_axi_data_p2p_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_arvalid);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_arready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_arready.bind(*p_96_s_axi_data_p2p_arready);
        p_96_s_axi_data_p2p_arready->set_sv_netview_offsetfromdp(14983728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_s_axi_data_p2p_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->s_axi_data_p2p_rdata.bind(*p_96_s_axi_data_p2p_rdata);
        p_96_s_axi_data_p2p_rdata->set_sv_netview_offsetfromdp(14983784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_s_axi_data_p2p_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->s_axi_data_p2p_rresp.bind(*p_96_s_axi_data_p2p_rresp);
        p_96_s_axi_data_p2p_rresp->set_sv_netview_offsetfromdp(14983840);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_rlast.bind(*p_96_s_axi_data_p2p_rlast);
        p_96_s_axi_data_p2p_rlast->set_sv_netview_offsetfromdp(14983896);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_rvalid.bind(*p_96_s_axi_data_p2p_rvalid);
        p_96_s_axi_data_p2p_rvalid->set_sv_netview_offsetfromdp(14983952);
        xsim_sc_channel<0, bool > *p_96_s_axi_data_p2p_rready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_data_p2p_rready.bind(*p_96_s_axi_data_p2p_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_data_p2p_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_96_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_96->maxi_lite_mb_awaddr.bind(*p_96_maxi_lite_mb_awaddr);
        p_96_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(14984064);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->maxi_lite_mb_awprot.bind(*p_96_maxi_lite_mb_awprot);
        p_96_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(14984120);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_awvalid.bind(*p_96_maxi_lite_mb_awvalid);
        p_96_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(14984176);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_awready.bind(*p_96_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->maxi_lite_mb_wdata.bind(*p_96_maxi_lite_mb_wdata);
        p_96_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(14984288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->maxi_lite_mb_wstrb.bind(*p_96_maxi_lite_mb_wstrb);
        p_96_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(14984344);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_wvalid.bind(*p_96_maxi_lite_mb_wvalid);
        p_96_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(14984400);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_wready.bind(*p_96_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->maxi_lite_mb_bresp.bind(*p_96_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_bvalid.bind(*p_96_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_bready.bind(*p_96_maxi_lite_mb_bready);
        p_96_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(14984624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_96_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_96->maxi_lite_mb_araddr.bind(*p_96_maxi_lite_mb_araddr);
        p_96_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(14984680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->maxi_lite_mb_arprot.bind(*p_96_maxi_lite_mb_arprot);
        p_96_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(14984736);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_arvalid.bind(*p_96_maxi_lite_mb_arvalid);
        p_96_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(14984792);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_arready.bind(*p_96_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->maxi_lite_mb_rdata.bind(*p_96_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->maxi_lite_mb_rresp.bind(*p_96_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_rvalid.bind(*p_96_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_96_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_96->maxi_lite_mb_rready.bind(*p_96_maxi_lite_mb_rready);
        p_96_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(14985072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_96_s_axi_ctrl_user_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_96->s_axi_ctrl_user_awaddr.bind(*p_96_s_axi_ctrl_user_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_s_axi_ctrl_user_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->s_axi_ctrl_user_awprot.bind(*p_96_s_axi_ctrl_user_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_awprot);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_awvalid.bind(*p_96_s_axi_ctrl_user_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_awvalid);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_awready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_awready.bind(*p_96_s_axi_ctrl_user_awready);
        p_96_s_axi_ctrl_user_awready->set_sv_netview_offsetfromdp(14985296);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_s_axi_ctrl_user_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->s_axi_ctrl_user_wdata.bind(*p_96_s_axi_ctrl_user_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_96_s_axi_ctrl_user_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_96->s_axi_ctrl_user_wstrb.bind(*p_96_s_axi_ctrl_user_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_wstrb);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_wvalid.bind(*p_96_s_axi_ctrl_user_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_wvalid);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_wready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_wready.bind(*p_96_s_axi_ctrl_user_wready);
        p_96_s_axi_ctrl_user_wready->set_sv_netview_offsetfromdp(14985520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_s_axi_ctrl_user_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->s_axi_ctrl_user_bresp.bind(*p_96_s_axi_ctrl_user_bresp);
        p_96_s_axi_ctrl_user_bresp->set_sv_netview_offsetfromdp(14985576);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_bvalid.bind(*p_96_s_axi_ctrl_user_bvalid);
        p_96_s_axi_ctrl_user_bvalid->set_sv_netview_offsetfromdp(14985632);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_bready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_bready.bind(*p_96_s_axi_ctrl_user_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_96_s_axi_ctrl_user_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_96->s_axi_ctrl_user_araddr.bind(*p_96_s_axi_ctrl_user_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_96_s_axi_ctrl_user_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_96->s_axi_ctrl_user_arprot.bind(*p_96_s_axi_ctrl_user_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_arprot);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_arvalid.bind(*p_96_s_axi_ctrl_user_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_arvalid);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_arready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_arready.bind(*p_96_s_axi_ctrl_user_arready);
        p_96_s_axi_ctrl_user_arready->set_sv_netview_offsetfromdp(14985912);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_96_s_axi_ctrl_user_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_96->s_axi_ctrl_user_rdata.bind(*p_96_s_axi_ctrl_user_rdata);
        p_96_s_axi_ctrl_user_rdata->set_sv_netview_offsetfromdp(14985968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_96_s_axi_ctrl_user_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_96->s_axi_ctrl_user_rresp.bind(*p_96_s_axi_ctrl_user_rresp);
        p_96_s_axi_ctrl_user_rresp->set_sv_netview_offsetfromdp(14986024);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_rvalid.bind(*p_96_s_axi_ctrl_user_rvalid);
        p_96_s_axi_ctrl_user_rvalid->set_sv_netview_offsetfromdp(14986080);
        xsim_sc_channel<0, bool > *p_96_s_axi_ctrl_user_rready = new xsim_sc_channel<0, bool >();
        sc_inst_96->s_axi_ctrl_user_rready.bind(*p_96_s_axi_ctrl_user_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_96_s_axi_ctrl_user_rready);
        sc_inst_97 = new pfm_top_sim_address_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_address_0");
        sc_inst_97->xsim_set_dbg_index(259);
        xsim_sc_channel<0, bool > *p_97_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_aclk.bind(*p_97_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_97_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_aresetn.bind(*p_97_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_97_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_aximm_aclk.bind(*p_97_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_97_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_aximm_aresetn.bind(*p_97_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_97_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_AWVALID.bind(*p_97_m_aximm_AWVALID);
        p_97_m_aximm_AWVALID->set_sv_netview_offsetfromdp(14986464);
        xsim_sc_channel<0, bool > *p_97_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_AWREADY.bind(*p_97_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_97_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_97->m_aximm_AWADDR.bind(*p_97_m_aximm_AWADDR);
        p_97_m_aximm_AWADDR->set_sv_netview_offsetfromdp(14986576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_AWID.bind(*p_97_m_aximm_AWID);
        p_97_m_aximm_AWID->set_sv_netview_offsetfromdp(14986632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_97_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_97->m_aximm_AWLEN.bind(*p_97_m_aximm_AWLEN);
        p_97_m_aximm_AWLEN->set_sv_netview_offsetfromdp(14986688);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->m_aximm_AWSIZE.bind(*p_97_m_aximm_AWSIZE);
        p_97_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(14986744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->m_aximm_AWBURST.bind(*p_97_m_aximm_AWBURST);
        p_97_m_aximm_AWBURST->set_sv_netview_offsetfromdp(14986800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_AWLOCK.bind(*p_97_m_aximm_AWLOCK);
        p_97_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(14986856);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_AWCACHE.bind(*p_97_m_aximm_AWCACHE);
        p_97_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(14986912);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->m_aximm_AWPROT.bind(*p_97_m_aximm_AWPROT);
        p_97_m_aximm_AWPROT->set_sv_netview_offsetfromdp(14986968);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_AWREGION.bind(*p_97_m_aximm_AWREGION);
        p_97_m_aximm_AWREGION->set_sv_netview_offsetfromdp(14987024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_AWQOS.bind(*p_97_m_aximm_AWQOS);
        p_97_m_aximm_AWQOS->set_sv_netview_offsetfromdp(14987080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_AWUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_AWUSER.bind(*p_97_m_aximm_AWUSER);
        p_97_m_aximm_AWUSER->set_sv_netview_offsetfromdp(14987136);
        xsim_sc_channel<0, bool > *p_97_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_WVALID.bind(*p_97_m_aximm_WVALID);
        p_97_m_aximm_WVALID->set_sv_netview_offsetfromdp(14987192);
        xsim_sc_channel<0, bool > *p_97_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_WREADY.bind(*p_97_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->m_aximm_WDATA.bind(*p_97_m_aximm_WDATA);
        p_97_m_aximm_WDATA->set_sv_netview_offsetfromdp(14987304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_WSTRB.bind(*p_97_m_aximm_WSTRB);
        p_97_m_aximm_WSTRB->set_sv_netview_offsetfromdp(14987360);
        xsim_sc_channel<0, bool > *p_97_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_WLAST.bind(*p_97_m_aximm_WLAST);
        p_97_m_aximm_WLAST->set_sv_netview_offsetfromdp(14987416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_WUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_WUSER.bind(*p_97_m_aximm_WUSER);
        p_97_m_aximm_WUSER->set_sv_netview_offsetfromdp(14987472);
        xsim_sc_channel<0, bool > *p_97_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_ARVALID.bind(*p_97_m_aximm_ARVALID);
        p_97_m_aximm_ARVALID->set_sv_netview_offsetfromdp(14987528);
        xsim_sc_channel<0, bool > *p_97_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_ARREADY.bind(*p_97_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_97_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_97->m_aximm_ARADDR.bind(*p_97_m_aximm_ARADDR);
        p_97_m_aximm_ARADDR->set_sv_netview_offsetfromdp(14987640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_ARID.bind(*p_97_m_aximm_ARID);
        p_97_m_aximm_ARID->set_sv_netview_offsetfromdp(14987696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_97_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_97->m_aximm_ARLEN.bind(*p_97_m_aximm_ARLEN);
        p_97_m_aximm_ARLEN->set_sv_netview_offsetfromdp(14987752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->m_aximm_ARSIZE.bind(*p_97_m_aximm_ARSIZE);
        p_97_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(14987808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->m_aximm_ARBURST.bind(*p_97_m_aximm_ARBURST);
        p_97_m_aximm_ARBURST->set_sv_netview_offsetfromdp(14987864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_ARLOCK.bind(*p_97_m_aximm_ARLOCK);
        p_97_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(14987920);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_ARCACHE.bind(*p_97_m_aximm_ARCACHE);
        p_97_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(14987976);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->m_aximm_ARPROT.bind(*p_97_m_aximm_ARPROT);
        p_97_m_aximm_ARPROT->set_sv_netview_offsetfromdp(14988032);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_ARREGION.bind(*p_97_m_aximm_ARREGION);
        p_97_m_aximm_ARREGION->set_sv_netview_offsetfromdp(14988088);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->m_aximm_ARQOS.bind(*p_97_m_aximm_ARQOS);
        p_97_m_aximm_ARQOS->set_sv_netview_offsetfromdp(14988144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_ARUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_ARUSER.bind(*p_97_m_aximm_ARUSER);
        p_97_m_aximm_ARUSER->set_sv_netview_offsetfromdp(14988200);
        xsim_sc_channel<0, bool > *p_97_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_RVALID.bind(*p_97_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_97_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_RREADY.bind(*p_97_m_aximm_RREADY);
        p_97_m_aximm_RREADY->set_sv_netview_offsetfromdp(14988312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->m_aximm_RDATA.bind(*p_97_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_97_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_RLAST.bind(*p_97_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_RID.bind(*p_97_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->m_aximm_RRESP.bind(*p_97_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_RRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_RUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_RUSER.bind(*p_97_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_97_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_BVALID.bind(*p_97_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_97_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_97->m_aximm_BREADY.bind(*p_97_m_aximm_BREADY);
        p_97_m_aximm_BREADY->set_sv_netview_offsetfromdp(14988704);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->m_aximm_BRESP.bind(*p_97_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_BID.bind(*p_97_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->m_aximm_BUSER.bind(*p_97_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_97_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->s_axi_awaddr.bind(*p_97_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_97_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_97->s_axi_awlen.bind(*p_97_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->s_axi_awsize.bind(*p_97_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->s_axi_awburst.bind(*p_97_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->s_axi_awlock.bind(*p_97_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_awcache.bind(*p_97_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->s_axi_awprot.bind(*p_97_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_awregion.bind(*p_97_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_awqos.bind(*p_97_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_s_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->s_axi_awuser.bind(*p_97_s_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awuser);
        xsim_sc_channel<0, bool > *p_97_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_awvalid.bind(*p_97_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_97_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_awready.bind(*p_97_s_axi_awready);
        p_97_s_axi_awready->set_sv_netview_offsetfromdp(14989544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->s_axi_wdata.bind(*p_97_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_wstrb.bind(*p_97_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_97_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_wlast.bind(*p_97_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_97_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_wvalid.bind(*p_97_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_97_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_wready.bind(*p_97_s_axi_wready);
        p_97_s_axi_wready->set_sv_netview_offsetfromdp(14989824);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->s_axi_bresp.bind(*p_97_s_axi_bresp);
        p_97_s_axi_bresp->set_sv_netview_offsetfromdp(14989880);
        xsim_sc_channel<0, bool > *p_97_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_bvalid.bind(*p_97_s_axi_bvalid);
        p_97_s_axi_bvalid->set_sv_netview_offsetfromdp(14989936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_s_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->s_axi_buser.bind(*p_97_s_axi_buser);
        p_97_s_axi_buser->set_sv_netview_offsetfromdp(14989992);
        xsim_sc_channel<0, bool > *p_97_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_bready.bind(*p_97_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->s_axi_araddr.bind(*p_97_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_97_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_97->s_axi_arlen.bind(*p_97_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->s_axi_arsize.bind(*p_97_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->s_axi_arburst.bind(*p_97_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_97_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_97->s_axi_arlock.bind(*p_97_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_arcache.bind(*p_97_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_97_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_97->s_axi_arprot.bind(*p_97_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_arregion.bind(*p_97_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_97_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_97->s_axi_arqos.bind(*p_97_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_s_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->s_axi_aruser.bind(*p_97_s_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_aruser);
        xsim_sc_channel<0, bool > *p_97_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_arvalid.bind(*p_97_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_97_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_arready.bind(*p_97_s_axi_arready);
        p_97_s_axi_arready->set_sv_netview_offsetfromdp(14990720);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_97_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_97->s_axi_rdata.bind(*p_97_s_axi_rdata);
        p_97_s_axi_rdata->set_sv_netview_offsetfromdp(14990776);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_97_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_97->s_axi_rresp.bind(*p_97_s_axi_rresp);
        p_97_s_axi_rresp->set_sv_netview_offsetfromdp(14990832);
        xsim_sc_channel<0, bool > *p_97_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_rlast.bind(*p_97_s_axi_rlast);
        p_97_s_axi_rlast->set_sv_netview_offsetfromdp(14990888);
        xsim_sc_channel<0, bool > *p_97_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_rvalid.bind(*p_97_s_axi_rvalid);
        p_97_s_axi_rvalid->set_sv_netview_offsetfromdp(14990944);
        xsim_sc_channel<0, bool > *p_97_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_97->s_axi_rready.bind(*p_97_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_97_s_axi_rready);
        sc_inst_98 = new pfm_top_sim_qdma_0_0(".pfm_top_wrapper.pfm_top_i.static_region.sim_qdma_0");
        sc_inst_98->xsim_set_dbg_index(260);
        xsim_sc_channel<0, bool > *p_98_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_aclk.bind(*p_98_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_98_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_aresetn.bind(*p_98_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_aclk.bind(*p_98_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_aresetn.bind(*p_98_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_aresetn);
        xsim_sc_channel<0, bool > *p_98_s_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_aximm_aclk.bind(*p_98_s_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_aximm_aclk);
        xsim_sc_channel<0, bool > *p_98_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_aximm_aresetn.bind(*p_98_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_98_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_98->m_axictrl_awaddr.bind(*p_98_m_axictrl_awaddr);
        p_98_m_axictrl_awaddr->set_sv_netview_offsetfromdp(14991440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->m_axictrl_awprot.bind(*p_98_m_axictrl_awprot);
        p_98_m_axictrl_awprot->set_sv_netview_offsetfromdp(14991496);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_awvalid.bind(*p_98_m_axictrl_awvalid);
        p_98_m_axictrl_awvalid->set_sv_netview_offsetfromdp(14991552);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_awready.bind(*p_98_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_axictrl_wdata.bind(*p_98_m_axictrl_wdata);
        p_98_m_axictrl_wdata->set_sv_netview_offsetfromdp(14991664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_axictrl_wstrb.bind(*p_98_m_axictrl_wstrb);
        p_98_m_axictrl_wstrb->set_sv_netview_offsetfromdp(14991720);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_wvalid.bind(*p_98_m_axictrl_wvalid);
        p_98_m_axictrl_wvalid->set_sv_netview_offsetfromdp(14991776);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_wready.bind(*p_98_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_wready);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_bvalid.bind(*p_98_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_bready.bind(*p_98_m_axictrl_bready);
        p_98_m_axictrl_bready->set_sv_netview_offsetfromdp(14991944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->m_axictrl_bresp.bind(*p_98_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_bresp);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_98_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_98->m_axictrl_araddr.bind(*p_98_m_axictrl_araddr);
        p_98_m_axictrl_araddr->set_sv_netview_offsetfromdp(14992056);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_arvalid.bind(*p_98_m_axictrl_arvalid);
        p_98_m_axictrl_arvalid->set_sv_netview_offsetfromdp(14992112);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_arready.bind(*p_98_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_arready);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->m_axictrl_arprot.bind(*p_98_m_axictrl_arprot);
        p_98_m_axictrl_arprot->set_sv_netview_offsetfromdp(14992224);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_axictrl_rdata.bind(*p_98_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->m_axictrl_rresp.bind(*p_98_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_rvalid.bind(*p_98_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_98_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_axictrl_rready.bind(*p_98_m_axictrl_rready);
        p_98_m_axictrl_rready->set_sv_netview_offsetfromdp(14992448);
        xsim_sc_channel<0, bool > *p_98_m_aximm_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_AWVALID.bind(*p_98_m_aximm_AWVALID);
        p_98_m_aximm_AWVALID->set_sv_netview_offsetfromdp(14992504);
        xsim_sc_channel<0, bool > *p_98_m_aximm_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_AWREADY.bind(*p_98_m_aximm_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_98_m_aximm_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_98->m_aximm_AWADDR.bind(*p_98_m_aximm_AWADDR);
        p_98_m_aximm_AWADDR->set_sv_netview_offsetfromdp(14992616);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_AWID.bind(*p_98_m_aximm_AWID);
        p_98_m_aximm_AWID->set_sv_netview_offsetfromdp(14992672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_98_m_aximm_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_98->m_aximm_AWLEN.bind(*p_98_m_aximm_AWLEN);
        p_98_m_aximm_AWLEN->set_sv_netview_offsetfromdp(14992728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_m_aximm_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->m_aximm_AWSIZE.bind(*p_98_m_aximm_AWSIZE);
        p_98_m_aximm_AWSIZE->set_sv_netview_offsetfromdp(14992784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_m_aximm_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->m_aximm_AWBURST.bind(*p_98_m_aximm_AWBURST);
        p_98_m_aximm_AWBURST->set_sv_netview_offsetfromdp(14992840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_AWLOCK.bind(*p_98_m_aximm_AWLOCK);
        p_98_m_aximm_AWLOCK->set_sv_netview_offsetfromdp(14992896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_AWCACHE.bind(*p_98_m_aximm_AWCACHE);
        p_98_m_aximm_AWCACHE->set_sv_netview_offsetfromdp(14992952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_m_aximm_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->m_aximm_AWPROT.bind(*p_98_m_aximm_AWPROT);
        p_98_m_aximm_AWPROT->set_sv_netview_offsetfromdp(14993008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_AWREGION.bind(*p_98_m_aximm_AWREGION);
        p_98_m_aximm_AWREGION->set_sv_netview_offsetfromdp(14993064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_AWQOS.bind(*p_98_m_aximm_AWQOS);
        p_98_m_aximm_AWQOS->set_sv_netview_offsetfromdp(14993120);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_aximm_AWUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_aximm_AWUSER.bind(*p_98_m_aximm_AWUSER);
        p_98_m_aximm_AWUSER->set_sv_netview_offsetfromdp(14993176);
        xsim_sc_channel<0, bool > *p_98_m_aximm_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_WVALID.bind(*p_98_m_aximm_WVALID);
        p_98_m_aximm_WVALID->set_sv_netview_offsetfromdp(14993232);
        xsim_sc_channel<0, bool > *p_98_m_aximm_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_WREADY.bind(*p_98_m_aximm_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_aximm_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_aximm_WDATA.bind(*p_98_m_aximm_WDATA);
        p_98_m_aximm_WDATA->set_sv_netview_offsetfromdp(14993344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_WSTRB.bind(*p_98_m_aximm_WSTRB);
        p_98_m_aximm_WSTRB->set_sv_netview_offsetfromdp(14993400);
        xsim_sc_channel<0, bool > *p_98_m_aximm_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_WLAST.bind(*p_98_m_aximm_WLAST);
        p_98_m_aximm_WLAST->set_sv_netview_offsetfromdp(14993456);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_aximm_WUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_aximm_WUSER.bind(*p_98_m_aximm_WUSER);
        p_98_m_aximm_WUSER->set_sv_netview_offsetfromdp(14993512);
        xsim_sc_channel<0, bool > *p_98_m_aximm_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_ARVALID.bind(*p_98_m_aximm_ARVALID);
        p_98_m_aximm_ARVALID->set_sv_netview_offsetfromdp(14993568);
        xsim_sc_channel<0, bool > *p_98_m_aximm_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_ARREADY.bind(*p_98_m_aximm_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_98_m_aximm_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_98->m_aximm_ARADDR.bind(*p_98_m_aximm_ARADDR);
        p_98_m_aximm_ARADDR->set_sv_netview_offsetfromdp(14993680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_ARID.bind(*p_98_m_aximm_ARID);
        p_98_m_aximm_ARID->set_sv_netview_offsetfromdp(14993736);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_98_m_aximm_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_98->m_aximm_ARLEN.bind(*p_98_m_aximm_ARLEN);
        p_98_m_aximm_ARLEN->set_sv_netview_offsetfromdp(14993792);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_m_aximm_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->m_aximm_ARSIZE.bind(*p_98_m_aximm_ARSIZE);
        p_98_m_aximm_ARSIZE->set_sv_netview_offsetfromdp(14993848);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_m_aximm_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->m_aximm_ARBURST.bind(*p_98_m_aximm_ARBURST);
        p_98_m_aximm_ARBURST->set_sv_netview_offsetfromdp(14993904);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_ARLOCK.bind(*p_98_m_aximm_ARLOCK);
        p_98_m_aximm_ARLOCK->set_sv_netview_offsetfromdp(14993960);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_ARCACHE.bind(*p_98_m_aximm_ARCACHE);
        p_98_m_aximm_ARCACHE->set_sv_netview_offsetfromdp(14994016);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_m_aximm_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->m_aximm_ARPROT.bind(*p_98_m_aximm_ARPROT);
        p_98_m_aximm_ARPROT->set_sv_netview_offsetfromdp(14994072);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_ARREGION.bind(*p_98_m_aximm_ARREGION);
        p_98_m_aximm_ARREGION->set_sv_netview_offsetfromdp(14994128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_m_aximm_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->m_aximm_ARQOS.bind(*p_98_m_aximm_ARQOS);
        p_98_m_aximm_ARQOS->set_sv_netview_offsetfromdp(14994184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_aximm_ARUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_aximm_ARUSER.bind(*p_98_m_aximm_ARUSER);
        p_98_m_aximm_ARUSER->set_sv_netview_offsetfromdp(14994240);
        xsim_sc_channel<0, bool > *p_98_m_aximm_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_RVALID.bind(*p_98_m_aximm_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_RVALID);
        xsim_sc_channel<0, bool > *p_98_m_aximm_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_RREADY.bind(*p_98_m_aximm_RREADY);
        p_98_m_aximm_RREADY->set_sv_netview_offsetfromdp(14994352);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_aximm_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_aximm_RDATA.bind(*p_98_m_aximm_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_RDATA);
        xsim_sc_channel<0, bool > *p_98_m_aximm_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_RLAST.bind(*p_98_m_aximm_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_RID.bind(*p_98_m_aximm_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_m_aximm_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->m_aximm_RRESP.bind(*p_98_m_aximm_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_RRESP);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_m_aximm_RUSER = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->m_aximm_RUSER.bind(*p_98_m_aximm_RUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_RUSER);
        xsim_sc_channel<0, bool > *p_98_m_aximm_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_BVALID.bind(*p_98_m_aximm_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_BVALID);
        xsim_sc_channel<0, bool > *p_98_m_aximm_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_98->m_aximm_BREADY.bind(*p_98_m_aximm_BREADY);
        p_98_m_aximm_BREADY->set_sv_netview_offsetfromdp(14994744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_m_aximm_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->m_aximm_BRESP.bind(*p_98_m_aximm_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_BID.bind(*p_98_m_aximm_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_BID);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_m_aximm_BUSER = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->m_aximm_BUSER.bind(*p_98_m_aximm_BUSER);
        (*_glb_hdl_sc_channel_map).push_back(p_98_m_aximm_BUSER);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_s_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->s_axi_awaddr.bind(*p_98_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_98_s_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_98->s_axi_awlen.bind(*p_98_s_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_s_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->s_axi_awsize.bind(*p_98_s_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_s_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->s_axi_awburst.bind(*p_98_s_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_s_axi_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->s_axi_awlock.bind(*p_98_s_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_awcache.bind(*p_98_s_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->s_axi_awprot.bind(*p_98_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_awregion.bind(*p_98_s_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_awqos.bind(*p_98_s_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awqos);
        xsim_sc_channel<0, bool > *p_98_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_awvalid.bind(*p_98_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_98_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_awready.bind(*p_98_s_axi_awready);
        p_98_s_axi_awready->set_sv_netview_offsetfromdp(14995528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->s_axi_wdata.bind(*p_98_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_wstrb.bind(*p_98_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_98_s_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_wlast.bind(*p_98_s_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_wlast);
        xsim_sc_channel<0, bool > *p_98_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_wvalid.bind(*p_98_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_98_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_wready.bind(*p_98_s_axi_wready);
        p_98_s_axi_wready->set_sv_netview_offsetfromdp(14995808);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->s_axi_bresp.bind(*p_98_s_axi_bresp);
        p_98_s_axi_bresp->set_sv_netview_offsetfromdp(14995864);
        xsim_sc_channel<0, bool > *p_98_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_bvalid.bind(*p_98_s_axi_bvalid);
        p_98_s_axi_bvalid->set_sv_netview_offsetfromdp(14995920);
        xsim_sc_channel<0, bool > *p_98_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_bready.bind(*p_98_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_bready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_s_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->s_axi_araddr.bind(*p_98_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_98_s_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_98->s_axi_arlen.bind(*p_98_s_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_s_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->s_axi_arsize.bind(*p_98_s_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_s_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->s_axi_arburst.bind(*p_98_s_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_98_s_axi_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_98->s_axi_arlock.bind(*p_98_s_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_arcache.bind(*p_98_s_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_98_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_98->s_axi_arprot.bind(*p_98_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_arregion.bind(*p_98_s_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_98_s_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_98->s_axi_arqos.bind(*p_98_s_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arqos);
        xsim_sc_channel<0, bool > *p_98_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_arvalid.bind(*p_98_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_98_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_arready.bind(*p_98_s_axi_arready);
        p_98_s_axi_arready->set_sv_netview_offsetfromdp(14996592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_98_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_98->s_axi_rdata.bind(*p_98_s_axi_rdata);
        p_98_s_axi_rdata->set_sv_netview_offsetfromdp(14996648);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_98_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_98->s_axi_rresp.bind(*p_98_s_axi_rresp);
        p_98_s_axi_rresp->set_sv_netview_offsetfromdp(14996704);
        xsim_sc_channel<0, bool > *p_98_s_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_rlast.bind(*p_98_s_axi_rlast);
        p_98_s_axi_rlast->set_sv_netview_offsetfromdp(14996760);
        xsim_sc_channel<0, bool > *p_98_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_rvalid.bind(*p_98_s_axi_rvalid);
        p_98_s_axi_rvalid->set_sv_netview_offsetfromdp(14996816);
        xsim_sc_channel<0, bool > *p_98_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_98->s_axi_rready.bind(*p_98_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_98_s_axi_rready);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_98_usr_irq_req = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_98->usr_irq_req.bind(*p_98_usr_irq_req);
        (*_glb_hdl_sc_channel_map).push_back(p_98_usr_irq_req);
        xsim_sc_channel<16, sc_dt::sc_bv<16> > *p_98_usr_irq_ack = new xsim_sc_channel<16, sc_dt::sc_bv<16> >();
        sc_inst_98->usr_irq_ack.bind(*p_98_usr_irq_ack);
        p_98_usr_irq_ack->set_sv_netview_offsetfromdp(14996984);
        sc_inst_99 = new pfm_top_smartconnect_0_0(".pfm_top_wrapper.pfm_top_i.static_region.smartconnect_0");
        sc_inst_99->xsim_set_dbg_index(261);
        xsim_sc_channel<0, bool > *p_99_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_99->aclk.bind(*p_99_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_99_aclk);
        xsim_sc_channel<0, bool > *p_99_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_99->aresetn.bind(*p_99_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_99_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_awid.bind(*p_99_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_99_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_99->S00_AXI_awaddr.bind(*p_99_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_99_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_99->S00_AXI_awlen.bind(*p_99_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->S00_AXI_awsize.bind(*p_99_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->S00_AXI_awburst.bind(*p_99_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_awlock.bind(*p_99_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->S00_AXI_awcache.bind(*p_99_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->S00_AXI_awprot.bind(*p_99_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->S00_AXI_awqos.bind(*p_99_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_S00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->S00_AXI_awuser.bind(*p_99_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awuser);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_awvalid.bind(*p_99_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_awvalid);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_awready.bind(*p_99_S00_AXI_awready);
        p_99_S00_AXI_awready->set_sv_netview_offsetfromdp(14997816);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->S00_AXI_wdata.bind(*p_99_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->S00_AXI_wstrb.bind(*p_99_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_wstrb);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_wlast.bind(*p_99_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_wlast);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_S00_AXI_wuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->S00_AXI_wuser.bind(*p_99_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_wuser);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_wvalid.bind(*p_99_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_wvalid);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_wready.bind(*p_99_S00_AXI_wready);
        p_99_S00_AXI_wready->set_sv_netview_offsetfromdp(14998152);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_bid.bind(*p_99_S00_AXI_bid);
        p_99_S00_AXI_bid->set_sv_netview_offsetfromdp(14998208);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->S00_AXI_bresp.bind(*p_99_S00_AXI_bresp);
        p_99_S00_AXI_bresp->set_sv_netview_offsetfromdp(14998264);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_buser.bind(*p_99_S00_AXI_buser);
        p_99_S00_AXI_buser->set_sv_netview_offsetfromdp(14998320);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_bvalid.bind(*p_99_S00_AXI_bvalid);
        p_99_S00_AXI_bvalid->set_sv_netview_offsetfromdp(14998376);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_bready.bind(*p_99_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_arid.bind(*p_99_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_99_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_99->S00_AXI_araddr.bind(*p_99_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_99_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_99->S00_AXI_arlen.bind(*p_99_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->S00_AXI_arsize.bind(*p_99_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->S00_AXI_arburst.bind(*p_99_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_arlock.bind(*p_99_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->S00_AXI_arcache.bind(*p_99_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->S00_AXI_arprot.bind(*p_99_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->S00_AXI_arqos.bind(*p_99_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_S00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->S00_AXI_aruser.bind(*p_99_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_aruser);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_arvalid.bind(*p_99_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_arvalid);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_arready.bind(*p_99_S00_AXI_arready);
        p_99_S00_AXI_arready->set_sv_netview_offsetfromdp(14999104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->S00_AXI_rid.bind(*p_99_S00_AXI_rid);
        p_99_S00_AXI_rid->set_sv_netview_offsetfromdp(14999160);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->S00_AXI_rdata.bind(*p_99_S00_AXI_rdata);
        p_99_S00_AXI_rdata->set_sv_netview_offsetfromdp(14999216);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->S00_AXI_rresp.bind(*p_99_S00_AXI_rresp);
        p_99_S00_AXI_rresp->set_sv_netview_offsetfromdp(14999272);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_rlast.bind(*p_99_S00_AXI_rlast);
        p_99_S00_AXI_rlast->set_sv_netview_offsetfromdp(14999328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_S00_AXI_ruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->S00_AXI_ruser.bind(*p_99_S00_AXI_ruser);
        p_99_S00_AXI_ruser->set_sv_netview_offsetfromdp(14999384);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_rvalid.bind(*p_99_S00_AXI_rvalid);
        p_99_S00_AXI_rvalid->set_sv_netview_offsetfromdp(14999440);
        xsim_sc_channel<0, bool > *p_99_S00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_99->S00_AXI_rready.bind(*p_99_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_S00_AXI_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M00_AXI_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M00_AXI_awaddr.bind(*p_99_M00_AXI_awaddr);
        p_99_M00_AXI_awaddr->set_sv_netview_offsetfromdp(14999552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_99_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_99->M00_AXI_awlen.bind(*p_99_M00_AXI_awlen);
        p_99_M00_AXI_awlen->set_sv_netview_offsetfromdp(14999608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M00_AXI_awsize.bind(*p_99_M00_AXI_awsize);
        p_99_M00_AXI_awsize->set_sv_netview_offsetfromdp(14999664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M00_AXI_awburst.bind(*p_99_M00_AXI_awburst);
        p_99_M00_AXI_awburst->set_sv_netview_offsetfromdp(14999720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_M00_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->M00_AXI_awlock.bind(*p_99_M00_AXI_awlock);
        p_99_M00_AXI_awlock->set_sv_netview_offsetfromdp(14999776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M00_AXI_awcache.bind(*p_99_M00_AXI_awcache);
        p_99_M00_AXI_awcache->set_sv_netview_offsetfromdp(14999832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M00_AXI_awprot.bind(*p_99_M00_AXI_awprot);
        p_99_M00_AXI_awprot->set_sv_netview_offsetfromdp(14999888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M00_AXI_awqos.bind(*p_99_M00_AXI_awqos);
        p_99_M00_AXI_awqos->set_sv_netview_offsetfromdp(14999944);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M00_AXI_awuser.bind(*p_99_M00_AXI_awuser);
        p_99_M00_AXI_awuser->set_sv_netview_offsetfromdp(15000000);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_awvalid.bind(*p_99_M00_AXI_awvalid);
        p_99_M00_AXI_awvalid->set_sv_netview_offsetfromdp(15000056);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_awready.bind(*p_99_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M00_AXI_wdata.bind(*p_99_M00_AXI_wdata);
        p_99_M00_AXI_wdata->set_sv_netview_offsetfromdp(15000168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M00_AXI_wstrb.bind(*p_99_M00_AXI_wstrb);
        p_99_M00_AXI_wstrb->set_sv_netview_offsetfromdp(15000224);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_wlast.bind(*p_99_M00_AXI_wlast);
        p_99_M00_AXI_wlast->set_sv_netview_offsetfromdp(15000280);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_wvalid.bind(*p_99_M00_AXI_wvalid);
        p_99_M00_AXI_wvalid->set_sv_netview_offsetfromdp(15000336);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_wready.bind(*p_99_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M00_AXI_bresp.bind(*p_99_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->M00_AXI_buser.bind(*p_99_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_buser);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_bvalid.bind(*p_99_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_bready.bind(*p_99_M00_AXI_bready);
        p_99_M00_AXI_bready->set_sv_netview_offsetfromdp(15000616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M00_AXI_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M00_AXI_araddr.bind(*p_99_M00_AXI_araddr);
        p_99_M00_AXI_araddr->set_sv_netview_offsetfromdp(15000672);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_99_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_99->M00_AXI_arlen.bind(*p_99_M00_AXI_arlen);
        p_99_M00_AXI_arlen->set_sv_netview_offsetfromdp(15000728);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M00_AXI_arsize.bind(*p_99_M00_AXI_arsize);
        p_99_M00_AXI_arsize->set_sv_netview_offsetfromdp(15000784);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M00_AXI_arburst.bind(*p_99_M00_AXI_arburst);
        p_99_M00_AXI_arburst->set_sv_netview_offsetfromdp(15000840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_M00_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->M00_AXI_arlock.bind(*p_99_M00_AXI_arlock);
        p_99_M00_AXI_arlock->set_sv_netview_offsetfromdp(15000896);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M00_AXI_arcache.bind(*p_99_M00_AXI_arcache);
        p_99_M00_AXI_arcache->set_sv_netview_offsetfromdp(15000952);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M00_AXI_arprot.bind(*p_99_M00_AXI_arprot);
        p_99_M00_AXI_arprot->set_sv_netview_offsetfromdp(15001008);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M00_AXI_arqos.bind(*p_99_M00_AXI_arqos);
        p_99_M00_AXI_arqos->set_sv_netview_offsetfromdp(15001064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M00_AXI_aruser.bind(*p_99_M00_AXI_aruser);
        p_99_M00_AXI_aruser->set_sv_netview_offsetfromdp(15001120);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_arvalid.bind(*p_99_M00_AXI_arvalid);
        p_99_M00_AXI_arvalid->set_sv_netview_offsetfromdp(15001176);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_arready.bind(*p_99_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M00_AXI_rdata.bind(*p_99_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M00_AXI_rresp.bind(*p_99_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_rresp);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_rlast.bind(*p_99_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_rlast);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_rvalid.bind(*p_99_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M00_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_99_M00_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M00_AXI_rready.bind(*p_99_M00_AXI_rready);
        p_99_M00_AXI_rready->set_sv_netview_offsetfromdp(15001512);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_99_M01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_99->M01_AXI_awaddr.bind(*p_99_M01_AXI_awaddr);
        p_99_M01_AXI_awaddr->set_sv_netview_offsetfromdp(15001568);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_99_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_99->M01_AXI_awlen.bind(*p_99_M01_AXI_awlen);
        p_99_M01_AXI_awlen->set_sv_netview_offsetfromdp(15001624);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M01_AXI_awsize.bind(*p_99_M01_AXI_awsize);
        p_99_M01_AXI_awsize->set_sv_netview_offsetfromdp(15001680);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M01_AXI_awburst.bind(*p_99_M01_AXI_awburst);
        p_99_M01_AXI_awburst->set_sv_netview_offsetfromdp(15001736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_M01_AXI_awlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->M01_AXI_awlock.bind(*p_99_M01_AXI_awlock);
        p_99_M01_AXI_awlock->set_sv_netview_offsetfromdp(15001792);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M01_AXI_awcache.bind(*p_99_M01_AXI_awcache);
        p_99_M01_AXI_awcache->set_sv_netview_offsetfromdp(15001848);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M01_AXI_awprot.bind(*p_99_M01_AXI_awprot);
        p_99_M01_AXI_awprot->set_sv_netview_offsetfromdp(15001904);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M01_AXI_awqos.bind(*p_99_M01_AXI_awqos);
        p_99_M01_AXI_awqos->set_sv_netview_offsetfromdp(15001960);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M01_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M01_AXI_awuser.bind(*p_99_M01_AXI_awuser);
        p_99_M01_AXI_awuser->set_sv_netview_offsetfromdp(15002016);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_awvalid.bind(*p_99_M01_AXI_awvalid);
        p_99_M01_AXI_awvalid->set_sv_netview_offsetfromdp(15002072);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_awready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_awready.bind(*p_99_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M01_AXI_wdata.bind(*p_99_M01_AXI_wdata);
        p_99_M01_AXI_wdata->set_sv_netview_offsetfromdp(15002184);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M01_AXI_wstrb.bind(*p_99_M01_AXI_wstrb);
        p_99_M01_AXI_wstrb->set_sv_netview_offsetfromdp(15002240);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_wlast.bind(*p_99_M01_AXI_wlast);
        p_99_M01_AXI_wlast->set_sv_netview_offsetfromdp(15002296);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_wvalid.bind(*p_99_M01_AXI_wvalid);
        p_99_M01_AXI_wvalid->set_sv_netview_offsetfromdp(15002352);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_wready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_wready.bind(*p_99_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M01_AXI_bresp.bind(*p_99_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_M01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->M01_AXI_buser.bind(*p_99_M01_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_buser);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_bvalid.bind(*p_99_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_bvalid);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_bready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_bready.bind(*p_99_M01_AXI_bready);
        p_99_M01_AXI_bready->set_sv_netview_offsetfromdp(15002632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_99_M01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_99->M01_AXI_araddr.bind(*p_99_M01_AXI_araddr);
        p_99_M01_AXI_araddr->set_sv_netview_offsetfromdp(15002688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_99_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_99->M01_AXI_arlen.bind(*p_99_M01_AXI_arlen);
        p_99_M01_AXI_arlen->set_sv_netview_offsetfromdp(15002744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M01_AXI_arsize.bind(*p_99_M01_AXI_arsize);
        p_99_M01_AXI_arsize->set_sv_netview_offsetfromdp(15002800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M01_AXI_arburst.bind(*p_99_M01_AXI_arburst);
        p_99_M01_AXI_arburst->set_sv_netview_offsetfromdp(15002856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_99_M01_AXI_arlock = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_99->M01_AXI_arlock.bind(*p_99_M01_AXI_arlock);
        p_99_M01_AXI_arlock->set_sv_netview_offsetfromdp(15002912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M01_AXI_arcache.bind(*p_99_M01_AXI_arcache);
        p_99_M01_AXI_arcache->set_sv_netview_offsetfromdp(15002968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_99_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_99->M01_AXI_arprot.bind(*p_99_M01_AXI_arprot);
        p_99_M01_AXI_arprot->set_sv_netview_offsetfromdp(15003024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_99_M01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_99->M01_AXI_arqos.bind(*p_99_M01_AXI_arqos);
        p_99_M01_AXI_arqos->set_sv_netview_offsetfromdp(15003080);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M01_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M01_AXI_aruser.bind(*p_99_M01_AXI_aruser);
        p_99_M01_AXI_aruser->set_sv_netview_offsetfromdp(15003136);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_arvalid.bind(*p_99_M01_AXI_arvalid);
        p_99_M01_AXI_arvalid->set_sv_netview_offsetfromdp(15003192);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_arready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_arready.bind(*p_99_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_99_M01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_99->M01_AXI_rdata.bind(*p_99_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_99_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_99->M01_AXI_rresp.bind(*p_99_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_rresp);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_rlast.bind(*p_99_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_rlast);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_rvalid.bind(*p_99_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_99_M01_AXI_rvalid);
        xsim_sc_channel<0, bool > *p_99_M01_AXI_rready = new xsim_sc_channel<0, bool >();
        sc_inst_99->M01_AXI_rready.bind(*p_99_M01_AXI_rready);
        p_99_M01_AXI_rready->set_sv_netview_offsetfromdp(15003528);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
        delete sc_inst_23;
        delete sc_inst_24;
        delete sc_inst_25;
        delete sc_inst_26;
        delete sc_inst_27;
        delete sc_inst_28;
        delete sc_inst_29;
        delete sc_inst_30;
        delete sc_inst_31;
        delete sc_inst_32;
        delete sc_inst_33;
        delete sc_inst_34;
        delete sc_inst_35;
        delete sc_inst_36;
        delete sc_inst_37;
        delete sc_inst_38;
        delete sc_inst_39;
        delete sc_inst_40;
        delete sc_inst_41;
        delete sc_inst_42;
        delete sc_inst_43;
        delete sc_inst_44;
        delete sc_inst_45;
        delete sc_inst_46;
        delete sc_inst_47;
        delete sc_inst_48;
        delete sc_inst_49;
        delete sc_inst_50;
        delete sc_inst_51;
        delete sc_inst_52;
        delete sc_inst_53;
        delete sc_inst_54;
        delete sc_inst_55;
        delete sc_inst_56;
        delete sc_inst_57;
        delete sc_inst_58;
        delete sc_inst_59;
        delete sc_inst_60;
        delete sc_inst_61;
        delete sc_inst_62;
        delete sc_inst_63;
        delete sc_inst_64;
        delete sc_inst_65;
        delete sc_inst_66;
        delete sc_inst_67;
        delete sc_inst_68;
        delete sc_inst_69;
        delete sc_inst_70;
        delete sc_inst_71;
        delete sc_inst_72;
        delete sc_inst_73;
        delete sc_inst_74;
        delete sc_inst_75;
        delete sc_inst_76;
        delete sc_inst_77;
        delete sc_inst_78;
        delete sc_inst_79;
        delete sc_inst_80;
        delete sc_inst_81;
        delete sc_inst_82;
        delete sc_inst_83;
        delete sc_inst_84;
        delete sc_inst_85;
        delete sc_inst_86;
        delete sc_inst_87;
        delete sc_inst_88;
        delete sc_inst_89;
        delete sc_inst_90;
        delete sc_inst_91;
        delete sc_inst_92;
        delete sc_inst_93;
        delete sc_inst_94;
        delete sc_inst_95;
        delete sc_inst_96;
        delete sc_inst_97;
        delete sc_inst_98;
        delete sc_inst_99;
    }
